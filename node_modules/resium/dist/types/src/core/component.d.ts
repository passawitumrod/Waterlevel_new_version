import React from "react";
import { Options, EventkeyMap } from "./hooks";
export { EventkeyMap };
export interface CesiumComponentOptions<Element, Props, Context, ProvidecContext = any, State = any> extends Options<Element, Props, Context, ProvidecContext, State> {
    renderContainer?: boolean;
    noChildren?: boolean;
    containerProps?: (keyof Props)[] | ((props: Props) => Partial<React.DetailedHTMLProps<React.HTMLAttributes<HTMLDivElement>, HTMLDivElement>>);
    defaultProps?: Partial<Props>;
}
export interface CesiumComponentRef<Element> {
    cesiumElement?: Element;
}
export declare type CesiumComponentType<Element, Props> = React.ForwardRefExoticComponent<React.PropsWithoutRef<Props> & React.RefAttributes<CesiumComponentRef<Element>>>;
export declare const createCesiumComponent: <Element_1, Props, Context, ProvidecContext = any, State = any>({ renderContainer, noChildren, containerProps, defaultProps, ...options }: CesiumComponentOptions<Element_1, Props, Context, ProvidecContext, State>) => CesiumComponentType<Element_1, Props>;

/// <reference types="cesium" />
export interface TimeDynamicPointCloudCesiumProps {
    clock?: Cesium.Clock;
    intervals: Cesium.TimeIntervalCollection;
    show?: boolean;
    modelMatrix?: Cesium.Matrix4;
    shadows?: Cesium.ShadowMode;
    maximumMemoryUsage?: number;
    style?: Cesium.Cesium3DTileStyle;
    clippingPlanes?: Cesium.ClippingPlaneCollection;
}
export interface TimeDynamicPointCloudCesiumReadonlyProps {
    shading?: {
        attenuation?: boolean;
        geometricErrorScale?: number;
        maximumAttenuation?: number;
        baseResolution?: number;
        eyeDomeLighting?: boolean;
        eyeDomeLightingStrength?: number;
        eyeDomeLightingRadius?: number;
    };
}
export interface TimeDynamicPointCloudCesiumEvents {
    onFrameChange?: (pointCloud: any) => void;
}
export interface TimeDynamicPointCloudProps extends TimeDynamicPointCloudCesiumProps, TimeDynamicPointCloudCesiumReadonlyProps, TimeDynamicPointCloudCesiumEvents {
    onReady?: (pointCloud: any) => void;
}
declare const TimeDynamicPointCloud: import("../core/component").CesiumComponentType<any, TimeDynamicPointCloudProps>;
export default TimeDynamicPointCloud;

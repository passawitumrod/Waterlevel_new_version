import { GroundPrimitive as CesiumGroundPrimitive } from "cesium";
import { EventProps } from "../core/EventManager";
export interface GroundPrimitiveCesiumProps {
    appearance?: Cesium.Appearance;
    debugShowBoundingVolume?: boolean;
    debugShowShadowVolume?: boolean;
    classificationType?: any;
    depthFailAppearance?: Cesium.Appearance;
    show?: boolean;
}
export interface GroundPrimitiveCesiumReadonlyProps {
    allowPicking?: boolean;
    asynchronous?: boolean;
    compressVertices?: boolean;
    geometryInstances?: Cesium.GeometryInstance[] | Cesium.GeometryInstance;
    interleave?: boolean;
    releaseGeometryInstances?: boolean;
    vertexCacheOptimize?: boolean;
}
export interface GroundPrimitiveProps extends GroundPrimitiveCesiumProps, GroundPrimitiveCesiumReadonlyProps, EventProps<any> {
    onReady?: (primitive: Cesium.GroundPrimitive) => void;
}
declare const GroundPrimitive: import("../core/component").CesiumComponentType<CesiumGroundPrimitive, GroundPrimitiveProps>;
export default GroundPrimitive;

import { EllipsoidGraphics as CesiumEllipsoidGraphics } from "cesium";
export interface EllipsoidGraphicsCesiumProps {
    heightReference?: Cesium.Property | Cesium.HeightReference;
    radii?: Cesium.Property | Cesium.Cartesian3;
    show?: Cesium.Property | boolean;
    fill?: Cesium.Property | boolean;
    innerRadii?: Cesium.Property | Cesium.Cartesian3;
    material?: Cesium.MaterialProperty | Cesium.Color | string;
    maximumClock?: Cesium.Property | number;
    maximumCone?: Cesium.Property | number;
    minimumClock?: Cesium.Property | number;
    minimumCone?: Cesium.Property | number;
    outline?: Cesium.Property | boolean;
    outlineColor?: Cesium.Property | Cesium.Color;
    outlineWidth?: Cesium.Property | number;
    subdivisions?: Cesium.Property | number;
    stackPartitions?: Cesium.Property | number;
    slicePartitions?: Cesium.Property | number;
    shadows?: Cesium.Property | Cesium.ShadowMode;
    distanceDisplayCondition?: Cesium.Property | Cesium.DistanceDisplayCondition;
}
export interface EllipsoidGraphicsCesiumEvents {
    onDefinitionChange?: () => void;
}
export interface EllipsoidGraphicsProps extends EllipsoidGraphicsCesiumProps, EllipsoidGraphicsCesiumEvents {
}
declare const EllipsoidGraphics: import("../core/component").CesiumComponentType<CesiumEllipsoidGraphics, EllipsoidGraphicsProps>;
export default EllipsoidGraphics;

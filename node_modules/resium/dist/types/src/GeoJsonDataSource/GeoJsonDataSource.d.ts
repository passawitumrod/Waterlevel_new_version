import { GeoJsonDataSource as CesiumGeoJsonDataSource } from "cesium";
export interface GeoJsonDataSourceCesiumProps {
    clustering?: Cesium.EntityCluster;
    name?: string;
}
export interface GeoJsonDataSourceCesiumEvents {
    onChange?: (GeoJsonDataSource: Cesium.GeoJsonDataSource) => void;
    onError?: (GeoJsonDataSource: Cesium.GeoJsonDataSource, error: any) => void;
    onLoading?: (GeoJsonDataSource: Cesium.GeoJsonDataSource, isLoaded: boolean) => void;
}
export interface GeoJsonDataSourceProps extends GeoJsonDataSourceCesiumProps, GeoJsonDataSourceCesiumEvents {
    data?: Cesium.Resource | string | object;
    clampToGround?: boolean;
    sourceUri?: string;
    credit?: Cesium.Credit | string;
    show?: boolean;
    markerSize?: number;
    markerSymbol?: string;
    markerColor?: Cesium.Color;
    stroke?: Cesium.Color;
    strokeWidth?: number;
    fill?: Cesium.Color;
    describe?: (properties: {
        [key: string]: any;
    }, nameProperty: string) => Cesium.Property | string;
    onLoad?: (GeoJsonDataSouce: Cesium.GeoJsonDataSource) => void;
}
declare const GeoJsonDataSource: import("../core/component").CesiumComponentType<CesiumGeoJsonDataSource, GeoJsonDataSourceProps>;
export default GeoJsonDataSource;

import { CorridorGraphics as CesiumCorridorGraphics } from "cesium";
export interface CorridorGraphicsCesiumProps {
    positions?: Cesium.Property | Cesium.Cartesian3[];
    width?: Cesium.Property | number;
    cornerType?: Cesium.Property | Cesium.CornerType;
    height?: Cesium.Property | number;
    heightReference?: Cesium.Property | Cesium.HeightReference;
    extrudedHeight?: Cesium.Property | number;
    extrudedHeightReference?: Cesium.Property | Cesium.HeightReference;
    show?: Cesium.Property | boolean;
    fill?: Cesium.Property | boolean;
    material?: Cesium.MaterialProperty | Cesium.Color | string;
    outline?: Cesium.Property | boolean;
    outlineColor?: Cesium.Property | Cesium.Color;
    outlineWidth?: Cesium.Property | number;
    granularity?: Cesium.Property | number;
    shadows?: Cesium.Property | boolean;
    distanceDisplayCondition?: Cesium.Property | Cesium.DistanceDisplayCondition;
    zIndex?: Cesium.ConstantProperty | number;
    classificationType?: Cesium.Property | Cesium.ClassificationType;
}
export interface CorridorCesiumEvents {
    onDefinitionChange?: () => void;
}
export interface CorridorGraphicsProps extends CorridorGraphicsCesiumProps, CorridorCesiumEvents {
}
declare const CorridorGraphics: import("../core/component").CesiumComponentType<CesiumCorridorGraphics, CorridorGraphicsProps>;
export default CorridorGraphics;

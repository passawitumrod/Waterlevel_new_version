{"ast":null,"code":"import Color from \"../Core/Color.js\";\nimport DeveloperError from \"../Core/DeveloperError.js\";\nimport Resource from \"../Core/Resource.js\";\nimport ColorMaterialProperty from \"./ColorMaterialProperty.js\";\nimport createPropertyDescriptor from \"./createPropertyDescriptor.js\";\nimport ImageMaterialProperty from \"./ImageMaterialProperty.js\";\n\nfunction createMaterialProperty(value) {\n  if (value instanceof Color) {\n    return new ColorMaterialProperty(value);\n  }\n\n  if (typeof value === \"string\" || value instanceof Resource || value instanceof HTMLCanvasElement || value instanceof HTMLVideoElement) {\n    var result = new ImageMaterialProperty();\n    result.image = value;\n    return result;\n  } //>>includeStart('debug', pragmas.debug);\n\n\n  throw new DeveloperError(\"Unable to infer material type: \" + value); //>>includeEnd('debug');\n}\n/**\n * @private\n */\n\n\nfunction createMaterialPropertyDescriptor(name, configurable) {\n  return createPropertyDescriptor(name, configurable, createMaterialProperty);\n}\n\nexport default createMaterialPropertyDescriptor;","map":{"version":3,"sources":["C:/Users/passa/Desktop/WaterLevelReact/node_modules/cesium/Source/DataSources/createMaterialPropertyDescriptor.js"],"names":["Color","DeveloperError","Resource","ColorMaterialProperty","createPropertyDescriptor","ImageMaterialProperty","createMaterialProperty","value","HTMLCanvasElement","HTMLVideoElement","result","image","createMaterialPropertyDescriptor","name","configurable"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,kBAAlB;AACA,OAAOC,cAAP,MAA2B,2BAA3B;AACA,OAAOC,QAAP,MAAqB,qBAArB;AACA,OAAOC,qBAAP,MAAkC,4BAAlC;AACA,OAAOC,wBAAP,MAAqC,+BAArC;AACA,OAAOC,qBAAP,MAAkC,4BAAlC;;AAEA,SAASC,sBAAT,CAAgCC,KAAhC,EAAuC;AACrC,MAAIA,KAAK,YAAYP,KAArB,EAA4B;AAC1B,WAAO,IAAIG,qBAAJ,CAA0BI,KAA1B,CAAP;AACD;;AAED,MACE,OAAOA,KAAP,KAAiB,QAAjB,IACAA,KAAK,YAAYL,QADjB,IAEAK,KAAK,YAAYC,iBAFjB,IAGAD,KAAK,YAAYE,gBAJnB,EAKE;AACA,QAAIC,MAAM,GAAG,IAAIL,qBAAJ,EAAb;AACAK,IAAAA,MAAM,CAACC,KAAP,GAAeJ,KAAf;AACA,WAAOG,MAAP;AACD,GAdoC,CAgBrC;;;AACA,QAAM,IAAIT,cAAJ,CAAmB,oCAAoCM,KAAvD,CAAN,CAjBqC,CAkBrC;AACD;AAED;;;;;AAGA,SAASK,gCAAT,CAA0CC,IAA1C,EAAgDC,YAAhD,EAA8D;AAC5D,SAAOV,wBAAwB,CAACS,IAAD,EAAOC,YAAP,EAAqBR,sBAArB,CAA/B;AACD;;AACD,eAAeM,gCAAf","sourcesContent":["import Color from \"../Core/Color.js\";\nimport DeveloperError from \"../Core/DeveloperError.js\";\nimport Resource from \"../Core/Resource.js\";\nimport ColorMaterialProperty from \"./ColorMaterialProperty.js\";\nimport createPropertyDescriptor from \"./createPropertyDescriptor.js\";\nimport ImageMaterialProperty from \"./ImageMaterialProperty.js\";\n\nfunction createMaterialProperty(value) {\n  if (value instanceof Color) {\n    return new ColorMaterialProperty(value);\n  }\n\n  if (\n    typeof value === \"string\" ||\n    value instanceof Resource ||\n    value instanceof HTMLCanvasElement ||\n    value instanceof HTMLVideoElement\n  ) {\n    var result = new ImageMaterialProperty();\n    result.image = value;\n    return result;\n  }\n\n  //>>includeStart('debug', pragmas.debug);\n  throw new DeveloperError(\"Unable to infer material type: \" + value);\n  //>>includeEnd('debug');\n}\n\n/**\n * @private\n */\nfunction createMaterialPropertyDescriptor(name, configurable) {\n  return createPropertyDescriptor(name, configurable, createMaterialProperty);\n}\nexport default createMaterialPropertyDescriptor;\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import Credit from \"../Core/Credit.js\";\nimport defaultValue from \"../Core/defaultValue.js\";\nimport defined from \"../Core/defined.js\";\nimport DeveloperError from \"../Core/DeveloperError.js\";\nimport Rectangle from \"../Core/Rectangle.js\";\nimport Resource from \"../Core/Resource.js\";\nimport WebMercatorTilingScheme from \"../Core/WebMercatorTilingScheme.js\";\nimport UrlTemplateImageryProvider from \"./UrlTemplateImageryProvider.js\";\nvar defaultCredit = new Credit(\"MapQuest, Open Street Map and contributors, CC-BY-SA\");\n/**\n * An imagery provider that provides tiled imagery hosted by OpenStreetMap\n * or another provider of Slippy tiles.  The default url connects to OpenStreetMap's volunteer-run\n * servers, so you must conform to their\n * {@link http://wiki.openstreetmap.org/wiki/Tile_usage_policy|Tile Usage Policy}.\n *\n * @alias OpenStreetMapImageryProvider\n * @constructor\n *\n * @param {Object} [options] Object with the following properties:\n * @param {String} [options.url='https://a.tile.openstreetmap.org'] The OpenStreetMap server url.\n * @param {String} [options.fileExtension='png'] The file extension for images on the server.\n * @param {Rectangle} [options.rectangle=Rectangle.MAX_VALUE] The rectangle of the layer.\n * @param {Number} [options.minimumLevel=0] The minimum level-of-detail supported by the imagery provider.\n * @param {Number} [options.maximumLevel] The maximum level-of-detail supported by the imagery provider, or undefined if there is no limit.\n * @param {Ellipsoid} [options.ellipsoid] The ellipsoid.  If not specified, the WGS84 ellipsoid is used.\n * @param {Credit|String} [options.credit='MapQuest, Open Street Map and contributors, CC-BY-SA'] A credit for the data source, which is displayed on the canvas.\n * @returns {UrlTemplateImageryProvider} The imagery provider.\n *\n * @exception {DeveloperError} The rectangle and minimumLevel indicate that there are more than four tiles at the minimum level. Imagery providers with more than four tiles at the minimum level are not supported.\n *\n * @see ArcGisMapServerImageryProvider\n * @see BingMapsImageryProvider\n * @see GoogleEarthEnterpriseMapsProvider\n * @see SingleTileImageryProvider\n * @see TileMapServiceImageryProvider\n * @see WebMapServiceImageryProvider\n * @see WebMapTileServiceImageryProvider\n * @see UrlTemplateImageryProvider\n *\n *\n * @example\n * var osm = new Cesium.OpenStreetMapImageryProvider({\n *     url : 'https://a.tile.openstreetmap.org/'\n * });\n *\n * @see {@link http://wiki.openstreetmap.org/wiki/Main_Page|OpenStreetMap Wiki}\n * @see {@link http://www.w3.org/TR/cors/|Cross-Origin Resource Sharing}\n */\n\nfunction OpenStreetMapImageryProvider(options) {\n  options = defaultValue(options, defaultValue.EMPTY_OBJECT);\n  var resource = Resource.createIfNeeded(defaultValue(options.url, \"https://a.tile.openstreetmap.org/\"));\n  resource.appendForwardSlash();\n  resource.url += \"{z}/{x}/{y}.\" + defaultValue(options.fileExtension, \"png\");\n  var tilingScheme = new WebMercatorTilingScheme({\n    ellipsoid: options.ellipsoid\n  });\n  var tileWidth = 256;\n  var tileHeight = 256;\n  var minimumLevel = defaultValue(options.minimumLevel, 0);\n  var maximumLevel = options.maximumLevel;\n  var rectangle = defaultValue(options.rectangle, tilingScheme.rectangle); // Check the number of tiles at the minimum level.  If it's more than four,\n  // throw an exception, because starting at the higher minimum\n  // level will cause too many tiles to be downloaded and rendered.\n\n  var swTile = tilingScheme.positionToTileXY(Rectangle.southwest(rectangle), minimumLevel);\n  var neTile = tilingScheme.positionToTileXY(Rectangle.northeast(rectangle), minimumLevel);\n  var tileCount = (Math.abs(neTile.x - swTile.x) + 1) * (Math.abs(neTile.y - swTile.y) + 1); //>>includeStart('debug', pragmas.debug);\n\n  if (tileCount > 4) {\n    throw new DeveloperError(\"The rectangle and minimumLevel indicate that there are \" + tileCount + \" tiles at the minimum level. Imagery providers with more than four tiles at the minimum level are not supported.\");\n  } //>>includeEnd('debug');\n\n\n  var credit = defaultValue(options.credit, defaultCredit);\n\n  if (typeof credit === \"string\") {\n    credit = new Credit(credit);\n  }\n\n  UrlTemplateImageryProvider.call(this, {\n    url: resource,\n    credit: credit,\n    tilingScheme: tilingScheme,\n    tileWidth: tileWidth,\n    tileHeight: tileHeight,\n    minimumLevel: minimumLevel,\n    maximumLevel: maximumLevel,\n    rectangle: rectangle\n  });\n}\n\nif (defined(Object.create)) {\n  OpenStreetMapImageryProvider.prototype = Object.create(UrlTemplateImageryProvider.prototype);\n  OpenStreetMapImageryProvider.prototype.constructor = OpenStreetMapImageryProvider;\n}\n\nexport default OpenStreetMapImageryProvider;","map":{"version":3,"sources":["C:/Users/passa/Desktop/WaterDeployTrial/node_modules/cesium/Source/Scene/OpenStreetMapImageryProvider.js"],"names":["Credit","defaultValue","defined","DeveloperError","Rectangle","Resource","WebMercatorTilingScheme","UrlTemplateImageryProvider","defaultCredit","OpenStreetMapImageryProvider","options","EMPTY_OBJECT","resource","createIfNeeded","url","appendForwardSlash","fileExtension","tilingScheme","ellipsoid","tileWidth","tileHeight","minimumLevel","maximumLevel","rectangle","swTile","positionToTileXY","southwest","neTile","northeast","tileCount","Math","abs","x","y","credit","call","Object","create","prototype","constructor"],"mappings":"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","sourcesContent":["import Credit from \"../Core/Credit.js\";\nimport defaultValue from \"../Core/defaultValue.js\";\nimport defined from \"../Core/defined.js\";\nimport DeveloperError from \"../Core/DeveloperError.js\";\nimport Rectangle from \"../Core/Rectangle.js\";\nimport Resource from \"../Core/Resource.js\";\nimport WebMercatorTilingScheme from \"../Core/WebMercatorTilingScheme.js\";\nimport UrlTemplateImageryProvider from \"./UrlTemplateImageryProvider.js\";\n\nvar defaultCredit = new Credit(\n  \"MapQuest, Open Street Map and contributors, CC-BY-SA\"\n);\n\n/**\n * An imagery provider that provides tiled imagery hosted by OpenStreetMap\n * or another provider of Slippy tiles.  The default url connects to OpenStreetMap's volunteer-run\n * servers, so you must conform to their\n * {@link http://wiki.openstreetmap.org/wiki/Tile_usage_policy|Tile Usage Policy}.\n *\n * @alias OpenStreetMapImageryProvider\n * @constructor\n *\n * @param {Object} [options] Object with the following properties:\n * @param {String} [options.url='https://a.tile.openstreetmap.org'] The OpenStreetMap server url.\n * @param {String} [options.fileExtension='png'] The file extension for images on the server.\n * @param {Rectangle} [options.rectangle=Rectangle.MAX_VALUE] The rectangle of the layer.\n * @param {Number} [options.minimumLevel=0] The minimum level-of-detail supported by the imagery provider.\n * @param {Number} [options.maximumLevel] The maximum level-of-detail supported by the imagery provider, or undefined if there is no limit.\n * @param {Ellipsoid} [options.ellipsoid] The ellipsoid.  If not specified, the WGS84 ellipsoid is used.\n * @param {Credit|String} [options.credit='MapQuest, Open Street Map and contributors, CC-BY-SA'] A credit for the data source, which is displayed on the canvas.\n * @returns {UrlTemplateImageryProvider} The imagery provider.\n *\n * @exception {DeveloperError} The rectangle and minimumLevel indicate that there are more than four tiles at the minimum level. Imagery providers with more than four tiles at the minimum level are not supported.\n *\n * @see ArcGisMapServerImageryProvider\n * @see BingMapsImageryProvider\n * @see GoogleEarthEnterpriseMapsProvider\n * @see SingleTileImageryProvider\n * @see TileMapServiceImageryProvider\n * @see WebMapServiceImageryProvider\n * @see WebMapTileServiceImageryProvider\n * @see UrlTemplateImageryProvider\n *\n *\n * @example\n * var osm = new Cesium.OpenStreetMapImageryProvider({\n *     url : 'https://a.tile.openstreetmap.org/'\n * });\n *\n * @see {@link http://wiki.openstreetmap.org/wiki/Main_Page|OpenStreetMap Wiki}\n * @see {@link http://www.w3.org/TR/cors/|Cross-Origin Resource Sharing}\n */\nfunction OpenStreetMapImageryProvider(options) {\n  options = defaultValue(options, defaultValue.EMPTY_OBJECT);\n\n  var resource = Resource.createIfNeeded(\n    defaultValue(options.url, \"https://a.tile.openstreetmap.org/\")\n  );\n  resource.appendForwardSlash();\n  resource.url += \"{z}/{x}/{y}.\" + defaultValue(options.fileExtension, \"png\");\n\n  var tilingScheme = new WebMercatorTilingScheme({\n    ellipsoid: options.ellipsoid,\n  });\n\n  var tileWidth = 256;\n  var tileHeight = 256;\n\n  var minimumLevel = defaultValue(options.minimumLevel, 0);\n  var maximumLevel = options.maximumLevel;\n\n  var rectangle = defaultValue(options.rectangle, tilingScheme.rectangle);\n\n  // Check the number of tiles at the minimum level.  If it's more than four,\n  // throw an exception, because starting at the higher minimum\n  // level will cause too many tiles to be downloaded and rendered.\n  var swTile = tilingScheme.positionToTileXY(\n    Rectangle.southwest(rectangle),\n    minimumLevel\n  );\n  var neTile = tilingScheme.positionToTileXY(\n    Rectangle.northeast(rectangle),\n    minimumLevel\n  );\n  var tileCount =\n    (Math.abs(neTile.x - swTile.x) + 1) * (Math.abs(neTile.y - swTile.y) + 1);\n  //>>includeStart('debug', pragmas.debug);\n  if (tileCount > 4) {\n    throw new DeveloperError(\n      \"The rectangle and minimumLevel indicate that there are \" +\n        tileCount +\n        \" tiles at the minimum level. Imagery providers with more than four tiles at the minimum level are not supported.\"\n    );\n  }\n  //>>includeEnd('debug');\n\n  var credit = defaultValue(options.credit, defaultCredit);\n  if (typeof credit === \"string\") {\n    credit = new Credit(credit);\n  }\n\n  UrlTemplateImageryProvider.call(this, {\n    url: resource,\n    credit: credit,\n    tilingScheme: tilingScheme,\n    tileWidth: tileWidth,\n    tileHeight: tileHeight,\n    minimumLevel: minimumLevel,\n    maximumLevel: maximumLevel,\n    rectangle: rectangle,\n  });\n}\n\nif (defined(Object.create)) {\n  OpenStreetMapImageryProvider.prototype = Object.create(\n    UrlTemplateImageryProvider.prototype\n  );\n  OpenStreetMapImageryProvider.prototype.constructor = OpenStreetMapImageryProvider;\n}\n\nexport default OpenStreetMapImageryProvider;\n"]},"metadata":{},"sourceType":"module"}
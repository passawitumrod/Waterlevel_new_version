{"ast":null,"code":"import clone from \"../Core/clone.js\";\nimport defaultValue from \"../Core/defaultValue.js\";\nimport defined from \"../Core/defined.js\";\nimport DeveloperError from \"../Core/DeveloperError.js\";\nimport EasingFunction from \"../Core/EasingFunction.js\";\nimport getTimestamp from \"../Core/getTimestamp.js\";\nimport TimeConstants from \"../Core/TimeConstants.js\";\nimport TweenJS from \"../ThirdParty/Tween.js\";\n/**\n * A tween is an animation that interpolates the properties of two objects using an {@link EasingFunction}.  Create\n * one using {@link Scene#tweens} and {@link TweenCollection#add} and related add functions.\n *\n * @alias Tween\n * @constructor\n *\n * @private\n */\n\nfunction Tween(tweens, tweenjs, startObject, stopObject, duration, delay, easingFunction, update, complete, cancel) {\n  this._tweens = tweens;\n  this._tweenjs = tweenjs;\n  this._startObject = clone(startObject);\n  this._stopObject = clone(stopObject);\n  this._duration = duration;\n  this._delay = delay;\n  this._easingFunction = easingFunction;\n  this._update = update;\n  this._complete = complete;\n  /**\n   * The callback to call if the tween is canceled either because {@link Tween#cancelTween}\n   * was called or because the tween was removed from the collection.\n   *\n   * @type {TweenCollection~TweenCancelledCallback}\n   */\n\n  this.cancel = cancel;\n  /**\n   * @private\n   */\n\n  this.needsStart = true;\n}\n\nObject.defineProperties(Tween.prototype, {\n  /**\n   * An object with properties for initial values of the tween.  The properties of this object are changed during the tween's animation.\n   * @memberof Tween.prototype\n   *\n   * @type {Object}\n   * @readonly\n   */\n  startObject: {\n    get: function get() {\n      return this._startObject;\n    }\n  },\n\n  /**\n   * An object with properties for the final values of the tween.\n   * @memberof Tween.prototype\n   *\n   * @type {Object}\n   * @readonly\n   */\n  stopObject: {\n    get: function get() {\n      return this._stopObject;\n    }\n  },\n\n  /**\n   * The duration, in seconds, for the tween.  The tween is automatically removed from the collection when it stops.\n   * @memberof Tween.prototype\n   *\n   * @type {Number}\n   * @readonly\n   */\n  duration: {\n    get: function get() {\n      return this._duration;\n    }\n  },\n\n  /**\n   * The delay, in seconds, before the tween starts animating.\n   * @memberof Tween.prototype\n   *\n   * @type {Number}\n   * @readonly\n   */\n  delay: {\n    get: function get() {\n      return this._delay;\n    }\n  },\n\n  /**\n   * Determines the curve for animtion.\n   * @memberof Tween.prototype\n   *\n   * @type {EasingFunction}\n   * @readonly\n   */\n  easingFunction: {\n    get: function get() {\n      return this._easingFunction;\n    }\n  },\n\n  /**\n   * The callback to call at each animation update (usually tied to the a rendered frame).\n   * @memberof Tween.prototype\n   *\n   * @type {TweenCollection~TweenUpdateCallback}\n   * @readonly\n   */\n  update: {\n    get: function get() {\n      return this._update;\n    }\n  },\n\n  /**\n   * The callback to call when the tween finishes animating.\n   * @memberof Tween.prototype\n   *\n   * @type {TweenCollection~TweenCompleteCallback}\n   * @readonly\n   */\n  complete: {\n    get: function get() {\n      return this._complete;\n    }\n  },\n\n  /**\n   * @memberof Tween.prototype\n   *\n   * @private\n   */\n  tweenjs: {\n    get: function get() {\n      return this._tweenjs;\n    }\n  }\n});\n/**\n * Cancels the tween calling the {@link Tween#cancel} callback if one exists.  This\n * has no effect if the tween finished or was already canceled.\n */\n\nTween.prototype.cancelTween = function () {\n  this._tweens.remove(this);\n};\n/**\n * A collection of tweens for animating properties.  Commonly accessed using {@link Scene#tweens}.\n *\n * @alias TweenCollection\n * @constructor\n *\n * @private\n */\n\n\nfunction TweenCollection() {\n  this._tweens = [];\n}\n\nObject.defineProperties(TweenCollection.prototype, {\n  /**\n   * The number of tweens in the collection.\n   * @memberof TweenCollection.prototype\n   *\n   * @type {Number}\n   * @readonly\n   */\n  length: {\n    get: function get() {\n      return this._tweens.length;\n    }\n  }\n});\n/**\n * Creates a tween for animating between two sets of properties.  The tween starts animating at the next call to {@link TweenCollection#update}, which\n * is implicit when {@link Viewer} or {@link CesiumWidget} render the scene.\n *\n * @param {Object} [options] Object with the following properties:\n * @param {Object} options.startObject An object with properties for initial values of the tween.  The properties of this object are changed during the tween's animation.\n * @param {Object} options.stopObject An object with properties for the final values of the tween.\n * @param {Number} options.duration The duration, in seconds, for the tween.  The tween is automatically removed from the collection when it stops.\n * @param {Number} [options.delay=0.0] The delay, in seconds, before the tween starts animating.\n * @param {EasingFunction} [options.easingFunction=EasingFunction.LINEAR_NONE] Determines the curve for animtion.\n * @param {TweenCollection~TweenUpdateCallback} [options.update] The callback to call at each animation update (usually tied to the a rendered frame).\n * @param {TweenCollection~TweenCompleteCallback} [options.complete] The callback to call when the tween finishes animating.\n * @param {TweenCollection~TweenCancelledCallback} [options.cancel] The callback to call if the tween is canceled either because {@link Tween#cancelTween} was called or because the tween was removed from the collection.\n * @returns {Tween} The tween.\n *\n * @exception {DeveloperError} options.duration must be positive.\n */\n\nTweenCollection.prototype.add = function (options) {\n  options = defaultValue(options, defaultValue.EMPTY_OBJECT); //>>includeStart('debug', pragmas.debug);\n\n  if (!defined(options.startObject) || !defined(options.stopObject)) {\n    throw new DeveloperError(\"options.startObject and options.stopObject are required.\");\n  }\n\n  if (!defined(options.duration) || options.duration < 0.0) {\n    throw new DeveloperError(\"options.duration is required and must be positive.\");\n  } //>>includeEnd('debug');\n\n\n  if (options.duration === 0.0) {\n    if (defined(options.complete)) {\n      options.complete();\n    }\n\n    return new Tween(this);\n  }\n\n  var duration = options.duration / TimeConstants.SECONDS_PER_MILLISECOND;\n  var delayInSeconds = defaultValue(options.delay, 0.0);\n  var delay = delayInSeconds / TimeConstants.SECONDS_PER_MILLISECOND;\n  var easingFunction = defaultValue(options.easingFunction, EasingFunction.LINEAR_NONE);\n  var value = options.startObject;\n  var tweenjs = new TweenJS.Tween(value);\n  tweenjs.to(clone(options.stopObject), duration);\n  tweenjs.delay(delay);\n  tweenjs.easing(easingFunction);\n\n  if (defined(options.update)) {\n    tweenjs.onUpdate(function () {\n      options.update(value);\n    });\n  }\n\n  tweenjs.onComplete(defaultValue(options.complete, null));\n  tweenjs.repeat(defaultValue(options._repeat, 0.0));\n  var tween = new Tween(this, tweenjs, options.startObject, options.stopObject, options.duration, delayInSeconds, easingFunction, options.update, options.complete, options.cancel);\n\n  this._tweens.push(tween);\n\n  return tween;\n};\n/**\n * Creates a tween for animating a scalar property on the given object.  The tween starts animating at the next call to {@link TweenCollection#update}, which\n * is implicit when {@link Viewer} or {@link CesiumWidget} render the scene.\n *\n * @param {Object} [options] Object with the following properties:\n * @param {Object} options.object The object containing the property to animate.\n * @param {String} options.property The name of the property to animate.\n * @param {Number} options.startValue The initial value.\n * @param {Number} options.stopValue The final value.\n * @param {Number} [options.duration=3.0] The duration, in seconds, for the tween.  The tween is automatically removed from the collection when it stops.\n * @param {Number} [options.delay=0.0] The delay, in seconds, before the tween starts animating.\n * @param {EasingFunction} [options.easingFunction=EasingFunction.LINEAR_NONE] Determines the curve for animtion.\n * @param {TweenCollection~TweenUpdateCallback} [options.update] The callback to call at each animation update (usually tied to the a rendered frame).\n * @param {TweenCollection~TweenCompleteCallback} [options.complete] The callback to call when the tween finishes animating.\n * @param {TweenCollection~TweenCancelledCallback} [options.cancel] The callback to call if the tween is canceled either because {@link Tween#cancelTween} was called or because the tween was removed from the collection.\n * @returns {Tween} The tween.\n *\n * @exception {DeveloperError} options.object must have the specified property.\n * @exception {DeveloperError} options.duration must be positive.\n */\n\n\nTweenCollection.prototype.addProperty = function (options) {\n  options = defaultValue(options, defaultValue.EMPTY_OBJECT);\n  var object = options.object;\n  var property = options.property;\n  var startValue = options.startValue;\n  var stopValue = options.stopValue; //>>includeStart('debug', pragmas.debug);\n\n  if (!defined(object) || !defined(options.property)) {\n    throw new DeveloperError(\"options.object and options.property are required.\");\n  }\n\n  if (!defined(object[property])) {\n    throw new DeveloperError(\"options.object must have the specified property.\");\n  }\n\n  if (!defined(startValue) || !defined(stopValue)) {\n    throw new DeveloperError(\"options.startValue and options.stopValue are required.\");\n  } //>>includeEnd('debug');\n\n\n  function update(value) {\n    object[property] = value.value;\n  }\n\n  return this.add({\n    startObject: {\n      value: startValue\n    },\n    stopObject: {\n      value: stopValue\n    },\n    duration: defaultValue(options.duration, 3.0),\n    delay: options.delay,\n    easingFunction: options.easingFunction,\n    update: update,\n    complete: options.complete,\n    cancel: options.cancel,\n    _repeat: options._repeat\n  });\n};\n/**\n * Creates a tween for animating the alpha of all color uniforms on a {@link Material}.  The tween starts animating at the next call to {@link TweenCollection#update}, which\n * is implicit when {@link Viewer} or {@link CesiumWidget} render the scene.\n *\n * @param {Object} [options] Object with the following properties:\n * @param {Material} options.material The material to animate.\n * @param {Number} [options.startValue=0.0] The initial alpha value.\n * @param {Number} [options.stopValue=1.0] The final alpha value.\n * @param {Number} [options.duration=3.0] The duration, in seconds, for the tween.  The tween is automatically removed from the collection when it stops.\n * @param {Number} [options.delay=0.0] The delay, in seconds, before the tween starts animating.\n * @param {EasingFunction} [options.easingFunction=EasingFunction.LINEAR_NONE] Determines the curve for animtion.\n * @param {TweenCollection~TweenUpdateCallback} [options.update] The callback to call at each animation update (usually tied to the a rendered frame).\n * @param {TweenCollection~TweenCompleteCallback} [options.complete] The callback to call when the tween finishes animating.\n * @param {TweenCollection~TweenCancelledCallback} [options.cancel] The callback to call if the tween is canceled either because {@link Tween#cancelTween} was called or because the tween was removed from the collection.\n * @returns {Tween} The tween.\n *\n * @exception {DeveloperError} material has no properties with alpha components.\n * @exception {DeveloperError} options.duration must be positive.\n */\n\n\nTweenCollection.prototype.addAlpha = function (options) {\n  options = defaultValue(options, defaultValue.EMPTY_OBJECT);\n  var material = options.material; //>>includeStart('debug', pragmas.debug);\n\n  if (!defined(material)) {\n    throw new DeveloperError(\"options.material is required.\");\n  } //>>includeEnd('debug');\n\n\n  var properties = [];\n\n  for (var property in material.uniforms) {\n    if (material.uniforms.hasOwnProperty(property) && defined(material.uniforms[property]) && defined(material.uniforms[property].alpha)) {\n      properties.push(property);\n    }\n  } //>>includeStart('debug', pragmas.debug);\n\n\n  if (properties.length === 0) {\n    throw new DeveloperError(\"material has no properties with alpha components.\");\n  } //>>includeEnd('debug');\n\n\n  function update(value) {\n    var length = properties.length;\n\n    for (var i = 0; i < length; ++i) {\n      material.uniforms[properties[i]].alpha = value.alpha;\n    }\n  }\n\n  return this.add({\n    startObject: {\n      alpha: defaultValue(options.startValue, 0.0) // Default to fade in\n\n    },\n    stopObject: {\n      alpha: defaultValue(options.stopValue, 1.0)\n    },\n    duration: defaultValue(options.duration, 3.0),\n    delay: options.delay,\n    easingFunction: options.easingFunction,\n    update: update,\n    complete: options.complete,\n    cancel: options.cancel\n  });\n};\n/**\n * Creates a tween for animating the offset uniform of a {@link Material}.  The tween starts animating at the next call to {@link TweenCollection#update}, which\n * is implicit when {@link Viewer} or {@link CesiumWidget} render the scene.\n *\n * @param {Object} [options] Object with the following properties:\n * @param {Material} options.material The material to animate.\n * @param {Number} options.startValue The initial alpha value.\n * @param {Number} options.stopValue The final alpha value.\n * @param {Number} [options.duration=3.0] The duration, in seconds, for the tween.  The tween is automatically removed from the collection when it stops.\n * @param {Number} [options.delay=0.0] The delay, in seconds, before the tween starts animating.\n * @param {EasingFunction} [options.easingFunction=EasingFunction.LINEAR_NONE] Determines the curve for animtion.\n * @param {TweenCollection~TweenUpdateCallback} [options.update] The callback to call at each animation update (usually tied to the a rendered frame).\n * @param {TweenCollection~TweenCancelledCallback} [options.cancel] The callback to call if the tween is canceled either because {@link Tween#cancelTween} was called or because the tween was removed from the collection.\n * @returns {Tween} The tween.\n *\n * @exception {DeveloperError} material.uniforms must have an offset property.\n * @exception {DeveloperError} options.duration must be positive.\n */\n\n\nTweenCollection.prototype.addOffsetIncrement = function (options) {\n  options = defaultValue(options, defaultValue.EMPTY_OBJECT);\n  var material = options.material; //>>includeStart('debug', pragmas.debug);\n\n  if (!defined(material)) {\n    throw new DeveloperError(\"material is required.\");\n  }\n\n  if (!defined(material.uniforms.offset)) {\n    throw new DeveloperError(\"material.uniforms must have an offset property.\");\n  } //>>includeEnd('debug');\n\n\n  var uniforms = material.uniforms;\n  return this.addProperty({\n    object: uniforms,\n    property: \"offset\",\n    startValue: uniforms.offset,\n    stopValue: uniforms.offset + 1,\n    duration: options.duration,\n    delay: options.delay,\n    easingFunction: options.easingFunction,\n    update: options.update,\n    cancel: options.cancel,\n    _repeat: Infinity\n  });\n};\n/**\n * Removes a tween from the collection.\n * <p>\n * This calls the {@link Tween#cancel} callback if the tween has one.\n * </p>\n *\n * @param {Tween} tween The tween to remove.\n * @returns {Boolean} <code>true</code> if the tween was removed; <code>false</code> if the tween was not found in the collection.\n */\n\n\nTweenCollection.prototype.remove = function (tween) {\n  if (!defined(tween)) {\n    return false;\n  }\n\n  var index = this._tweens.indexOf(tween);\n\n  if (index !== -1) {\n    tween.tweenjs.stop();\n\n    if (defined(tween.cancel)) {\n      tween.cancel();\n    }\n\n    this._tweens.splice(index, 1);\n\n    return true;\n  }\n\n  return false;\n};\n/**\n * Removes all tweens from the collection.\n * <p>\n * This calls the {@link Tween#cancel} callback for each tween that has one.\n * </p>\n */\n\n\nTweenCollection.prototype.removeAll = function () {\n  var tweens = this._tweens;\n\n  for (var i = 0; i < tweens.length; ++i) {\n    var tween = tweens[i];\n    tween.tweenjs.stop();\n\n    if (defined(tween.cancel)) {\n      tween.cancel();\n    }\n  }\n\n  tweens.length = 0;\n};\n/**\n * Determines whether this collection contains a given tween.\n *\n * @param {Tween} tween The tween to check for.\n * @returns {Boolean} <code>true</code> if this collection contains the tween, <code>false</code> otherwise.\n */\n\n\nTweenCollection.prototype.contains = function (tween) {\n  return defined(tween) && this._tweens.indexOf(tween) !== -1;\n};\n/**\n * Returns the tween in the collection at the specified index.  Indices are zero-based\n * and increase as tweens are added.  Removing a tween shifts all tweens after\n * it to the left, changing their indices.  This function is commonly used to iterate over\n * all the tween in the collection.\n *\n * @param {Number} index The zero-based index of the tween.\n * @returns {Tween} The tween at the specified index.\n *\n * @example\n * // Output the duration of all the tweens in the collection.\n * var tweens = scene.tweens;\n * var length = tweens.length;\n * for (var i = 0; i < length; ++i) {\n *   console.log(tweens.get(i).duration);\n * }\n */\n\n\nTweenCollection.prototype.get = function (index) {\n  //>>includeStart('debug', pragmas.debug);\n  if (!defined(index)) {\n    throw new DeveloperError(\"index is required.\");\n  } //>>includeEnd('debug');\n\n\n  return this._tweens[index];\n};\n/**\n * Updates the tweens in the collection to be at the provide time.  When a tween finishes, it is removed\n * from the collection.\n *\n * @param {Number} [time=getTimestamp()] The time in seconds.  By default tweens are synced to the system clock.\n */\n\n\nTweenCollection.prototype.update = function (time) {\n  var tweens = this._tweens;\n  var i = 0;\n  time = defined(time) ? time / TimeConstants.SECONDS_PER_MILLISECOND : getTimestamp();\n\n  while (i < tweens.length) {\n    var tween = tweens[i];\n    var tweenjs = tween.tweenjs;\n\n    if (tween.needsStart) {\n      tween.needsStart = false;\n      tweenjs.start(time);\n    } else if (tweenjs.update(time)) {\n      i++;\n    } else {\n      tweenjs.stop();\n      tweens.splice(i, 1);\n    }\n  }\n};\n/**\n * A function that will execute when a tween completes.\n * @callback TweenCollection~TweenCompleteCallback\n */\n\n/**\n * A function that will execute when a tween updates.\n * @callback TweenCollection~TweenUpdateCallback\n */\n\n/**\n * A function that will execute when a tween is cancelled.\n * @callback TweenCollection~TweenCancelledCallback\n */\n\n\nexport default TweenCollection;","map":{"version":3,"sources":["C:/Users/passa/Desktop/WaterLevelReact/node_modules/cesium/Source/Scene/TweenCollection.js"],"names":["clone","defaultValue","defined","DeveloperError","EasingFunction","getTimestamp","TimeConstants","TweenJS","Tween","tweens","tweenjs","startObject","stopObject","duration","delay","easingFunction","update","complete","cancel","_tweens","_tweenjs","_startObject","_stopObject","_duration","_delay","_easingFunction","_update","_complete","needsStart","Object","defineProperties","prototype","get","cancelTween","remove","TweenCollection","length","add","options","EMPTY_OBJECT","SECONDS_PER_MILLISECOND","delayInSeconds","LINEAR_NONE","value","to","easing","onUpdate","onComplete","repeat","_repeat","tween","push","addProperty","object","property","startValue","stopValue","addAlpha","material","properties","uniforms","hasOwnProperty","alpha","i","addOffsetIncrement","offset","Infinity","index","indexOf","stop","splice","removeAll","contains","time","start"],"mappings":"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","sourcesContent":["import clone from \"../Core/clone.js\";\nimport defaultValue from \"../Core/defaultValue.js\";\nimport defined from \"../Core/defined.js\";\nimport DeveloperError from \"../Core/DeveloperError.js\";\nimport EasingFunction from \"../Core/EasingFunction.js\";\nimport getTimestamp from \"../Core/getTimestamp.js\";\nimport TimeConstants from \"../Core/TimeConstants.js\";\nimport TweenJS from \"../ThirdParty/Tween.js\";\n\n/**\n * A tween is an animation that interpolates the properties of two objects using an {@link EasingFunction}.  Create\n * one using {@link Scene#tweens} and {@link TweenCollection#add} and related add functions.\n *\n * @alias Tween\n * @constructor\n *\n * @private\n */\nfunction Tween(\n  tweens,\n  tweenjs,\n  startObject,\n  stopObject,\n  duration,\n  delay,\n  easingFunction,\n  update,\n  complete,\n  cancel\n) {\n  this._tweens = tweens;\n  this._tweenjs = tweenjs;\n\n  this._startObject = clone(startObject);\n  this._stopObject = clone(stopObject);\n\n  this._duration = duration;\n  this._delay = delay;\n  this._easingFunction = easingFunction;\n\n  this._update = update;\n  this._complete = complete;\n\n  /**\n   * The callback to call if the tween is canceled either because {@link Tween#cancelTween}\n   * was called or because the tween was removed from the collection.\n   *\n   * @type {TweenCollection~TweenCancelledCallback}\n   */\n  this.cancel = cancel;\n\n  /**\n   * @private\n   */\n  this.needsStart = true;\n}\n\nObject.defineProperties(Tween.prototype, {\n  /**\n   * An object with properties for initial values of the tween.  The properties of this object are changed during the tween's animation.\n   * @memberof Tween.prototype\n   *\n   * @type {Object}\n   * @readonly\n   */\n  startObject: {\n    get: function () {\n      return this._startObject;\n    },\n  },\n\n  /**\n   * An object with properties for the final values of the tween.\n   * @memberof Tween.prototype\n   *\n   * @type {Object}\n   * @readonly\n   */\n  stopObject: {\n    get: function () {\n      return this._stopObject;\n    },\n  },\n\n  /**\n   * The duration, in seconds, for the tween.  The tween is automatically removed from the collection when it stops.\n   * @memberof Tween.prototype\n   *\n   * @type {Number}\n   * @readonly\n   */\n  duration: {\n    get: function () {\n      return this._duration;\n    },\n  },\n\n  /**\n   * The delay, in seconds, before the tween starts animating.\n   * @memberof Tween.prototype\n   *\n   * @type {Number}\n   * @readonly\n   */\n  delay: {\n    get: function () {\n      return this._delay;\n    },\n  },\n\n  /**\n   * Determines the curve for animtion.\n   * @memberof Tween.prototype\n   *\n   * @type {EasingFunction}\n   * @readonly\n   */\n  easingFunction: {\n    get: function () {\n      return this._easingFunction;\n    },\n  },\n\n  /**\n   * The callback to call at each animation update (usually tied to the a rendered frame).\n   * @memberof Tween.prototype\n   *\n   * @type {TweenCollection~TweenUpdateCallback}\n   * @readonly\n   */\n  update: {\n    get: function () {\n      return this._update;\n    },\n  },\n\n  /**\n   * The callback to call when the tween finishes animating.\n   * @memberof Tween.prototype\n   *\n   * @type {TweenCollection~TweenCompleteCallback}\n   * @readonly\n   */\n  complete: {\n    get: function () {\n      return this._complete;\n    },\n  },\n\n  /**\n   * @memberof Tween.prototype\n   *\n   * @private\n   */\n  tweenjs: {\n    get: function () {\n      return this._tweenjs;\n    },\n  },\n});\n\n/**\n * Cancels the tween calling the {@link Tween#cancel} callback if one exists.  This\n * has no effect if the tween finished or was already canceled.\n */\nTween.prototype.cancelTween = function () {\n  this._tweens.remove(this);\n};\n\n/**\n * A collection of tweens for animating properties.  Commonly accessed using {@link Scene#tweens}.\n *\n * @alias TweenCollection\n * @constructor\n *\n * @private\n */\nfunction TweenCollection() {\n  this._tweens = [];\n}\n\nObject.defineProperties(TweenCollection.prototype, {\n  /**\n   * The number of tweens in the collection.\n   * @memberof TweenCollection.prototype\n   *\n   * @type {Number}\n   * @readonly\n   */\n  length: {\n    get: function () {\n      return this._tweens.length;\n    },\n  },\n});\n\n/**\n * Creates a tween for animating between two sets of properties.  The tween starts animating at the next call to {@link TweenCollection#update}, which\n * is implicit when {@link Viewer} or {@link CesiumWidget} render the scene.\n *\n * @param {Object} [options] Object with the following properties:\n * @param {Object} options.startObject An object with properties for initial values of the tween.  The properties of this object are changed during the tween's animation.\n * @param {Object} options.stopObject An object with properties for the final values of the tween.\n * @param {Number} options.duration The duration, in seconds, for the tween.  The tween is automatically removed from the collection when it stops.\n * @param {Number} [options.delay=0.0] The delay, in seconds, before the tween starts animating.\n * @param {EasingFunction} [options.easingFunction=EasingFunction.LINEAR_NONE] Determines the curve for animtion.\n * @param {TweenCollection~TweenUpdateCallback} [options.update] The callback to call at each animation update (usually tied to the a rendered frame).\n * @param {TweenCollection~TweenCompleteCallback} [options.complete] The callback to call when the tween finishes animating.\n * @param {TweenCollection~TweenCancelledCallback} [options.cancel] The callback to call if the tween is canceled either because {@link Tween#cancelTween} was called or because the tween was removed from the collection.\n * @returns {Tween} The tween.\n *\n * @exception {DeveloperError} options.duration must be positive.\n */\nTweenCollection.prototype.add = function (options) {\n  options = defaultValue(options, defaultValue.EMPTY_OBJECT);\n\n  //>>includeStart('debug', pragmas.debug);\n  if (!defined(options.startObject) || !defined(options.stopObject)) {\n    throw new DeveloperError(\n      \"options.startObject and options.stopObject are required.\"\n    );\n  }\n\n  if (!defined(options.duration) || options.duration < 0.0) {\n    throw new DeveloperError(\n      \"options.duration is required and must be positive.\"\n    );\n  }\n  //>>includeEnd('debug');\n\n  if (options.duration === 0.0) {\n    if (defined(options.complete)) {\n      options.complete();\n    }\n    return new Tween(this);\n  }\n\n  var duration = options.duration / TimeConstants.SECONDS_PER_MILLISECOND;\n  var delayInSeconds = defaultValue(options.delay, 0.0);\n  var delay = delayInSeconds / TimeConstants.SECONDS_PER_MILLISECOND;\n  var easingFunction = defaultValue(\n    options.easingFunction,\n    EasingFunction.LINEAR_NONE\n  );\n\n  var value = options.startObject;\n  var tweenjs = new TweenJS.Tween(value);\n  tweenjs.to(clone(options.stopObject), duration);\n  tweenjs.delay(delay);\n  tweenjs.easing(easingFunction);\n  if (defined(options.update)) {\n    tweenjs.onUpdate(function () {\n      options.update(value);\n    });\n  }\n  tweenjs.onComplete(defaultValue(options.complete, null));\n  tweenjs.repeat(defaultValue(options._repeat, 0.0));\n\n  var tween = new Tween(\n    this,\n    tweenjs,\n    options.startObject,\n    options.stopObject,\n    options.duration,\n    delayInSeconds,\n    easingFunction,\n    options.update,\n    options.complete,\n    options.cancel\n  );\n  this._tweens.push(tween);\n  return tween;\n};\n\n/**\n * Creates a tween for animating a scalar property on the given object.  The tween starts animating at the next call to {@link TweenCollection#update}, which\n * is implicit when {@link Viewer} or {@link CesiumWidget} render the scene.\n *\n * @param {Object} [options] Object with the following properties:\n * @param {Object} options.object The object containing the property to animate.\n * @param {String} options.property The name of the property to animate.\n * @param {Number} options.startValue The initial value.\n * @param {Number} options.stopValue The final value.\n * @param {Number} [options.duration=3.0] The duration, in seconds, for the tween.  The tween is automatically removed from the collection when it stops.\n * @param {Number} [options.delay=0.0] The delay, in seconds, before the tween starts animating.\n * @param {EasingFunction} [options.easingFunction=EasingFunction.LINEAR_NONE] Determines the curve for animtion.\n * @param {TweenCollection~TweenUpdateCallback} [options.update] The callback to call at each animation update (usually tied to the a rendered frame).\n * @param {TweenCollection~TweenCompleteCallback} [options.complete] The callback to call when the tween finishes animating.\n * @param {TweenCollection~TweenCancelledCallback} [options.cancel] The callback to call if the tween is canceled either because {@link Tween#cancelTween} was called or because the tween was removed from the collection.\n * @returns {Tween} The tween.\n *\n * @exception {DeveloperError} options.object must have the specified property.\n * @exception {DeveloperError} options.duration must be positive.\n */\nTweenCollection.prototype.addProperty = function (options) {\n  options = defaultValue(options, defaultValue.EMPTY_OBJECT);\n\n  var object = options.object;\n  var property = options.property;\n  var startValue = options.startValue;\n  var stopValue = options.stopValue;\n\n  //>>includeStart('debug', pragmas.debug);\n  if (!defined(object) || !defined(options.property)) {\n    throw new DeveloperError(\n      \"options.object and options.property are required.\"\n    );\n  }\n  if (!defined(object[property])) {\n    throw new DeveloperError(\n      \"options.object must have the specified property.\"\n    );\n  }\n  if (!defined(startValue) || !defined(stopValue)) {\n    throw new DeveloperError(\n      \"options.startValue and options.stopValue are required.\"\n    );\n  }\n  //>>includeEnd('debug');\n\n  function update(value) {\n    object[property] = value.value;\n  }\n\n  return this.add({\n    startObject: {\n      value: startValue,\n    },\n    stopObject: {\n      value: stopValue,\n    },\n    duration: defaultValue(options.duration, 3.0),\n    delay: options.delay,\n    easingFunction: options.easingFunction,\n    update: update,\n    complete: options.complete,\n    cancel: options.cancel,\n    _repeat: options._repeat,\n  });\n};\n\n/**\n * Creates a tween for animating the alpha of all color uniforms on a {@link Material}.  The tween starts animating at the next call to {@link TweenCollection#update}, which\n * is implicit when {@link Viewer} or {@link CesiumWidget} render the scene.\n *\n * @param {Object} [options] Object with the following properties:\n * @param {Material} options.material The material to animate.\n * @param {Number} [options.startValue=0.0] The initial alpha value.\n * @param {Number} [options.stopValue=1.0] The final alpha value.\n * @param {Number} [options.duration=3.0] The duration, in seconds, for the tween.  The tween is automatically removed from the collection when it stops.\n * @param {Number} [options.delay=0.0] The delay, in seconds, before the tween starts animating.\n * @param {EasingFunction} [options.easingFunction=EasingFunction.LINEAR_NONE] Determines the curve for animtion.\n * @param {TweenCollection~TweenUpdateCallback} [options.update] The callback to call at each animation update (usually tied to the a rendered frame).\n * @param {TweenCollection~TweenCompleteCallback} [options.complete] The callback to call when the tween finishes animating.\n * @param {TweenCollection~TweenCancelledCallback} [options.cancel] The callback to call if the tween is canceled either because {@link Tween#cancelTween} was called or because the tween was removed from the collection.\n * @returns {Tween} The tween.\n *\n * @exception {DeveloperError} material has no properties with alpha components.\n * @exception {DeveloperError} options.duration must be positive.\n */\nTweenCollection.prototype.addAlpha = function (options) {\n  options = defaultValue(options, defaultValue.EMPTY_OBJECT);\n\n  var material = options.material;\n\n  //>>includeStart('debug', pragmas.debug);\n  if (!defined(material)) {\n    throw new DeveloperError(\"options.material is required.\");\n  }\n  //>>includeEnd('debug');\n\n  var properties = [];\n\n  for (var property in material.uniforms) {\n    if (\n      material.uniforms.hasOwnProperty(property) &&\n      defined(material.uniforms[property]) &&\n      defined(material.uniforms[property].alpha)\n    ) {\n      properties.push(property);\n    }\n  }\n\n  //>>includeStart('debug', pragmas.debug);\n  if (properties.length === 0) {\n    throw new DeveloperError(\n      \"material has no properties with alpha components.\"\n    );\n  }\n  //>>includeEnd('debug');\n\n  function update(value) {\n    var length = properties.length;\n    for (var i = 0; i < length; ++i) {\n      material.uniforms[properties[i]].alpha = value.alpha;\n    }\n  }\n\n  return this.add({\n    startObject: {\n      alpha: defaultValue(options.startValue, 0.0), // Default to fade in\n    },\n    stopObject: {\n      alpha: defaultValue(options.stopValue, 1.0),\n    },\n    duration: defaultValue(options.duration, 3.0),\n    delay: options.delay,\n    easingFunction: options.easingFunction,\n    update: update,\n    complete: options.complete,\n    cancel: options.cancel,\n  });\n};\n\n/**\n * Creates a tween for animating the offset uniform of a {@link Material}.  The tween starts animating at the next call to {@link TweenCollection#update}, which\n * is implicit when {@link Viewer} or {@link CesiumWidget} render the scene.\n *\n * @param {Object} [options] Object with the following properties:\n * @param {Material} options.material The material to animate.\n * @param {Number} options.startValue The initial alpha value.\n * @param {Number} options.stopValue The final alpha value.\n * @param {Number} [options.duration=3.0] The duration, in seconds, for the tween.  The tween is automatically removed from the collection when it stops.\n * @param {Number} [options.delay=0.0] The delay, in seconds, before the tween starts animating.\n * @param {EasingFunction} [options.easingFunction=EasingFunction.LINEAR_NONE] Determines the curve for animtion.\n * @param {TweenCollection~TweenUpdateCallback} [options.update] The callback to call at each animation update (usually tied to the a rendered frame).\n * @param {TweenCollection~TweenCancelledCallback} [options.cancel] The callback to call if the tween is canceled either because {@link Tween#cancelTween} was called or because the tween was removed from the collection.\n * @returns {Tween} The tween.\n *\n * @exception {DeveloperError} material.uniforms must have an offset property.\n * @exception {DeveloperError} options.duration must be positive.\n */\nTweenCollection.prototype.addOffsetIncrement = function (options) {\n  options = defaultValue(options, defaultValue.EMPTY_OBJECT);\n\n  var material = options.material;\n\n  //>>includeStart('debug', pragmas.debug);\n  if (!defined(material)) {\n    throw new DeveloperError(\"material is required.\");\n  }\n  if (!defined(material.uniforms.offset)) {\n    throw new DeveloperError(\"material.uniforms must have an offset property.\");\n  }\n  //>>includeEnd('debug');\n\n  var uniforms = material.uniforms;\n  return this.addProperty({\n    object: uniforms,\n    property: \"offset\",\n    startValue: uniforms.offset,\n    stopValue: uniforms.offset + 1,\n    duration: options.duration,\n    delay: options.delay,\n    easingFunction: options.easingFunction,\n    update: options.update,\n    cancel: options.cancel,\n    _repeat: Infinity,\n  });\n};\n\n/**\n * Removes a tween from the collection.\n * <p>\n * This calls the {@link Tween#cancel} callback if the tween has one.\n * </p>\n *\n * @param {Tween} tween The tween to remove.\n * @returns {Boolean} <code>true</code> if the tween was removed; <code>false</code> if the tween was not found in the collection.\n */\nTweenCollection.prototype.remove = function (tween) {\n  if (!defined(tween)) {\n    return false;\n  }\n\n  var index = this._tweens.indexOf(tween);\n  if (index !== -1) {\n    tween.tweenjs.stop();\n    if (defined(tween.cancel)) {\n      tween.cancel();\n    }\n    this._tweens.splice(index, 1);\n    return true;\n  }\n\n  return false;\n};\n\n/**\n * Removes all tweens from the collection.\n * <p>\n * This calls the {@link Tween#cancel} callback for each tween that has one.\n * </p>\n */\nTweenCollection.prototype.removeAll = function () {\n  var tweens = this._tweens;\n\n  for (var i = 0; i < tweens.length; ++i) {\n    var tween = tweens[i];\n    tween.tweenjs.stop();\n    if (defined(tween.cancel)) {\n      tween.cancel();\n    }\n  }\n  tweens.length = 0;\n};\n\n/**\n * Determines whether this collection contains a given tween.\n *\n * @param {Tween} tween The tween to check for.\n * @returns {Boolean} <code>true</code> if this collection contains the tween, <code>false</code> otherwise.\n */\nTweenCollection.prototype.contains = function (tween) {\n  return defined(tween) && this._tweens.indexOf(tween) !== -1;\n};\n\n/**\n * Returns the tween in the collection at the specified index.  Indices are zero-based\n * and increase as tweens are added.  Removing a tween shifts all tweens after\n * it to the left, changing their indices.  This function is commonly used to iterate over\n * all the tween in the collection.\n *\n * @param {Number} index The zero-based index of the tween.\n * @returns {Tween} The tween at the specified index.\n *\n * @example\n * // Output the duration of all the tweens in the collection.\n * var tweens = scene.tweens;\n * var length = tweens.length;\n * for (var i = 0; i < length; ++i) {\n *   console.log(tweens.get(i).duration);\n * }\n */\nTweenCollection.prototype.get = function (index) {\n  //>>includeStart('debug', pragmas.debug);\n  if (!defined(index)) {\n    throw new DeveloperError(\"index is required.\");\n  }\n  //>>includeEnd('debug');\n\n  return this._tweens[index];\n};\n\n/**\n * Updates the tweens in the collection to be at the provide time.  When a tween finishes, it is removed\n * from the collection.\n *\n * @param {Number} [time=getTimestamp()] The time in seconds.  By default tweens are synced to the system clock.\n */\nTweenCollection.prototype.update = function (time) {\n  var tweens = this._tweens;\n\n  var i = 0;\n  time = defined(time)\n    ? time / TimeConstants.SECONDS_PER_MILLISECOND\n    : getTimestamp();\n  while (i < tweens.length) {\n    var tween = tweens[i];\n    var tweenjs = tween.tweenjs;\n\n    if (tween.needsStart) {\n      tween.needsStart = false;\n      tweenjs.start(time);\n    } else if (tweenjs.update(time)) {\n      i++;\n    } else {\n      tweenjs.stop();\n      tweens.splice(i, 1);\n    }\n  }\n};\n\n/**\n * A function that will execute when a tween completes.\n * @callback TweenCollection~TweenCompleteCallback\n */\n\n/**\n * A function that will execute when a tween updates.\n * @callback TweenCollection~TweenUpdateCallback\n */\n\n/**\n * A function that will execute when a tween is cancelled.\n * @callback TweenCollection~TweenCancelledCallback\n */\nexport default TweenCollection;\n"]},"metadata":{},"sourceType":"module"}
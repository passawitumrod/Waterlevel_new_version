{"ast":null,"code":"/**\n * A model's mesh and its materials.\n * <p>\n * Use {@link Model#getMesh} to create an instance.\n * </p>\n *\n * @alias ModelMesh\n * @internalConstructor\n * @class\n *\n * @see Model#getMesh\n */\nfunction ModelMesh(mesh, runtimeMaterialsById, id) {\n  var materials = [];\n  var primitives = mesh.primitives;\n  var length = primitives.length;\n\n  for (var i = 0; i < length; ++i) {\n    var p = primitives[i];\n    materials[i] = runtimeMaterialsById[p.material];\n  }\n\n  this._name = mesh.name;\n  this._materials = materials;\n  this._id = id;\n}\n\nObject.defineProperties(ModelMesh.prototype, {\n  /**\n   * The value of the <code>name</code> property of this mesh.\n   *\n   * @memberof ModelMesh.prototype\n   *\n   * @type {String}\n   * @readonly\n   */\n  name: {\n    get: function () {\n      return this._name;\n    }\n  },\n\n  /**\n   * The index of the mesh.\n   *\n   * @memberof ModelMesh.prototype\n   *\n   * @type {String}\n   * @readonly\n   */\n  id: {\n    get: function () {\n      return this._id;\n    }\n  },\n\n  /**\n   * An array of {@link ModelMaterial} instances indexed by the mesh's\n   * primitive indices.\n   *\n   * @memberof ModelMesh.prototype\n   *\n   * @type {ModelMaterial[]}\n   * @readonly\n   */\n  materials: {\n    get: function () {\n      return this._materials;\n    }\n  }\n});\nexport default ModelMesh;","map":{"version":3,"sources":["C:/Users/passa/Desktop/WaterLevelReact/node_modules/cesium/Source/Scene/ModelMesh.js"],"names":["ModelMesh","mesh","runtimeMaterialsById","id","materials","primitives","length","i","p","material","_name","name","_materials","_id","Object","defineProperties","prototype","get"],"mappings":"AAAA;;;;;;;;;;;;AAYA,SAASA,SAAT,CAAmBC,IAAnB,EAAyBC,oBAAzB,EAA+CC,EAA/C,EAAmD;AACjD,MAAIC,SAAS,GAAG,EAAhB;AACA,MAAIC,UAAU,GAAGJ,IAAI,CAACI,UAAtB;AACA,MAAIC,MAAM,GAAGD,UAAU,CAACC,MAAxB;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,MAApB,EAA4B,EAAEC,CAA9B,EAAiC;AAC/B,QAAIC,CAAC,GAAGH,UAAU,CAACE,CAAD,CAAlB;AACAH,IAAAA,SAAS,CAACG,CAAD,CAAT,GAAeL,oBAAoB,CAACM,CAAC,CAACC,QAAH,CAAnC;AACD;;AAED,OAAKC,KAAL,GAAaT,IAAI,CAACU,IAAlB;AACA,OAAKC,UAAL,GAAkBR,SAAlB;AACA,OAAKS,GAAL,GAAWV,EAAX;AACD;;AAEDW,MAAM,CAACC,gBAAP,CAAwBf,SAAS,CAACgB,SAAlC,EAA6C;AAC3C;;;;;;;;AAQAL,EAAAA,IAAI,EAAE;AACJM,IAAAA,GAAG,EAAE,YAAY;AACf,aAAO,KAAKP,KAAZ;AACD;AAHG,GATqC;;AAe3C;;;;;;;;AAQAP,EAAAA,EAAE,EAAE;AACFc,IAAAA,GAAG,EAAE,YAAY;AACf,aAAO,KAAKJ,GAAZ;AACD;AAHC,GAvBuC;;AA6B3C;;;;;;;;;AASAT,EAAAA,SAAS,EAAE;AACTa,IAAAA,GAAG,EAAE,YAAY;AACf,aAAO,KAAKL,UAAZ;AACD;AAHQ;AAtCgC,CAA7C;AA4CA,eAAeZ,SAAf","sourcesContent":["/**\n * A model's mesh and its materials.\n * <p>\n * Use {@link Model#getMesh} to create an instance.\n * </p>\n *\n * @alias ModelMesh\n * @internalConstructor\n * @class\n *\n * @see Model#getMesh\n */\nfunction ModelMesh(mesh, runtimeMaterialsById, id) {\n  var materials = [];\n  var primitives = mesh.primitives;\n  var length = primitives.length;\n  for (var i = 0; i < length; ++i) {\n    var p = primitives[i];\n    materials[i] = runtimeMaterialsById[p.material];\n  }\n\n  this._name = mesh.name;\n  this._materials = materials;\n  this._id = id;\n}\n\nObject.defineProperties(ModelMesh.prototype, {\n  /**\n   * The value of the <code>name</code> property of this mesh.\n   *\n   * @memberof ModelMesh.prototype\n   *\n   * @type {String}\n   * @readonly\n   */\n  name: {\n    get: function () {\n      return this._name;\n    },\n  },\n\n  /**\n   * The index of the mesh.\n   *\n   * @memberof ModelMesh.prototype\n   *\n   * @type {String}\n   * @readonly\n   */\n  id: {\n    get: function () {\n      return this._id;\n    },\n  },\n\n  /**\n   * An array of {@link ModelMaterial} instances indexed by the mesh's\n   * primitive indices.\n   *\n   * @memberof ModelMesh.prototype\n   *\n   * @type {ModelMaterial[]}\n   * @readonly\n   */\n  materials: {\n    get: function () {\n      return this._materials;\n    },\n  },\n});\nexport default ModelMesh;\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import buildModuleUrl from \"../../Core/buildModuleUrl.js\";\nimport Cartesian3 from \"../../Core/Cartesian3.js\";\nimport Clock from \"../../Core/Clock.js\";\nimport defaultValue from \"../../Core/defaultValue.js\";\nimport defined from \"../../Core/defined.js\";\nimport destroyObject from \"../../Core/destroyObject.js\";\nimport DeveloperError from \"../../Core/DeveloperError.js\";\nimport Ellipsoid from \"../../Core/Ellipsoid.js\";\nimport FeatureDetection from \"../../Core/FeatureDetection.js\";\nimport formatError from \"../../Core/formatError.js\";\nimport requestAnimationFrame from \"../../Core/requestAnimationFrame.js\";\nimport ScreenSpaceEventHandler from \"../../Core/ScreenSpaceEventHandler.js\";\nimport createWorldImagery from \"../../Scene/createWorldImagery.js\";\nimport Globe from \"../../Scene/Globe.js\";\nimport Moon from \"../../Scene/Moon.js\";\nimport Scene from \"../../Scene/Scene.js\";\nimport SceneMode from \"../../Scene/SceneMode.js\";\nimport ShadowMode from \"../../Scene/ShadowMode.js\";\nimport SkyAtmosphere from \"../../Scene/SkyAtmosphere.js\";\nimport SkyBox from \"../../Scene/SkyBox.js\";\nimport Sun from \"../../Scene/Sun.js\";\nimport getElement from \"../getElement.js\";\n\nfunction getDefaultSkyBoxUrl(suffix) {\n  return buildModuleUrl(\"Assets/Textures/SkyBox/tycho2t3_80_\" + suffix + \".jpg\");\n}\n\nfunction startRenderLoop(widget) {\n  widget._renderLoopRunning = true;\n  var lastFrameTime = 0;\n\n  function render(frameTime) {\n    if (widget.isDestroyed()) {\n      return;\n    }\n\n    if (widget._useDefaultRenderLoop) {\n      try {\n        var targetFrameRate = widget._targetFrameRate;\n\n        if (!defined(targetFrameRate)) {\n          widget.resize();\n          widget.render();\n          requestAnimationFrame(render);\n        } else {\n          var interval = 1000.0 / targetFrameRate;\n          var delta = frameTime - lastFrameTime;\n\n          if (delta > interval) {\n            widget.resize();\n            widget.render();\n            lastFrameTime = frameTime - delta % interval;\n          }\n\n          requestAnimationFrame(render);\n        }\n      } catch (error) {\n        widget._useDefaultRenderLoop = false;\n        widget._renderLoopRunning = false;\n\n        if (widget._showRenderLoopErrors) {\n          var title = \"An error occurred while rendering.  Rendering has stopped.\";\n          widget.showErrorPanel(title, undefined, error);\n        }\n      }\n    } else {\n      widget._renderLoopRunning = false;\n    }\n  }\n\n  requestAnimationFrame(render);\n}\n\nfunction configurePixelRatio(widget) {\n  var pixelRatio = widget._useBrowserRecommendedResolution ? 1.0 : window.devicePixelRatio;\n  pixelRatio *= widget._resolutionScale;\n\n  if (defined(widget._scene)) {\n    widget._scene.pixelRatio = pixelRatio;\n  }\n\n  return pixelRatio;\n}\n\nfunction configureCanvasSize(widget) {\n  var canvas = widget._canvas;\n  var width = canvas.clientWidth;\n  var height = canvas.clientHeight;\n  var pixelRatio = configurePixelRatio(widget);\n  widget._canvasClientWidth = width;\n  widget._canvasClientHeight = height;\n  width *= pixelRatio;\n  height *= pixelRatio;\n  canvas.width = width;\n  canvas.height = height;\n  widget._canRender = width !== 0 && height !== 0;\n  widget._lastDevicePixelRatio = window.devicePixelRatio;\n}\n\nfunction configureCameraFrustum(widget) {\n  var canvas = widget._canvas;\n  var width = canvas.width;\n  var height = canvas.height;\n\n  if (width !== 0 && height !== 0) {\n    var frustum = widget._scene.camera.frustum;\n\n    if (defined(frustum.aspectRatio)) {\n      frustum.aspectRatio = width / height;\n    } else {\n      frustum.top = frustum.right * (height / width);\n      frustum.bottom = -frustum.top;\n    }\n  }\n}\n/**\n * A widget containing a Cesium scene.\n *\n * @alias CesiumWidget\n * @constructor\n *\n * @param {Element|String} container The DOM element or ID that will contain the widget.\n * @param {Object} [options] Object with the following properties:\n * @param {Clock} [options.clock=new Clock()] The clock to use to control current time.\n * @param {ImageryProvider} [options.imageryProvider=createWorldImagery()] The imagery provider to serve as the base layer. If set to <code>false</code>, no imagery provider will be added.\n * @param {TerrainProvider} [options.terrainProvider=new EllipsoidTerrainProvider] The terrain provider.\n * @param {SkyBox} [options.skyBox] The skybox used to render the stars.  When <code>undefined</code>, the default stars are used. If set to <code>false</code>, no skyBox, Sun, or Moon will be added.\n * @param {SkyAtmosphere} [options.skyAtmosphere] Blue sky, and the glow around the Earth's limb.  Set to <code>false</code> to turn it off.\n * @param {SceneMode} [options.sceneMode=SceneMode.SCENE3D] The initial scene mode.\n * @param {Boolean} [options.scene3DOnly=false] When <code>true</code>, each geometry instance will only be rendered in 3D to save GPU memory.\n * @param {Boolean} [options.orderIndependentTranslucency=true] If true and the configuration supports it, use order independent translucency.\n * @param {MapProjection} [options.mapProjection=new GeographicProjection()] The map projection to use in 2D and Columbus View modes.\n * @param {Globe} [options.globe=new Globe(mapProjection.ellipsoid)] The globe to use in the scene.  If set to <code>false</code>, no globe will be added.\n * @param {Boolean} [options.useDefaultRenderLoop=true] True if this widget should control the render loop, false otherwise.\n * @param {Boolean} [options.useBrowserRecommendedResolution=true] If true, render at the browser's recommended resolution and ignore <code>window.devicePixelRatio</code>.\n * @param {Number} [options.targetFrameRate] The target frame rate when using the default render loop.\n * @param {Boolean} [options.showRenderLoopErrors=true] If true, this widget will automatically display an HTML panel to the user containing the error, if a render loop error occurs.\n * @param {Object} [options.contextOptions] Context and WebGL creation properties corresponding to <code>options</code> passed to {@link Scene}.\n * @param {Element|String} [options.creditContainer] The DOM element or ID that will contain the {@link CreditDisplay}.  If not specified, the credits are added\n *        to the bottom of the widget itself.\n * @param {Element|String} [options.creditViewport] The DOM element or ID that will contain the credit pop up created by the {@link CreditDisplay}.  If not specified, it will appear over the widget itself.\n * @param {Number} [options.terrainExaggeration=1.0] A scalar used to exaggerate the terrain. Note that terrain exaggeration will not modify any other primitive as they are positioned relative to the ellipsoid.\n * @param {Boolean} [options.shadows=false] Determines if shadows are cast by light sources.\n * @param {ShadowMode} [options.terrainShadows=ShadowMode.RECEIVE_ONLY] Determines if the terrain casts or receives shadows from light sources.\n * @param {MapMode2D} [options.mapMode2D=MapMode2D.INFINITE_SCROLL] Determines if the 2D map is rotatable or can be scrolled infinitely in the horizontal direction.\n * @param {Boolean} [options.requestRenderMode=false] If true, rendering a frame will only occur when needed as determined by changes within the scene. Enabling improves performance of the application, but requires using {@link Scene#requestRender} to render a new frame explicitly in this mode. This will be necessary in many cases after making changes to the scene in other parts of the API. See {@link https://cesium.com/blog/2018/01/24/cesium-scene-rendering-performance/|Improving Performance with Explicit Rendering}.\n * @param {Number} [options.maximumRenderTimeChange=0.0] If requestRenderMode is true, this value defines the maximum change in simulation time allowed before a render is requested. See {@link https://cesium.com/blog/2018/01/24/cesium-scene-rendering-performance/|Improving Performance with Explicit Rendering}.\n *\n * @exception {DeveloperError} Element with id \"container\" does not exist in the document.\n *\n * @demo {@link https://sandcastle.cesium.com/index.html?src=Cesium%20Widget.html|Cesium Sandcastle Cesium Widget Demo}\n *\n * @example\n * // For each example, include a link to CesiumWidget.css stylesheet in HTML head,\n * // and in the body, include: <div id=\"cesiumContainer\"></div>\n *\n * //Widget with no terrain and default Bing Maps imagery provider.\n * var widget = new Cesium.CesiumWidget('cesiumContainer');\n *\n * //Widget with ion imagery and Cesium World Terrain.\n * var widget = new Cesium.CesiumWidget('cesiumContainer', {\n *     imageryProvider : Cesium.createWorldImagery(),\n *     terrainProvider : Cesium.createWorldTerrain(),\n *     skyBox : new Cesium.SkyBox({\n *         sources : {\n *           positiveX : 'stars/TychoSkymapII.t3_08192x04096_80_px.jpg',\n *           negativeX : 'stars/TychoSkymapII.t3_08192x04096_80_mx.jpg',\n *           positiveY : 'stars/TychoSkymapII.t3_08192x04096_80_py.jpg',\n *           negativeY : 'stars/TychoSkymapII.t3_08192x04096_80_my.jpg',\n *           positiveZ : 'stars/TychoSkymapII.t3_08192x04096_80_pz.jpg',\n *           negativeZ : 'stars/TychoSkymapII.t3_08192x04096_80_mz.jpg'\n *         }\n *     }),\n *     // Show Columbus View map with Web Mercator projection\n *     sceneMode : Cesium.SceneMode.COLUMBUS_VIEW,\n *     mapProjection : new Cesium.WebMercatorProjection()\n * });\n */\n\n\nfunction CesiumWidget(container, options) {\n  //>>includeStart('debug', pragmas.debug);\n  if (!defined(container)) {\n    throw new DeveloperError(\"container is required.\");\n  } //>>includeEnd('debug');\n\n\n  container = getElement(container);\n  options = defaultValue(options, defaultValue.EMPTY_OBJECT); //Configure the widget DOM elements\n\n  var element = document.createElement(\"div\");\n  element.className = \"cesium-widget\";\n  container.appendChild(element);\n  var canvas = document.createElement(\"canvas\");\n  var supportsImageRenderingPixelated = FeatureDetection.supportsImageRenderingPixelated();\n  this._supportsImageRenderingPixelated = supportsImageRenderingPixelated;\n\n  if (supportsImageRenderingPixelated) {\n    canvas.style.imageRendering = FeatureDetection.imageRenderingValue();\n  }\n\n  canvas.oncontextmenu = function () {\n    return false;\n  };\n\n  canvas.onselectstart = function () {\n    return false;\n  }; // Interacting with a canvas does not automatically blur the previously focused element.\n  // This leads to unexpected interaction if the last element was an input field.\n  // For example, clicking the mouse wheel could lead to the value in  the field changing\n  // unexpectedly. The solution is to blur whatever has focus as soon as canvas interaction begins.\n\n\n  function blurActiveElement() {\n    if (canvas !== canvas.ownerDocument.activeElement) {\n      canvas.ownerDocument.activeElement.blur();\n    }\n  }\n\n  canvas.addEventListener(\"mousedown\", blurActiveElement);\n  canvas.addEventListener(\"pointerdown\", blurActiveElement);\n  element.appendChild(canvas);\n  var innerCreditContainer = document.createElement(\"div\");\n  innerCreditContainer.className = \"cesium-widget-credits\";\n  var creditContainer = defined(options.creditContainer) ? getElement(options.creditContainer) : element;\n  creditContainer.appendChild(innerCreditContainer);\n  var creditViewport = defined(options.creditViewport) ? getElement(options.creditViewport) : element;\n  var showRenderLoopErrors = defaultValue(options.showRenderLoopErrors, true);\n  var useBrowserRecommendedResolution = defaultValue(options.useBrowserRecommendedResolution, true);\n  this._element = element;\n  this._container = container;\n  this._canvas = canvas;\n  this._canvasClientWidth = 0;\n  this._canvasClientHeight = 0;\n  this._lastDevicePixelRatio = 0;\n  this._creditViewport = creditViewport;\n  this._creditContainer = creditContainer;\n  this._innerCreditContainer = innerCreditContainer;\n  this._canRender = false;\n  this._renderLoopRunning = false;\n  this._showRenderLoopErrors = showRenderLoopErrors;\n  this._resolutionScale = 1.0;\n  this._useBrowserRecommendedResolution = useBrowserRecommendedResolution;\n  this._forceResize = false;\n  this._clock = defined(options.clock) ? options.clock : new Clock();\n  configureCanvasSize(this);\n\n  try {\n    var scene = new Scene({\n      canvas: canvas,\n      contextOptions: options.contextOptions,\n      creditContainer: innerCreditContainer,\n      creditViewport: creditViewport,\n      mapProjection: options.mapProjection,\n      orderIndependentTranslucency: options.orderIndependentTranslucency,\n      scene3DOnly: defaultValue(options.scene3DOnly, false),\n      terrainExaggeration: options.terrainExaggeration,\n      shadows: options.shadows,\n      mapMode2D: options.mapMode2D,\n      requestRenderMode: options.requestRenderMode,\n      maximumRenderTimeChange: options.maximumRenderTimeChange\n    });\n    this._scene = scene;\n    scene.camera.constrainedAxis = Cartesian3.UNIT_Z;\n    configurePixelRatio(this);\n    configureCameraFrustum(this);\n    var ellipsoid = defaultValue(scene.mapProjection.ellipsoid, Ellipsoid.WGS84);\n    var globe = options.globe;\n\n    if (!defined(globe)) {\n      globe = new Globe(ellipsoid);\n    }\n\n    if (globe !== false) {\n      scene.globe = globe;\n      scene.globe.shadows = defaultValue(options.terrainShadows, ShadowMode.RECEIVE_ONLY);\n    }\n\n    var skyBox = options.skyBox;\n\n    if (!defined(skyBox)) {\n      skyBox = new SkyBox({\n        sources: {\n          positiveX: getDefaultSkyBoxUrl(\"px\"),\n          negativeX: getDefaultSkyBoxUrl(\"mx\"),\n          positiveY: getDefaultSkyBoxUrl(\"py\"),\n          negativeY: getDefaultSkyBoxUrl(\"my\"),\n          positiveZ: getDefaultSkyBoxUrl(\"pz\"),\n          negativeZ: getDefaultSkyBoxUrl(\"mz\")\n        }\n      });\n    }\n\n    if (skyBox !== false) {\n      scene.skyBox = skyBox;\n      scene.sun = new Sun();\n      scene.moon = new Moon();\n    } // Blue sky, and the glow around the Earth's limb.\n\n\n    var skyAtmosphere = options.skyAtmosphere;\n\n    if (!defined(skyAtmosphere)) {\n      skyAtmosphere = new SkyAtmosphere(ellipsoid);\n    }\n\n    if (skyAtmosphere !== false) {\n      scene.skyAtmosphere = skyAtmosphere;\n    } //Set the base imagery layer\n\n\n    var imageryProvider = options.globe === false ? false : options.imageryProvider;\n\n    if (!defined(imageryProvider)) {\n      imageryProvider = createWorldImagery();\n    }\n\n    if (imageryProvider !== false) {\n      scene.imageryLayers.addImageryProvider(imageryProvider);\n    } //Set the terrain provider if one is provided.\n\n\n    if (defined(options.terrainProvider) && options.globe !== false) {\n      scene.terrainProvider = options.terrainProvider;\n    }\n\n    this._screenSpaceEventHandler = new ScreenSpaceEventHandler(canvas);\n\n    if (defined(options.sceneMode)) {\n      if (options.sceneMode === SceneMode.SCENE2D) {\n        this._scene.morphTo2D(0);\n      }\n\n      if (options.sceneMode === SceneMode.COLUMBUS_VIEW) {\n        this._scene.morphToColumbusView(0);\n      }\n    }\n\n    this._useDefaultRenderLoop = undefined;\n    this.useDefaultRenderLoop = defaultValue(options.useDefaultRenderLoop, true);\n    this._targetFrameRate = undefined;\n    this.targetFrameRate = options.targetFrameRate;\n    var that = this;\n\n    this._onRenderError = function (scene, error) {\n      that._useDefaultRenderLoop = false;\n      that._renderLoopRunning = false;\n\n      if (that._showRenderLoopErrors) {\n        var title = \"An error occurred while rendering.  Rendering has stopped.\";\n        that.showErrorPanel(title, undefined, error);\n      }\n    };\n\n    scene.renderError.addEventListener(this._onRenderError);\n  } catch (error) {\n    if (showRenderLoopErrors) {\n      var title = \"Error constructing CesiumWidget.\";\n      var message = 'Visit <a href=\"http://get.webgl.org\">http://get.webgl.org</a> to verify that your web browser and hardware support WebGL.  Consider trying a different web browser or updating your video drivers.  Detailed error information is below:';\n      this.showErrorPanel(title, message, error);\n    }\n\n    throw error;\n  }\n}\n\nObject.defineProperties(CesiumWidget.prototype, {\n  /**\n   * Gets the parent container.\n   * @memberof CesiumWidget.prototype\n   *\n   * @type {Element}\n   */\n  container: {\n    get: function get() {\n      return this._container;\n    }\n  },\n\n  /**\n   * Gets the canvas.\n   * @memberof CesiumWidget.prototype\n   *\n   * @type {Canvas}\n   */\n  canvas: {\n    get: function get() {\n      return this._canvas;\n    }\n  },\n\n  /**\n   * Gets the credit container.\n   * @memberof CesiumWidget.prototype\n   *\n   * @type {Element}\n   */\n  creditContainer: {\n    get: function get() {\n      return this._creditContainer;\n    }\n  },\n\n  /**\n   * Gets the credit viewport\n   * @memberof CesiumWidget.prototype\n   *\n   * @type {Element}\n   */\n  creditViewport: {\n    get: function get() {\n      return this._creditViewport;\n    }\n  },\n\n  /**\n   * Gets the scene.\n   * @memberof CesiumWidget.prototype\n   *\n   * @type {Scene}\n   */\n  scene: {\n    get: function get() {\n      return this._scene;\n    }\n  },\n\n  /**\n   * Gets the collection of image layers that will be rendered on the globe.\n   * @memberof CesiumWidget.prototype\n   *\n   * @type {ImageryLayerCollection}\n   * @readonly\n   */\n  imageryLayers: {\n    get: function get() {\n      return this._scene.imageryLayers;\n    }\n  },\n\n  /**\n   * The terrain provider providing surface geometry for the globe.\n   * @memberof CesiumWidget.prototype\n   *\n   * @type {TerrainProvider}\n   */\n  terrainProvider: {\n    get: function get() {\n      return this._scene.terrainProvider;\n    },\n    set: function set(terrainProvider) {\n      this._scene.terrainProvider = terrainProvider;\n    }\n  },\n\n  /**\n   * Gets the camera.\n   * @memberof CesiumWidget.prototype\n   *\n   * @type {Camera}\n   * @readonly\n   */\n  camera: {\n    get: function get() {\n      return this._scene.camera;\n    }\n  },\n\n  /**\n   * Gets the clock.\n   * @memberof CesiumWidget.prototype\n   *\n   * @type {Clock}\n   */\n  clock: {\n    get: function get() {\n      return this._clock;\n    }\n  },\n\n  /**\n   * Gets the screen space event handler.\n   * @memberof CesiumWidget.prototype\n   *\n   * @type {ScreenSpaceEventHandler}\n   */\n  screenSpaceEventHandler: {\n    get: function get() {\n      return this._screenSpaceEventHandler;\n    }\n  },\n\n  /**\n   * Gets or sets the target frame rate of the widget when <code>useDefaultRenderLoop</code>\n   * is true. If undefined, the browser's {@link requestAnimationFrame} implementation\n   * determines the frame rate.  If defined, this value must be greater than 0.  A value higher\n   * than the underlying requestAnimationFrame implementation will have no effect.\n   * @memberof CesiumWidget.prototype\n   *\n   * @type {Number}\n   */\n  targetFrameRate: {\n    get: function get() {\n      return this._targetFrameRate;\n    },\n    set: function set(value) {\n      //>>includeStart('debug', pragmas.debug);\n      if (value <= 0) {\n        throw new DeveloperError(\"targetFrameRate must be greater than 0, or undefined.\");\n      } //>>includeEnd('debug');\n\n\n      this._targetFrameRate = value;\n    }\n  },\n\n  /**\n   * Gets or sets whether or not this widget should control the render loop.\n   * If set to true the widget will use {@link requestAnimationFrame} to\n   * perform rendering and resizing of the widget, as well as drive the\n   * simulation clock. If set to false, you must manually call the\n   * <code>resize</code>, <code>render</code> methods as part of a custom\n   * render loop.  If an error occurs during rendering, {@link Scene}'s\n   * <code>renderError</code> event will be raised and this property\n   * will be set to false.  It must be set back to true to continue rendering\n   * after the error.\n   * @memberof CesiumWidget.prototype\n   *\n   * @type {Boolean}\n   */\n  useDefaultRenderLoop: {\n    get: function get() {\n      return this._useDefaultRenderLoop;\n    },\n    set: function set(value) {\n      if (this._useDefaultRenderLoop !== value) {\n        this._useDefaultRenderLoop = value;\n\n        if (value && !this._renderLoopRunning) {\n          startRenderLoop(this);\n        }\n      }\n    }\n  },\n\n  /**\n   * Gets or sets a scaling factor for rendering resolution.  Values less than 1.0 can improve\n   * performance on less powerful devices while values greater than 1.0 will render at a higher\n   * resolution and then scale down, resulting in improved visual fidelity.\n   * For example, if the widget is laid out at a size of 640x480, setting this value to 0.5\n   * will cause the scene to be rendered at 320x240 and then scaled up while setting\n   * it to 2.0 will cause the scene to be rendered at 1280x960 and then scaled down.\n   * @memberof CesiumWidget.prototype\n   *\n   * @type {Number}\n   * @default 1.0\n   */\n  resolutionScale: {\n    get: function get() {\n      return this._resolutionScale;\n    },\n    set: function set(value) {\n      //>>includeStart('debug', pragmas.debug);\n      if (value <= 0) {\n        throw new DeveloperError(\"resolutionScale must be greater than 0.\");\n      } //>>includeEnd('debug');\n\n\n      if (this._resolutionScale !== value) {\n        this._resolutionScale = value;\n        this._forceResize = true;\n      }\n    }\n  },\n\n  /**\n   * Boolean flag indicating if the browser's recommended resolution is used.\n   * If true, the browser's device pixel ratio is ignored and 1.0 is used instead,\n   * effectively rendering based on CSS pixels instead of device pixels. This can improve\n   * performance on less powerful devices that have high pixel density. When false, rendering\n   * will be in device pixels. {@link CesiumWidget#resolutionScale} will still take effect whether\n   * this flag is true or false.\n   * @memberof CesiumWidget.prototype\n   *\n   * @type {Boolean}\n   * @default true\n   */\n  useBrowserRecommendedResolution: {\n    get: function get() {\n      return this._useBrowserRecommendedResolution;\n    },\n    set: function set(value) {\n      if (this._useBrowserRecommendedResolution !== value) {\n        this._useBrowserRecommendedResolution = value;\n        this._forceResize = true;\n      }\n    }\n  }\n});\n/**\n * Show an error panel to the user containing a title and a longer error message,\n * which can be dismissed using an OK button.  This panel is displayed automatically\n * when a render loop error occurs, if showRenderLoopErrors was not false when the\n * widget was constructed.\n *\n * @param {String} title The title to be displayed on the error panel.  This string is interpreted as text.\n * @param {String} message A helpful, user-facing message to display prior to the detailed error information.  This string is interpreted as HTML.\n * @param {String} [error] The error to be displayed on the error panel.  This string is formatted using {@link formatError} and then displayed as text.\n */\n\nCesiumWidget.prototype.showErrorPanel = function (title, message, error) {\n  var element = this._element;\n  var overlay = document.createElement(\"div\");\n  overlay.className = \"cesium-widget-errorPanel\";\n  var content = document.createElement(\"div\");\n  content.className = \"cesium-widget-errorPanel-content\";\n  overlay.appendChild(content);\n  var errorHeader = document.createElement(\"div\");\n  errorHeader.className = \"cesium-widget-errorPanel-header\";\n  errorHeader.appendChild(document.createTextNode(title));\n  content.appendChild(errorHeader);\n  var errorPanelScroller = document.createElement(\"div\");\n  errorPanelScroller.className = \"cesium-widget-errorPanel-scroll\";\n  content.appendChild(errorPanelScroller);\n\n  function resizeCallback() {\n    errorPanelScroller.style.maxHeight = Math.max(Math.round(element.clientHeight * 0.9 - 100), 30) + \"px\";\n  }\n\n  resizeCallback();\n\n  if (defined(window.addEventListener)) {\n    window.addEventListener(\"resize\", resizeCallback, false);\n  }\n\n  if (defined(message)) {\n    var errorMessage = document.createElement(\"div\");\n    errorMessage.className = \"cesium-widget-errorPanel-message\";\n    errorMessage.innerHTML = \"<p>\" + message + \"</p>\";\n    errorPanelScroller.appendChild(errorMessage);\n  }\n\n  var errorDetails = \"(no error details available)\";\n\n  if (defined(error)) {\n    errorDetails = formatError(error);\n  }\n\n  var errorMessageDetails = document.createElement(\"div\");\n  errorMessageDetails.className = \"cesium-widget-errorPanel-message\";\n  errorMessageDetails.appendChild(document.createTextNode(errorDetails));\n  errorPanelScroller.appendChild(errorMessageDetails);\n  var buttonPanel = document.createElement(\"div\");\n  buttonPanel.className = \"cesium-widget-errorPanel-buttonPanel\";\n  content.appendChild(buttonPanel);\n  var okButton = document.createElement(\"button\");\n  okButton.setAttribute(\"type\", \"button\");\n  okButton.className = \"cesium-button\";\n  okButton.appendChild(document.createTextNode(\"OK\"));\n\n  okButton.onclick = function () {\n    if (defined(resizeCallback) && defined(window.removeEventListener)) {\n      window.removeEventListener(\"resize\", resizeCallback, false);\n    }\n\n    element.removeChild(overlay);\n  };\n\n  buttonPanel.appendChild(okButton);\n  element.appendChild(overlay); //IE8 does not have a console object unless the dev tools are open.\n\n  if (typeof console !== \"undefined\") {\n    console.error(title + \"\\n\" + message + \"\\n\" + errorDetails);\n  }\n};\n/**\n * @returns {Boolean} true if the object has been destroyed, false otherwise.\n */\n\n\nCesiumWidget.prototype.isDestroyed = function () {\n  return false;\n};\n/**\n * Destroys the widget.  Should be called if permanently\n * removing the widget from layout.\n */\n\n\nCesiumWidget.prototype.destroy = function () {\n  if (defined(this._scene)) {\n    this._scene.renderError.removeEventListener(this._onRenderError);\n\n    this._scene = this._scene.destroy();\n  }\n\n  this._container.removeChild(this._element);\n\n  this._creditContainer.removeChild(this._innerCreditContainer);\n\n  destroyObject(this);\n};\n/**\n * Updates the canvas size, camera aspect ratio, and viewport size.\n * This function is called automatically as needed unless\n * <code>useDefaultRenderLoop</code> is set to false.\n */\n\n\nCesiumWidget.prototype.resize = function () {\n  var canvas = this._canvas;\n\n  if (!this._forceResize && this._canvasClientWidth === canvas.clientWidth && this._canvasClientHeight === canvas.clientHeight && this._lastDevicePixelRatio === window.devicePixelRatio) {\n    return;\n  }\n\n  this._forceResize = false;\n  configureCanvasSize(this);\n  configureCameraFrustum(this);\n\n  this._scene.requestRender();\n};\n/**\n * Renders the scene.  This function is called automatically\n * unless <code>useDefaultRenderLoop</code> is set to false;\n */\n\n\nCesiumWidget.prototype.render = function () {\n  if (this._canRender) {\n    this._scene.initializeFrame();\n\n    var currentTime = this._clock.tick();\n\n    this._scene.render(currentTime);\n  } else {\n    this._clock.tick();\n  }\n};\n\nexport default CesiumWidget;","map":{"version":3,"sources":["C:/Users/passa/Desktop/WaterLevelReact/node_modules/cesium/Source/Widgets/CesiumWidget/CesiumWidget.js"],"names":["buildModuleUrl","Cartesian3","Clock","defaultValue","defined","destroyObject","DeveloperError","Ellipsoid","FeatureDetection","formatError","requestAnimationFrame","ScreenSpaceEventHandler","createWorldImagery","Globe","Moon","Scene","SceneMode","ShadowMode","SkyAtmosphere","SkyBox","Sun","getElement","getDefaultSkyBoxUrl","suffix","startRenderLoop","widget","_renderLoopRunning","lastFrameTime","render","frameTime","isDestroyed","_useDefaultRenderLoop","targetFrameRate","_targetFrameRate","resize","interval","delta","error","_showRenderLoopErrors","title","showErrorPanel","undefined","configurePixelRatio","pixelRatio","_useBrowserRecommendedResolution","window","devicePixelRatio","_resolutionScale","_scene","configureCanvasSize","canvas","_canvas","width","clientWidth","height","clientHeight","_canvasClientWidth","_canvasClientHeight","_canRender","_lastDevicePixelRatio","configureCameraFrustum","frustum","camera","aspectRatio","top","right","bottom","CesiumWidget","container","options","EMPTY_OBJECT","element","document","createElement","className","appendChild","supportsImageRenderingPixelated","_supportsImageRenderingPixelated","style","imageRendering","imageRenderingValue","oncontextmenu","onselectstart","blurActiveElement","ownerDocument","activeElement","blur","addEventListener","innerCreditContainer","creditContainer","creditViewport","showRenderLoopErrors","useBrowserRecommendedResolution","_element","_container","_creditViewport","_creditContainer","_innerCreditContainer","_forceResize","_clock","clock","scene","contextOptions","mapProjection","orderIndependentTranslucency","scene3DOnly","terrainExaggeration","shadows","mapMode2D","requestRenderMode","maximumRenderTimeChange","constrainedAxis","UNIT_Z","ellipsoid","WGS84","globe","terrainShadows","RECEIVE_ONLY","skyBox","sources","positiveX","negativeX","positiveY","negativeY","positiveZ","negativeZ","sun","moon","skyAtmosphere","imageryProvider","imageryLayers","addImageryProvider","terrainProvider","_screenSpaceEventHandler","sceneMode","SCENE2D","morphTo2D","COLUMBUS_VIEW","morphToColumbusView","useDefaultRenderLoop","that","_onRenderError","renderError","message","Object","defineProperties","prototype","get","set","screenSpaceEventHandler","value","resolutionScale","overlay","content","errorHeader","createTextNode","errorPanelScroller","resizeCallback","maxHeight","Math","max","round","errorMessage","innerHTML","errorDetails","errorMessageDetails","buttonPanel","okButton","setAttribute","onclick","removeEventListener","removeChild","console","destroy","requestRender","initializeFrame","currentTime","tick"],"mappings":"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","sourcesContent":["import buildModuleUrl from \"../../Core/buildModuleUrl.js\";\nimport Cartesian3 from \"../../Core/Cartesian3.js\";\nimport Clock from \"../../Core/Clock.js\";\nimport defaultValue from \"../../Core/defaultValue.js\";\nimport defined from \"../../Core/defined.js\";\nimport destroyObject from \"../../Core/destroyObject.js\";\nimport DeveloperError from \"../../Core/DeveloperError.js\";\nimport Ellipsoid from \"../../Core/Ellipsoid.js\";\nimport FeatureDetection from \"../../Core/FeatureDetection.js\";\nimport formatError from \"../../Core/formatError.js\";\nimport requestAnimationFrame from \"../../Core/requestAnimationFrame.js\";\nimport ScreenSpaceEventHandler from \"../../Core/ScreenSpaceEventHandler.js\";\nimport createWorldImagery from \"../../Scene/createWorldImagery.js\";\nimport Globe from \"../../Scene/Globe.js\";\nimport Moon from \"../../Scene/Moon.js\";\nimport Scene from \"../../Scene/Scene.js\";\nimport SceneMode from \"../../Scene/SceneMode.js\";\nimport ShadowMode from \"../../Scene/ShadowMode.js\";\nimport SkyAtmosphere from \"../../Scene/SkyAtmosphere.js\";\nimport SkyBox from \"../../Scene/SkyBox.js\";\nimport Sun from \"../../Scene/Sun.js\";\nimport getElement from \"../getElement.js\";\n\nfunction getDefaultSkyBoxUrl(suffix) {\n  return buildModuleUrl(\n    \"Assets/Textures/SkyBox/tycho2t3_80_\" + suffix + \".jpg\"\n  );\n}\n\nfunction startRenderLoop(widget) {\n  widget._renderLoopRunning = true;\n\n  var lastFrameTime = 0;\n  function render(frameTime) {\n    if (widget.isDestroyed()) {\n      return;\n    }\n\n    if (widget._useDefaultRenderLoop) {\n      try {\n        var targetFrameRate = widget._targetFrameRate;\n        if (!defined(targetFrameRate)) {\n          widget.resize();\n          widget.render();\n          requestAnimationFrame(render);\n        } else {\n          var interval = 1000.0 / targetFrameRate;\n          var delta = frameTime - lastFrameTime;\n\n          if (delta > interval) {\n            widget.resize();\n            widget.render();\n            lastFrameTime = frameTime - (delta % interval);\n          }\n          requestAnimationFrame(render);\n        }\n      } catch (error) {\n        widget._useDefaultRenderLoop = false;\n        widget._renderLoopRunning = false;\n        if (widget._showRenderLoopErrors) {\n          var title =\n            \"An error occurred while rendering.  Rendering has stopped.\";\n          widget.showErrorPanel(title, undefined, error);\n        }\n      }\n    } else {\n      widget._renderLoopRunning = false;\n    }\n  }\n\n  requestAnimationFrame(render);\n}\n\nfunction configurePixelRatio(widget) {\n  var pixelRatio = widget._useBrowserRecommendedResolution\n    ? 1.0\n    : window.devicePixelRatio;\n  pixelRatio *= widget._resolutionScale;\n  if (defined(widget._scene)) {\n    widget._scene.pixelRatio = pixelRatio;\n  }\n\n  return pixelRatio;\n}\n\nfunction configureCanvasSize(widget) {\n  var canvas = widget._canvas;\n  var width = canvas.clientWidth;\n  var height = canvas.clientHeight;\n  var pixelRatio = configurePixelRatio(widget);\n\n  widget._canvasClientWidth = width;\n  widget._canvasClientHeight = height;\n\n  width *= pixelRatio;\n  height *= pixelRatio;\n\n  canvas.width = width;\n  canvas.height = height;\n\n  widget._canRender = width !== 0 && height !== 0;\n  widget._lastDevicePixelRatio = window.devicePixelRatio;\n}\n\nfunction configureCameraFrustum(widget) {\n  var canvas = widget._canvas;\n  var width = canvas.width;\n  var height = canvas.height;\n  if (width !== 0 && height !== 0) {\n    var frustum = widget._scene.camera.frustum;\n    if (defined(frustum.aspectRatio)) {\n      frustum.aspectRatio = width / height;\n    } else {\n      frustum.top = frustum.right * (height / width);\n      frustum.bottom = -frustum.top;\n    }\n  }\n}\n\n/**\n * A widget containing a Cesium scene.\n *\n * @alias CesiumWidget\n * @constructor\n *\n * @param {Element|String} container The DOM element or ID that will contain the widget.\n * @param {Object} [options] Object with the following properties:\n * @param {Clock} [options.clock=new Clock()] The clock to use to control current time.\n * @param {ImageryProvider} [options.imageryProvider=createWorldImagery()] The imagery provider to serve as the base layer. If set to <code>false</code>, no imagery provider will be added.\n * @param {TerrainProvider} [options.terrainProvider=new EllipsoidTerrainProvider] The terrain provider.\n * @param {SkyBox} [options.skyBox] The skybox used to render the stars.  When <code>undefined</code>, the default stars are used. If set to <code>false</code>, no skyBox, Sun, or Moon will be added.\n * @param {SkyAtmosphere} [options.skyAtmosphere] Blue sky, and the glow around the Earth's limb.  Set to <code>false</code> to turn it off.\n * @param {SceneMode} [options.sceneMode=SceneMode.SCENE3D] The initial scene mode.\n * @param {Boolean} [options.scene3DOnly=false] When <code>true</code>, each geometry instance will only be rendered in 3D to save GPU memory.\n * @param {Boolean} [options.orderIndependentTranslucency=true] If true and the configuration supports it, use order independent translucency.\n * @param {MapProjection} [options.mapProjection=new GeographicProjection()] The map projection to use in 2D and Columbus View modes.\n * @param {Globe} [options.globe=new Globe(mapProjection.ellipsoid)] The globe to use in the scene.  If set to <code>false</code>, no globe will be added.\n * @param {Boolean} [options.useDefaultRenderLoop=true] True if this widget should control the render loop, false otherwise.\n * @param {Boolean} [options.useBrowserRecommendedResolution=true] If true, render at the browser's recommended resolution and ignore <code>window.devicePixelRatio</code>.\n * @param {Number} [options.targetFrameRate] The target frame rate when using the default render loop.\n * @param {Boolean} [options.showRenderLoopErrors=true] If true, this widget will automatically display an HTML panel to the user containing the error, if a render loop error occurs.\n * @param {Object} [options.contextOptions] Context and WebGL creation properties corresponding to <code>options</code> passed to {@link Scene}.\n * @param {Element|String} [options.creditContainer] The DOM element or ID that will contain the {@link CreditDisplay}.  If not specified, the credits are added\n *        to the bottom of the widget itself.\n * @param {Element|String} [options.creditViewport] The DOM element or ID that will contain the credit pop up created by the {@link CreditDisplay}.  If not specified, it will appear over the widget itself.\n * @param {Number} [options.terrainExaggeration=1.0] A scalar used to exaggerate the terrain. Note that terrain exaggeration will not modify any other primitive as they are positioned relative to the ellipsoid.\n * @param {Boolean} [options.shadows=false] Determines if shadows are cast by light sources.\n * @param {ShadowMode} [options.terrainShadows=ShadowMode.RECEIVE_ONLY] Determines if the terrain casts or receives shadows from light sources.\n * @param {MapMode2D} [options.mapMode2D=MapMode2D.INFINITE_SCROLL] Determines if the 2D map is rotatable or can be scrolled infinitely in the horizontal direction.\n * @param {Boolean} [options.requestRenderMode=false] If true, rendering a frame will only occur when needed as determined by changes within the scene. Enabling improves performance of the application, but requires using {@link Scene#requestRender} to render a new frame explicitly in this mode. This will be necessary in many cases after making changes to the scene in other parts of the API. See {@link https://cesium.com/blog/2018/01/24/cesium-scene-rendering-performance/|Improving Performance with Explicit Rendering}.\n * @param {Number} [options.maximumRenderTimeChange=0.0] If requestRenderMode is true, this value defines the maximum change in simulation time allowed before a render is requested. See {@link https://cesium.com/blog/2018/01/24/cesium-scene-rendering-performance/|Improving Performance with Explicit Rendering}.\n *\n * @exception {DeveloperError} Element with id \"container\" does not exist in the document.\n *\n * @demo {@link https://sandcastle.cesium.com/index.html?src=Cesium%20Widget.html|Cesium Sandcastle Cesium Widget Demo}\n *\n * @example\n * // For each example, include a link to CesiumWidget.css stylesheet in HTML head,\n * // and in the body, include: <div id=\"cesiumContainer\"></div>\n *\n * //Widget with no terrain and default Bing Maps imagery provider.\n * var widget = new Cesium.CesiumWidget('cesiumContainer');\n *\n * //Widget with ion imagery and Cesium World Terrain.\n * var widget = new Cesium.CesiumWidget('cesiumContainer', {\n *     imageryProvider : Cesium.createWorldImagery(),\n *     terrainProvider : Cesium.createWorldTerrain(),\n *     skyBox : new Cesium.SkyBox({\n *         sources : {\n *           positiveX : 'stars/TychoSkymapII.t3_08192x04096_80_px.jpg',\n *           negativeX : 'stars/TychoSkymapII.t3_08192x04096_80_mx.jpg',\n *           positiveY : 'stars/TychoSkymapII.t3_08192x04096_80_py.jpg',\n *           negativeY : 'stars/TychoSkymapII.t3_08192x04096_80_my.jpg',\n *           positiveZ : 'stars/TychoSkymapII.t3_08192x04096_80_pz.jpg',\n *           negativeZ : 'stars/TychoSkymapII.t3_08192x04096_80_mz.jpg'\n *         }\n *     }),\n *     // Show Columbus View map with Web Mercator projection\n *     sceneMode : Cesium.SceneMode.COLUMBUS_VIEW,\n *     mapProjection : new Cesium.WebMercatorProjection()\n * });\n */\nfunction CesiumWidget(container, options) {\n  //>>includeStart('debug', pragmas.debug);\n  if (!defined(container)) {\n    throw new DeveloperError(\"container is required.\");\n  }\n  //>>includeEnd('debug');\n\n  container = getElement(container);\n\n  options = defaultValue(options, defaultValue.EMPTY_OBJECT);\n\n  //Configure the widget DOM elements\n  var element = document.createElement(\"div\");\n  element.className = \"cesium-widget\";\n  container.appendChild(element);\n\n  var canvas = document.createElement(\"canvas\");\n  var supportsImageRenderingPixelated = FeatureDetection.supportsImageRenderingPixelated();\n  this._supportsImageRenderingPixelated = supportsImageRenderingPixelated;\n  if (supportsImageRenderingPixelated) {\n    canvas.style.imageRendering = FeatureDetection.imageRenderingValue();\n  }\n\n  canvas.oncontextmenu = function () {\n    return false;\n  };\n  canvas.onselectstart = function () {\n    return false;\n  };\n\n  // Interacting with a canvas does not automatically blur the previously focused element.\n  // This leads to unexpected interaction if the last element was an input field.\n  // For example, clicking the mouse wheel could lead to the value in  the field changing\n  // unexpectedly. The solution is to blur whatever has focus as soon as canvas interaction begins.\n  function blurActiveElement() {\n    if (canvas !== canvas.ownerDocument.activeElement) {\n      canvas.ownerDocument.activeElement.blur();\n    }\n  }\n  canvas.addEventListener(\"mousedown\", blurActiveElement);\n  canvas.addEventListener(\"pointerdown\", blurActiveElement);\n\n  element.appendChild(canvas);\n\n  var innerCreditContainer = document.createElement(\"div\");\n  innerCreditContainer.className = \"cesium-widget-credits\";\n\n  var creditContainer = defined(options.creditContainer)\n    ? getElement(options.creditContainer)\n    : element;\n  creditContainer.appendChild(innerCreditContainer);\n\n  var creditViewport = defined(options.creditViewport)\n    ? getElement(options.creditViewport)\n    : element;\n\n  var showRenderLoopErrors = defaultValue(options.showRenderLoopErrors, true);\n\n  var useBrowserRecommendedResolution = defaultValue(\n    options.useBrowserRecommendedResolution,\n    true\n  );\n\n  this._element = element;\n  this._container = container;\n  this._canvas = canvas;\n  this._canvasClientWidth = 0;\n  this._canvasClientHeight = 0;\n  this._lastDevicePixelRatio = 0;\n  this._creditViewport = creditViewport;\n  this._creditContainer = creditContainer;\n  this._innerCreditContainer = innerCreditContainer;\n  this._canRender = false;\n  this._renderLoopRunning = false;\n  this._showRenderLoopErrors = showRenderLoopErrors;\n  this._resolutionScale = 1.0;\n  this._useBrowserRecommendedResolution = useBrowserRecommendedResolution;\n  this._forceResize = false;\n  this._clock = defined(options.clock) ? options.clock : new Clock();\n\n  configureCanvasSize(this);\n\n  try {\n    var scene = new Scene({\n      canvas: canvas,\n      contextOptions: options.contextOptions,\n      creditContainer: innerCreditContainer,\n      creditViewport: creditViewport,\n      mapProjection: options.mapProjection,\n      orderIndependentTranslucency: options.orderIndependentTranslucency,\n      scene3DOnly: defaultValue(options.scene3DOnly, false),\n      terrainExaggeration: options.terrainExaggeration,\n      shadows: options.shadows,\n      mapMode2D: options.mapMode2D,\n      requestRenderMode: options.requestRenderMode,\n      maximumRenderTimeChange: options.maximumRenderTimeChange,\n    });\n    this._scene = scene;\n\n    scene.camera.constrainedAxis = Cartesian3.UNIT_Z;\n\n    configurePixelRatio(this);\n    configureCameraFrustum(this);\n\n    var ellipsoid = defaultValue(\n      scene.mapProjection.ellipsoid,\n      Ellipsoid.WGS84\n    );\n\n    var globe = options.globe;\n    if (!defined(globe)) {\n      globe = new Globe(ellipsoid);\n    }\n    if (globe !== false) {\n      scene.globe = globe;\n      scene.globe.shadows = defaultValue(\n        options.terrainShadows,\n        ShadowMode.RECEIVE_ONLY\n      );\n    }\n\n    var skyBox = options.skyBox;\n    if (!defined(skyBox)) {\n      skyBox = new SkyBox({\n        sources: {\n          positiveX: getDefaultSkyBoxUrl(\"px\"),\n          negativeX: getDefaultSkyBoxUrl(\"mx\"),\n          positiveY: getDefaultSkyBoxUrl(\"py\"),\n          negativeY: getDefaultSkyBoxUrl(\"my\"),\n          positiveZ: getDefaultSkyBoxUrl(\"pz\"),\n          negativeZ: getDefaultSkyBoxUrl(\"mz\"),\n        },\n      });\n    }\n    if (skyBox !== false) {\n      scene.skyBox = skyBox;\n      scene.sun = new Sun();\n      scene.moon = new Moon();\n    }\n\n    // Blue sky, and the glow around the Earth's limb.\n    var skyAtmosphere = options.skyAtmosphere;\n    if (!defined(skyAtmosphere)) {\n      skyAtmosphere = new SkyAtmosphere(ellipsoid);\n    }\n    if (skyAtmosphere !== false) {\n      scene.skyAtmosphere = skyAtmosphere;\n    }\n\n    //Set the base imagery layer\n    var imageryProvider =\n      options.globe === false ? false : options.imageryProvider;\n    if (!defined(imageryProvider)) {\n      imageryProvider = createWorldImagery();\n    }\n\n    if (imageryProvider !== false) {\n      scene.imageryLayers.addImageryProvider(imageryProvider);\n    }\n\n    //Set the terrain provider if one is provided.\n    if (defined(options.terrainProvider) && options.globe !== false) {\n      scene.terrainProvider = options.terrainProvider;\n    }\n\n    this._screenSpaceEventHandler = new ScreenSpaceEventHandler(canvas);\n\n    if (defined(options.sceneMode)) {\n      if (options.sceneMode === SceneMode.SCENE2D) {\n        this._scene.morphTo2D(0);\n      }\n      if (options.sceneMode === SceneMode.COLUMBUS_VIEW) {\n        this._scene.morphToColumbusView(0);\n      }\n    }\n\n    this._useDefaultRenderLoop = undefined;\n    this.useDefaultRenderLoop = defaultValue(\n      options.useDefaultRenderLoop,\n      true\n    );\n\n    this._targetFrameRate = undefined;\n    this.targetFrameRate = options.targetFrameRate;\n\n    var that = this;\n    this._onRenderError = function (scene, error) {\n      that._useDefaultRenderLoop = false;\n      that._renderLoopRunning = false;\n      if (that._showRenderLoopErrors) {\n        var title =\n          \"An error occurred while rendering.  Rendering has stopped.\";\n        that.showErrorPanel(title, undefined, error);\n      }\n    };\n    scene.renderError.addEventListener(this._onRenderError);\n  } catch (error) {\n    if (showRenderLoopErrors) {\n      var title = \"Error constructing CesiumWidget.\";\n      var message =\n        'Visit <a href=\"http://get.webgl.org\">http://get.webgl.org</a> to verify that your web browser and hardware support WebGL.  Consider trying a different web browser or updating your video drivers.  Detailed error information is below:';\n      this.showErrorPanel(title, message, error);\n    }\n    throw error;\n  }\n}\n\nObject.defineProperties(CesiumWidget.prototype, {\n  /**\n   * Gets the parent container.\n   * @memberof CesiumWidget.prototype\n   *\n   * @type {Element}\n   */\n  container: {\n    get: function () {\n      return this._container;\n    },\n  },\n\n  /**\n   * Gets the canvas.\n   * @memberof CesiumWidget.prototype\n   *\n   * @type {Canvas}\n   */\n  canvas: {\n    get: function () {\n      return this._canvas;\n    },\n  },\n\n  /**\n   * Gets the credit container.\n   * @memberof CesiumWidget.prototype\n   *\n   * @type {Element}\n   */\n  creditContainer: {\n    get: function () {\n      return this._creditContainer;\n    },\n  },\n\n  /**\n   * Gets the credit viewport\n   * @memberof CesiumWidget.prototype\n   *\n   * @type {Element}\n   */\n  creditViewport: {\n    get: function () {\n      return this._creditViewport;\n    },\n  },\n\n  /**\n   * Gets the scene.\n   * @memberof CesiumWidget.prototype\n   *\n   * @type {Scene}\n   */\n  scene: {\n    get: function () {\n      return this._scene;\n    },\n  },\n\n  /**\n   * Gets the collection of image layers that will be rendered on the globe.\n   * @memberof CesiumWidget.prototype\n   *\n   * @type {ImageryLayerCollection}\n   * @readonly\n   */\n  imageryLayers: {\n    get: function () {\n      return this._scene.imageryLayers;\n    },\n  },\n\n  /**\n   * The terrain provider providing surface geometry for the globe.\n   * @memberof CesiumWidget.prototype\n   *\n   * @type {TerrainProvider}\n   */\n  terrainProvider: {\n    get: function () {\n      return this._scene.terrainProvider;\n    },\n    set: function (terrainProvider) {\n      this._scene.terrainProvider = terrainProvider;\n    },\n  },\n\n  /**\n   * Gets the camera.\n   * @memberof CesiumWidget.prototype\n   *\n   * @type {Camera}\n   * @readonly\n   */\n  camera: {\n    get: function () {\n      return this._scene.camera;\n    },\n  },\n\n  /**\n   * Gets the clock.\n   * @memberof CesiumWidget.prototype\n   *\n   * @type {Clock}\n   */\n  clock: {\n    get: function () {\n      return this._clock;\n    },\n  },\n\n  /**\n   * Gets the screen space event handler.\n   * @memberof CesiumWidget.prototype\n   *\n   * @type {ScreenSpaceEventHandler}\n   */\n  screenSpaceEventHandler: {\n    get: function () {\n      return this._screenSpaceEventHandler;\n    },\n  },\n\n  /**\n   * Gets or sets the target frame rate of the widget when <code>useDefaultRenderLoop</code>\n   * is true. If undefined, the browser's {@link requestAnimationFrame} implementation\n   * determines the frame rate.  If defined, this value must be greater than 0.  A value higher\n   * than the underlying requestAnimationFrame implementation will have no effect.\n   * @memberof CesiumWidget.prototype\n   *\n   * @type {Number}\n   */\n  targetFrameRate: {\n    get: function () {\n      return this._targetFrameRate;\n    },\n    set: function (value) {\n      //>>includeStart('debug', pragmas.debug);\n      if (value <= 0) {\n        throw new DeveloperError(\n          \"targetFrameRate must be greater than 0, or undefined.\"\n        );\n      }\n      //>>includeEnd('debug');\n      this._targetFrameRate = value;\n    },\n  },\n\n  /**\n   * Gets or sets whether or not this widget should control the render loop.\n   * If set to true the widget will use {@link requestAnimationFrame} to\n   * perform rendering and resizing of the widget, as well as drive the\n   * simulation clock. If set to false, you must manually call the\n   * <code>resize</code>, <code>render</code> methods as part of a custom\n   * render loop.  If an error occurs during rendering, {@link Scene}'s\n   * <code>renderError</code> event will be raised and this property\n   * will be set to false.  It must be set back to true to continue rendering\n   * after the error.\n   * @memberof CesiumWidget.prototype\n   *\n   * @type {Boolean}\n   */\n  useDefaultRenderLoop: {\n    get: function () {\n      return this._useDefaultRenderLoop;\n    },\n    set: function (value) {\n      if (this._useDefaultRenderLoop !== value) {\n        this._useDefaultRenderLoop = value;\n        if (value && !this._renderLoopRunning) {\n          startRenderLoop(this);\n        }\n      }\n    },\n  },\n\n  /**\n   * Gets or sets a scaling factor for rendering resolution.  Values less than 1.0 can improve\n   * performance on less powerful devices while values greater than 1.0 will render at a higher\n   * resolution and then scale down, resulting in improved visual fidelity.\n   * For example, if the widget is laid out at a size of 640x480, setting this value to 0.5\n   * will cause the scene to be rendered at 320x240 and then scaled up while setting\n   * it to 2.0 will cause the scene to be rendered at 1280x960 and then scaled down.\n   * @memberof CesiumWidget.prototype\n   *\n   * @type {Number}\n   * @default 1.0\n   */\n  resolutionScale: {\n    get: function () {\n      return this._resolutionScale;\n    },\n    set: function (value) {\n      //>>includeStart('debug', pragmas.debug);\n      if (value <= 0) {\n        throw new DeveloperError(\"resolutionScale must be greater than 0.\");\n      }\n      //>>includeEnd('debug');\n      if (this._resolutionScale !== value) {\n        this._resolutionScale = value;\n        this._forceResize = true;\n      }\n    },\n  },\n\n  /**\n   * Boolean flag indicating if the browser's recommended resolution is used.\n   * If true, the browser's device pixel ratio is ignored and 1.0 is used instead,\n   * effectively rendering based on CSS pixels instead of device pixels. This can improve\n   * performance on less powerful devices that have high pixel density. When false, rendering\n   * will be in device pixels. {@link CesiumWidget#resolutionScale} will still take effect whether\n   * this flag is true or false.\n   * @memberof CesiumWidget.prototype\n   *\n   * @type {Boolean}\n   * @default true\n   */\n  useBrowserRecommendedResolution: {\n    get: function () {\n      return this._useBrowserRecommendedResolution;\n    },\n    set: function (value) {\n      if (this._useBrowserRecommendedResolution !== value) {\n        this._useBrowserRecommendedResolution = value;\n        this._forceResize = true;\n      }\n    },\n  },\n});\n\n/**\n * Show an error panel to the user containing a title and a longer error message,\n * which can be dismissed using an OK button.  This panel is displayed automatically\n * when a render loop error occurs, if showRenderLoopErrors was not false when the\n * widget was constructed.\n *\n * @param {String} title The title to be displayed on the error panel.  This string is interpreted as text.\n * @param {String} message A helpful, user-facing message to display prior to the detailed error information.  This string is interpreted as HTML.\n * @param {String} [error] The error to be displayed on the error panel.  This string is formatted using {@link formatError} and then displayed as text.\n */\nCesiumWidget.prototype.showErrorPanel = function (title, message, error) {\n  var element = this._element;\n  var overlay = document.createElement(\"div\");\n  overlay.className = \"cesium-widget-errorPanel\";\n\n  var content = document.createElement(\"div\");\n  content.className = \"cesium-widget-errorPanel-content\";\n  overlay.appendChild(content);\n\n  var errorHeader = document.createElement(\"div\");\n  errorHeader.className = \"cesium-widget-errorPanel-header\";\n  errorHeader.appendChild(document.createTextNode(title));\n  content.appendChild(errorHeader);\n\n  var errorPanelScroller = document.createElement(\"div\");\n  errorPanelScroller.className = \"cesium-widget-errorPanel-scroll\";\n  content.appendChild(errorPanelScroller);\n  function resizeCallback() {\n    errorPanelScroller.style.maxHeight =\n      Math.max(Math.round(element.clientHeight * 0.9 - 100), 30) + \"px\";\n  }\n  resizeCallback();\n  if (defined(window.addEventListener)) {\n    window.addEventListener(\"resize\", resizeCallback, false);\n  }\n\n  if (defined(message)) {\n    var errorMessage = document.createElement(\"div\");\n    errorMessage.className = \"cesium-widget-errorPanel-message\";\n    errorMessage.innerHTML = \"<p>\" + message + \"</p>\";\n    errorPanelScroller.appendChild(errorMessage);\n  }\n\n  var errorDetails = \"(no error details available)\";\n  if (defined(error)) {\n    errorDetails = formatError(error);\n  }\n\n  var errorMessageDetails = document.createElement(\"div\");\n  errorMessageDetails.className = \"cesium-widget-errorPanel-message\";\n  errorMessageDetails.appendChild(document.createTextNode(errorDetails));\n  errorPanelScroller.appendChild(errorMessageDetails);\n\n  var buttonPanel = document.createElement(\"div\");\n  buttonPanel.className = \"cesium-widget-errorPanel-buttonPanel\";\n  content.appendChild(buttonPanel);\n\n  var okButton = document.createElement(\"button\");\n  okButton.setAttribute(\"type\", \"button\");\n  okButton.className = \"cesium-button\";\n  okButton.appendChild(document.createTextNode(\"OK\"));\n  okButton.onclick = function () {\n    if (defined(resizeCallback) && defined(window.removeEventListener)) {\n      window.removeEventListener(\"resize\", resizeCallback, false);\n    }\n    element.removeChild(overlay);\n  };\n\n  buttonPanel.appendChild(okButton);\n\n  element.appendChild(overlay);\n\n  //IE8 does not have a console object unless the dev tools are open.\n  if (typeof console !== \"undefined\") {\n    console.error(title + \"\\n\" + message + \"\\n\" + errorDetails);\n  }\n};\n\n/**\n * @returns {Boolean} true if the object has been destroyed, false otherwise.\n */\nCesiumWidget.prototype.isDestroyed = function () {\n  return false;\n};\n\n/**\n * Destroys the widget.  Should be called if permanently\n * removing the widget from layout.\n */\nCesiumWidget.prototype.destroy = function () {\n  if (defined(this._scene)) {\n    this._scene.renderError.removeEventListener(this._onRenderError);\n    this._scene = this._scene.destroy();\n  }\n  this._container.removeChild(this._element);\n  this._creditContainer.removeChild(this._innerCreditContainer);\n  destroyObject(this);\n};\n\n/**\n * Updates the canvas size, camera aspect ratio, and viewport size.\n * This function is called automatically as needed unless\n * <code>useDefaultRenderLoop</code> is set to false.\n */\nCesiumWidget.prototype.resize = function () {\n  var canvas = this._canvas;\n  if (\n    !this._forceResize &&\n    this._canvasClientWidth === canvas.clientWidth &&\n    this._canvasClientHeight === canvas.clientHeight &&\n    this._lastDevicePixelRatio === window.devicePixelRatio\n  ) {\n    return;\n  }\n  this._forceResize = false;\n\n  configureCanvasSize(this);\n  configureCameraFrustum(this);\n\n  this._scene.requestRender();\n};\n\n/**\n * Renders the scene.  This function is called automatically\n * unless <code>useDefaultRenderLoop</code> is set to false;\n */\nCesiumWidget.prototype.render = function () {\n  if (this._canRender) {\n    this._scene.initializeFrame();\n    var currentTime = this._clock.tick();\n    this._scene.render(currentTime);\n  } else {\n    this._clock.tick();\n  }\n};\nexport default CesiumWidget;\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import when from \"../ThirdParty/when.js\";\nimport buildModuleUrl from \"./buildModuleUrl.js\";\nimport defaultValue from \"./defaultValue.js\";\nimport defined from \"./defined.js\";\nimport Iau2006XysSample from \"./Iau2006XysSample.js\";\nimport JulianDate from \"./JulianDate.js\";\nimport Resource from \"./Resource.js\";\nimport TimeStandard from \"./TimeStandard.js\";\n/**\n * A set of IAU2006 XYS data that is used to evaluate the transformation between the International\n * Celestial Reference Frame (ICRF) and the International Terrestrial Reference Frame (ITRF).\n *\n * @alias Iau2006XysData\n * @constructor\n *\n * @param {Object} [options] Object with the following properties:\n * @param {Resource|String} [options.xysFileUrlTemplate='Assets/IAU2006_XYS/IAU2006_XYS_{0}.json'] A template URL for obtaining the XYS data.  In the template,\n *                 `{0}` will be replaced with the file index.\n * @param {Number} [options.interpolationOrder=9] The order of interpolation to perform on the XYS data.\n * @param {Number} [options.sampleZeroJulianEphemerisDate=2442396.5] The Julian ephemeris date (JED) of the\n *                 first XYS sample.\n * @param {Number} [options.stepSizeDays=1.0] The step size, in days, between successive XYS samples.\n * @param {Number} [options.samplesPerXysFile=1000] The number of samples in each XYS file.\n * @param {Number} [options.totalSamples=27426] The total number of samples in all XYS files.\n *\n * @private\n */\n\nfunction Iau2006XysData(options) {\n  options = defaultValue(options, defaultValue.EMPTY_OBJECT);\n  this._xysFileUrlTemplate = Resource.createIfNeeded(options.xysFileUrlTemplate);\n  this._interpolationOrder = defaultValue(options.interpolationOrder, 9);\n  this._sampleZeroJulianEphemerisDate = defaultValue(options.sampleZeroJulianEphemerisDate, 2442396.5);\n  this._sampleZeroDateTT = new JulianDate(this._sampleZeroJulianEphemerisDate, 0.0, TimeStandard.TAI);\n  this._stepSizeDays = defaultValue(options.stepSizeDays, 1.0);\n  this._samplesPerXysFile = defaultValue(options.samplesPerXysFile, 1000);\n  this._totalSamples = defaultValue(options.totalSamples, 27426);\n  this._samples = new Array(this._totalSamples * 3);\n  this._chunkDownloadsInProgress = [];\n  var order = this._interpolationOrder; // Compute denominators and X values for interpolation.\n\n  var denom = this._denominators = new Array(order + 1);\n  var xTable = this._xTable = new Array(order + 1);\n  var stepN = Math.pow(this._stepSizeDays, order);\n\n  for (var i = 0; i <= order; ++i) {\n    denom[i] = stepN;\n    xTable[i] = i * this._stepSizeDays;\n\n    for (var j = 0; j <= order; ++j) {\n      if (j !== i) {\n        denom[i] *= i - j;\n      }\n    }\n\n    denom[i] = 1.0 / denom[i];\n  } // Allocate scratch arrays for interpolation.\n\n\n  this._work = new Array(order + 1);\n  this._coef = new Array(order + 1);\n}\n\nvar julianDateScratch = new JulianDate(0, 0.0, TimeStandard.TAI);\n\nfunction getDaysSinceEpoch(xys, dayTT, secondTT) {\n  var dateTT = julianDateScratch;\n  dateTT.dayNumber = dayTT;\n  dateTT.secondsOfDay = secondTT;\n  return JulianDate.daysDifference(dateTT, xys._sampleZeroDateTT);\n}\n/**\n * Preloads XYS data for a specified date range.\n *\n * @param {Number} startDayTT The Julian day number of the beginning of the interval to preload, expressed in\n *                 the Terrestrial Time (TT) time standard.\n * @param {Number} startSecondTT The seconds past noon of the beginning of the interval to preload, expressed in\n *                 the Terrestrial Time (TT) time standard.\n * @param {Number} stopDayTT The Julian day number of the end of the interval to preload, expressed in\n *                 the Terrestrial Time (TT) time standard.\n * @param {Number} stopSecondTT The seconds past noon of the end of the interval to preload, expressed in\n *                 the Terrestrial Time (TT) time standard.\n * @returns {Promise} A promise that, when resolved, indicates that the requested interval has been\n *                    preloaded.\n */\n\n\nIau2006XysData.prototype.preload = function (startDayTT, startSecondTT, stopDayTT, stopSecondTT) {\n  var startDaysSinceEpoch = getDaysSinceEpoch(this, startDayTT, startSecondTT);\n  var stopDaysSinceEpoch = getDaysSinceEpoch(this, stopDayTT, stopSecondTT);\n  var startIndex = startDaysSinceEpoch / this._stepSizeDays - this._interpolationOrder / 2 | 0;\n\n  if (startIndex < 0) {\n    startIndex = 0;\n  }\n\n  var stopIndex = stopDaysSinceEpoch / this._stepSizeDays - this._interpolationOrder / 2 | 0 + this._interpolationOrder;\n\n  if (stopIndex >= this._totalSamples) {\n    stopIndex = this._totalSamples - 1;\n  }\n\n  var startChunk = startIndex / this._samplesPerXysFile | 0;\n  var stopChunk = stopIndex / this._samplesPerXysFile | 0;\n  var promises = [];\n\n  for (var i = startChunk; i <= stopChunk; ++i) {\n    promises.push(requestXysChunk(this, i));\n  }\n\n  return when.all(promises);\n};\n/**\n * Computes the XYS values for a given date by interpolating.  If the required data is not yet downloaded,\n * this method will return undefined.\n *\n * @param {Number} dayTT The Julian day number for which to compute the XYS value, expressed in\n *                 the Terrestrial Time (TT) time standard.\n * @param {Number} secondTT The seconds past noon of the date for which to compute the XYS value, expressed in\n *                 the Terrestrial Time (TT) time standard.\n * @param {Iau2006XysSample} [result] The instance to which to copy the interpolated result.  If this parameter\n *                           is undefined, a new instance is allocated and returned.\n * @returns {Iau2006XysSample} The interpolated XYS values, or undefined if the required data for this\n *                             computation has not yet been downloaded.\n *\n * @see Iau2006XysData#preload\n */\n\n\nIau2006XysData.prototype.computeXysRadians = function (dayTT, secondTT, result) {\n  var daysSinceEpoch = getDaysSinceEpoch(this, dayTT, secondTT);\n\n  if (daysSinceEpoch < 0.0) {\n    // Can't evaluate prior to the epoch of the data.\n    return undefined;\n  }\n\n  var centerIndex = daysSinceEpoch / this._stepSizeDays | 0;\n\n  if (centerIndex >= this._totalSamples) {\n    // Can't evaluate after the last sample in the data.\n    return undefined;\n  }\n\n  var degree = this._interpolationOrder;\n  var firstIndex = centerIndex - (degree / 2 | 0);\n\n  if (firstIndex < 0) {\n    firstIndex = 0;\n  }\n\n  var lastIndex = firstIndex + degree;\n\n  if (lastIndex >= this._totalSamples) {\n    lastIndex = this._totalSamples - 1;\n    firstIndex = lastIndex - degree;\n\n    if (firstIndex < 0) {\n      firstIndex = 0;\n    }\n  } // Are all the samples we need present?\n  // We can assume so if the first and last are present\n\n\n  var isDataMissing = false;\n  var samples = this._samples;\n\n  if (!defined(samples[firstIndex * 3])) {\n    requestXysChunk(this, firstIndex / this._samplesPerXysFile | 0);\n    isDataMissing = true;\n  }\n\n  if (!defined(samples[lastIndex * 3])) {\n    requestXysChunk(this, lastIndex / this._samplesPerXysFile | 0);\n    isDataMissing = true;\n  }\n\n  if (isDataMissing) {\n    return undefined;\n  }\n\n  if (!defined(result)) {\n    result = new Iau2006XysSample(0.0, 0.0, 0.0);\n  } else {\n    result.x = 0.0;\n    result.y = 0.0;\n    result.s = 0.0;\n  }\n\n  var x = daysSinceEpoch - firstIndex * this._stepSizeDays;\n  var work = this._work;\n  var denom = this._denominators;\n  var coef = this._coef;\n  var xTable = this._xTable;\n  var i, j;\n\n  for (i = 0; i <= degree; ++i) {\n    work[i] = x - xTable[i];\n  }\n\n  for (i = 0; i <= degree; ++i) {\n    coef[i] = 1.0;\n\n    for (j = 0; j <= degree; ++j) {\n      if (j !== i) {\n        coef[i] *= work[j];\n      }\n    }\n\n    coef[i] *= denom[i];\n    var sampleIndex = (firstIndex + i) * 3;\n    result.x += coef[i] * samples[sampleIndex++];\n    result.y += coef[i] * samples[sampleIndex++];\n    result.s += coef[i] * samples[sampleIndex];\n  }\n\n  return result;\n};\n\nfunction requestXysChunk(xysData, chunkIndex) {\n  if (xysData._chunkDownloadsInProgress[chunkIndex]) {\n    // Chunk has already been requested.\n    return xysData._chunkDownloadsInProgress[chunkIndex];\n  }\n\n  var deferred = when.defer();\n  xysData._chunkDownloadsInProgress[chunkIndex] = deferred;\n  var chunkUrl;\n  var xysFileUrlTemplate = xysData._xysFileUrlTemplate;\n\n  if (defined(xysFileUrlTemplate)) {\n    chunkUrl = xysFileUrlTemplate.getDerivedResource({\n      templateValues: {\n        \"0\": chunkIndex\n      }\n    });\n  } else {\n    chunkUrl = new Resource({\n      url: buildModuleUrl(\"Assets/IAU2006_XYS/IAU2006_XYS_\" + chunkIndex + \".json\")\n    });\n  }\n\n  when(chunkUrl.fetchJson(), function (chunk) {\n    xysData._chunkDownloadsInProgress[chunkIndex] = false;\n    var samples = xysData._samples;\n    var newSamples = chunk.samples;\n    var startIndex = chunkIndex * xysData._samplesPerXysFile * 3;\n\n    for (var i = 0, len = newSamples.length; i < len; ++i) {\n      samples[startIndex + i] = newSamples[i];\n    }\n\n    deferred.resolve();\n  });\n  return deferred.promise;\n}\n\nexport default Iau2006XysData;","map":{"version":3,"sources":["C:/Users/passa/Desktop/WaterDeployTrial/node_modules/cesium/Source/Core/Iau2006XysData.js"],"names":["when","buildModuleUrl","defaultValue","defined","Iau2006XysSample","JulianDate","Resource","TimeStandard","Iau2006XysData","options","EMPTY_OBJECT","_xysFileUrlTemplate","createIfNeeded","xysFileUrlTemplate","_interpolationOrder","interpolationOrder","_sampleZeroJulianEphemerisDate","sampleZeroJulianEphemerisDate","_sampleZeroDateTT","TAI","_stepSizeDays","stepSizeDays","_samplesPerXysFile","samplesPerXysFile","_totalSamples","totalSamples","_samples","Array","_chunkDownloadsInProgress","order","denom","_denominators","xTable","_xTable","stepN","Math","pow","i","j","_work","_coef","julianDateScratch","getDaysSinceEpoch","xys","dayTT","secondTT","dateTT","dayNumber","secondsOfDay","daysDifference","prototype","preload","startDayTT","startSecondTT","stopDayTT","stopSecondTT","startDaysSinceEpoch","stopDaysSinceEpoch","startIndex","stopIndex","startChunk","stopChunk","promises","push","requestXysChunk","all","computeXysRadians","result","daysSinceEpoch","undefined","centerIndex","degree","firstIndex","lastIndex","isDataMissing","samples","x","y","s","work","coef","sampleIndex","xysData","chunkIndex","deferred","defer","chunkUrl","getDerivedResource","templateValues","url","fetchJson","chunk","newSamples","len","length","resolve","promise"],"mappings":"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","sourcesContent":["import when from \"../ThirdParty/when.js\";\nimport buildModuleUrl from \"./buildModuleUrl.js\";\nimport defaultValue from \"./defaultValue.js\";\nimport defined from \"./defined.js\";\nimport Iau2006XysSample from \"./Iau2006XysSample.js\";\nimport JulianDate from \"./JulianDate.js\";\nimport Resource from \"./Resource.js\";\nimport TimeStandard from \"./TimeStandard.js\";\n\n/**\n * A set of IAU2006 XYS data that is used to evaluate the transformation between the International\n * Celestial Reference Frame (ICRF) and the International Terrestrial Reference Frame (ITRF).\n *\n * @alias Iau2006XysData\n * @constructor\n *\n * @param {Object} [options] Object with the following properties:\n * @param {Resource|String} [options.xysFileUrlTemplate='Assets/IAU2006_XYS/IAU2006_XYS_{0}.json'] A template URL for obtaining the XYS data.  In the template,\n *                 `{0}` will be replaced with the file index.\n * @param {Number} [options.interpolationOrder=9] The order of interpolation to perform on the XYS data.\n * @param {Number} [options.sampleZeroJulianEphemerisDate=2442396.5] The Julian ephemeris date (JED) of the\n *                 first XYS sample.\n * @param {Number} [options.stepSizeDays=1.0] The step size, in days, between successive XYS samples.\n * @param {Number} [options.samplesPerXysFile=1000] The number of samples in each XYS file.\n * @param {Number} [options.totalSamples=27426] The total number of samples in all XYS files.\n *\n * @private\n */\nfunction Iau2006XysData(options) {\n  options = defaultValue(options, defaultValue.EMPTY_OBJECT);\n\n  this._xysFileUrlTemplate = Resource.createIfNeeded(\n    options.xysFileUrlTemplate\n  );\n  this._interpolationOrder = defaultValue(options.interpolationOrder, 9);\n  this._sampleZeroJulianEphemerisDate = defaultValue(\n    options.sampleZeroJulianEphemerisDate,\n    2442396.5\n  );\n  this._sampleZeroDateTT = new JulianDate(\n    this._sampleZeroJulianEphemerisDate,\n    0.0,\n    TimeStandard.TAI\n  );\n  this._stepSizeDays = defaultValue(options.stepSizeDays, 1.0);\n  this._samplesPerXysFile = defaultValue(options.samplesPerXysFile, 1000);\n  this._totalSamples = defaultValue(options.totalSamples, 27426);\n  this._samples = new Array(this._totalSamples * 3);\n  this._chunkDownloadsInProgress = [];\n\n  var order = this._interpolationOrder;\n\n  // Compute denominators and X values for interpolation.\n  var denom = (this._denominators = new Array(order + 1));\n  var xTable = (this._xTable = new Array(order + 1));\n\n  var stepN = Math.pow(this._stepSizeDays, order);\n\n  for (var i = 0; i <= order; ++i) {\n    denom[i] = stepN;\n    xTable[i] = i * this._stepSizeDays;\n\n    for (var j = 0; j <= order; ++j) {\n      if (j !== i) {\n        denom[i] *= i - j;\n      }\n    }\n\n    denom[i] = 1.0 / denom[i];\n  }\n\n  // Allocate scratch arrays for interpolation.\n  this._work = new Array(order + 1);\n  this._coef = new Array(order + 1);\n}\n\nvar julianDateScratch = new JulianDate(0, 0.0, TimeStandard.TAI);\n\nfunction getDaysSinceEpoch(xys, dayTT, secondTT) {\n  var dateTT = julianDateScratch;\n  dateTT.dayNumber = dayTT;\n  dateTT.secondsOfDay = secondTT;\n  return JulianDate.daysDifference(dateTT, xys._sampleZeroDateTT);\n}\n\n/**\n * Preloads XYS data for a specified date range.\n *\n * @param {Number} startDayTT The Julian day number of the beginning of the interval to preload, expressed in\n *                 the Terrestrial Time (TT) time standard.\n * @param {Number} startSecondTT The seconds past noon of the beginning of the interval to preload, expressed in\n *                 the Terrestrial Time (TT) time standard.\n * @param {Number} stopDayTT The Julian day number of the end of the interval to preload, expressed in\n *                 the Terrestrial Time (TT) time standard.\n * @param {Number} stopSecondTT The seconds past noon of the end of the interval to preload, expressed in\n *                 the Terrestrial Time (TT) time standard.\n * @returns {Promise} A promise that, when resolved, indicates that the requested interval has been\n *                    preloaded.\n */\nIau2006XysData.prototype.preload = function (\n  startDayTT,\n  startSecondTT,\n  stopDayTT,\n  stopSecondTT\n) {\n  var startDaysSinceEpoch = getDaysSinceEpoch(this, startDayTT, startSecondTT);\n  var stopDaysSinceEpoch = getDaysSinceEpoch(this, stopDayTT, stopSecondTT);\n\n  var startIndex =\n    (startDaysSinceEpoch / this._stepSizeDays - this._interpolationOrder / 2) |\n    0;\n  if (startIndex < 0) {\n    startIndex = 0;\n  }\n\n  var stopIndex =\n    (stopDaysSinceEpoch / this._stepSizeDays - this._interpolationOrder / 2) |\n    (0 + this._interpolationOrder);\n  if (stopIndex >= this._totalSamples) {\n    stopIndex = this._totalSamples - 1;\n  }\n\n  var startChunk = (startIndex / this._samplesPerXysFile) | 0;\n  var stopChunk = (stopIndex / this._samplesPerXysFile) | 0;\n\n  var promises = [];\n  for (var i = startChunk; i <= stopChunk; ++i) {\n    promises.push(requestXysChunk(this, i));\n  }\n\n  return when.all(promises);\n};\n\n/**\n * Computes the XYS values for a given date by interpolating.  If the required data is not yet downloaded,\n * this method will return undefined.\n *\n * @param {Number} dayTT The Julian day number for which to compute the XYS value, expressed in\n *                 the Terrestrial Time (TT) time standard.\n * @param {Number} secondTT The seconds past noon of the date for which to compute the XYS value, expressed in\n *                 the Terrestrial Time (TT) time standard.\n * @param {Iau2006XysSample} [result] The instance to which to copy the interpolated result.  If this parameter\n *                           is undefined, a new instance is allocated and returned.\n * @returns {Iau2006XysSample} The interpolated XYS values, or undefined if the required data for this\n *                             computation has not yet been downloaded.\n *\n * @see Iau2006XysData#preload\n */\nIau2006XysData.prototype.computeXysRadians = function (\n  dayTT,\n  secondTT,\n  result\n) {\n  var daysSinceEpoch = getDaysSinceEpoch(this, dayTT, secondTT);\n  if (daysSinceEpoch < 0.0) {\n    // Can't evaluate prior to the epoch of the data.\n    return undefined;\n  }\n\n  var centerIndex = (daysSinceEpoch / this._stepSizeDays) | 0;\n  if (centerIndex >= this._totalSamples) {\n    // Can't evaluate after the last sample in the data.\n    return undefined;\n  }\n\n  var degree = this._interpolationOrder;\n\n  var firstIndex = centerIndex - ((degree / 2) | 0);\n  if (firstIndex < 0) {\n    firstIndex = 0;\n  }\n  var lastIndex = firstIndex + degree;\n  if (lastIndex >= this._totalSamples) {\n    lastIndex = this._totalSamples - 1;\n    firstIndex = lastIndex - degree;\n    if (firstIndex < 0) {\n      firstIndex = 0;\n    }\n  }\n\n  // Are all the samples we need present?\n  // We can assume so if the first and last are present\n  var isDataMissing = false;\n  var samples = this._samples;\n  if (!defined(samples[firstIndex * 3])) {\n    requestXysChunk(this, (firstIndex / this._samplesPerXysFile) | 0);\n    isDataMissing = true;\n  }\n\n  if (!defined(samples[lastIndex * 3])) {\n    requestXysChunk(this, (lastIndex / this._samplesPerXysFile) | 0);\n    isDataMissing = true;\n  }\n\n  if (isDataMissing) {\n    return undefined;\n  }\n\n  if (!defined(result)) {\n    result = new Iau2006XysSample(0.0, 0.0, 0.0);\n  } else {\n    result.x = 0.0;\n    result.y = 0.0;\n    result.s = 0.0;\n  }\n\n  var x = daysSinceEpoch - firstIndex * this._stepSizeDays;\n\n  var work = this._work;\n  var denom = this._denominators;\n  var coef = this._coef;\n  var xTable = this._xTable;\n\n  var i, j;\n  for (i = 0; i <= degree; ++i) {\n    work[i] = x - xTable[i];\n  }\n\n  for (i = 0; i <= degree; ++i) {\n    coef[i] = 1.0;\n\n    for (j = 0; j <= degree; ++j) {\n      if (j !== i) {\n        coef[i] *= work[j];\n      }\n    }\n\n    coef[i] *= denom[i];\n\n    var sampleIndex = (firstIndex + i) * 3;\n    result.x += coef[i] * samples[sampleIndex++];\n    result.y += coef[i] * samples[sampleIndex++];\n    result.s += coef[i] * samples[sampleIndex];\n  }\n\n  return result;\n};\n\nfunction requestXysChunk(xysData, chunkIndex) {\n  if (xysData._chunkDownloadsInProgress[chunkIndex]) {\n    // Chunk has already been requested.\n    return xysData._chunkDownloadsInProgress[chunkIndex];\n  }\n\n  var deferred = when.defer();\n\n  xysData._chunkDownloadsInProgress[chunkIndex] = deferred;\n\n  var chunkUrl;\n  var xysFileUrlTemplate = xysData._xysFileUrlTemplate;\n  if (defined(xysFileUrlTemplate)) {\n    chunkUrl = xysFileUrlTemplate.getDerivedResource({\n      templateValues: {\n        \"0\": chunkIndex,\n      },\n    });\n  } else {\n    chunkUrl = new Resource({\n      url: buildModuleUrl(\n        \"Assets/IAU2006_XYS/IAU2006_XYS_\" + chunkIndex + \".json\"\n      ),\n    });\n  }\n\n  when(chunkUrl.fetchJson(), function (chunk) {\n    xysData._chunkDownloadsInProgress[chunkIndex] = false;\n\n    var samples = xysData._samples;\n    var newSamples = chunk.samples;\n    var startIndex = chunkIndex * xysData._samplesPerXysFile * 3;\n\n    for (var i = 0, len = newSamples.length; i < len; ++i) {\n      samples[startIndex + i] = newSamples[i];\n    }\n\n    deferred.resolve();\n  });\n\n  return deferred.promise;\n}\nexport default Iau2006XysData;\n"]},"metadata":{},"sourceType":"module"}
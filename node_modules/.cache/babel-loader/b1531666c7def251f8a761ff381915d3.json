{"ast":null,"code":"import DeveloperError from \"./DeveloperError.js\";\n/**\n * Static interface for types which can store their values as packed\n * elements in an array.  These methods and properties are expected to be\n * defined on a constructor function.\n *\n * @exports Packable\n *\n * @see PackableForInterpolation\n */\n\nvar Packable = {\n  /**\n   * The number of elements used to pack the object into an array.\n   * @type {Number}\n   */\n  packedLength: undefined,\n\n  /**\n   * Stores the provided instance into the provided array.\n   * @function\n   *\n   * @param {*} value The value to pack.\n   * @param {Number[]} array The array to pack into.\n   * @param {Number} [startingIndex=0] The index into the array at which to start packing the elements.\n   */\n  pack: DeveloperError.throwInstantiationError,\n\n  /**\n   * Retrieves an instance from a packed array.\n   * @function\n   *\n   * @param {Number[]} array The packed array.\n   * @param {Number} [startingIndex=0] The starting index of the element to be unpacked.\n   * @param {Object} [result] The object into which to store the result.\n   * @returns {Object} The modified result parameter or a new Object instance if one was not provided.\n   */\n  unpack: DeveloperError.throwInstantiationError\n};\nexport default Packable;","map":{"version":3,"sources":["C:/Users/passa/Desktop/WaterDeployTrial/node_modules/cesium/Source/Core/Packable.js"],"names":["DeveloperError","Packable","packedLength","undefined","pack","throwInstantiationError","unpack"],"mappings":"AAAA,OAAOA,cAAP,MAA2B,qBAA3B;AAEA;;;;;;;;;;AASA,IAAIC,QAAQ,GAAG;AACb;;;;AAIAC,EAAAA,YAAY,EAAEC,SALD;;AAOb;;;;;;;;AAQAC,EAAAA,IAAI,EAAEJ,cAAc,CAACK,uBAfR;;AAiBb;;;;;;;;;AASAC,EAAAA,MAAM,EAAEN,cAAc,CAACK;AA1BV,CAAf;AA4BA,eAAeJ,QAAf","sourcesContent":["import DeveloperError from \"./DeveloperError.js\";\n\n/**\n * Static interface for types which can store their values as packed\n * elements in an array.  These methods and properties are expected to be\n * defined on a constructor function.\n *\n * @exports Packable\n *\n * @see PackableForInterpolation\n */\nvar Packable = {\n  /**\n   * The number of elements used to pack the object into an array.\n   * @type {Number}\n   */\n  packedLength: undefined,\n\n  /**\n   * Stores the provided instance into the provided array.\n   * @function\n   *\n   * @param {*} value The value to pack.\n   * @param {Number[]} array The array to pack into.\n   * @param {Number} [startingIndex=0] The index into the array at which to start packing the elements.\n   */\n  pack: DeveloperError.throwInstantiationError,\n\n  /**\n   * Retrieves an instance from a packed array.\n   * @function\n   *\n   * @param {Number[]} array The packed array.\n   * @param {Number} [startingIndex=0] The starting index of the element to be unpacked.\n   * @param {Object} [result] The object into which to store the result.\n   * @returns {Object} The modified result parameter or a new Object instance if one was not provided.\n   */\n  unpack: DeveloperError.throwInstantiationError,\n};\nexport default Packable;\n"]},"metadata":{},"sourceType":"module"}
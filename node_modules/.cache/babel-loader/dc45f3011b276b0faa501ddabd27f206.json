{"ast":null,"code":"import BoundingRectangle from \"../Core/BoundingRectangle.js\";\nimport Color from \"../Core/Color.js\";\nimport defined from \"../Core/defined.js\";\nimport destroyObject from \"../Core/destroyObject.js\";\nimport PixelFormat from \"../Core/PixelFormat.js\";\nimport ClearCommand from \"../Renderer/ClearCommand.js\";\nimport Framebuffer from \"../Renderer/Framebuffer.js\";\nimport PixelDatatype from \"../Renderer/PixelDatatype.js\";\nimport RenderState from \"../Renderer/RenderState.js\";\nimport Sampler from \"../Renderer/Sampler.js\";\nimport ShaderSource from \"../Renderer/ShaderSource.js\";\nimport Texture from \"../Renderer/Texture.js\";\nimport PassThrough from \"../Shaders/PostProcessStages/PassThrough.js\";\nimport PassThroughDepth from \"../Shaders/PostProcessStages/PassThroughDepth.js\";\nimport BlendingState from \"./BlendingState.js\";\nimport StencilConstants from \"./StencilConstants.js\";\nimport StencilFunction from \"./StencilFunction.js\";\nimport StencilOperation from \"./StencilOperation.js\";\n/**\n * @private\n */\n\nfunction GlobeDepth() {\n  this._globeColorTexture = undefined;\n  this._primitiveColorTexture = undefined;\n  this._depthStencilTexture = undefined;\n  this._globeDepthTexture = undefined;\n  this._tempGlobeDepthTexture = undefined;\n  this._tempCopyDepthTexture = undefined;\n  this._globeColorFramebuffer = undefined;\n  this._primitiveColorFramebuffer = undefined;\n  this._copyDepthFramebuffer = undefined;\n  this._tempCopyDepthFramebuffer = undefined;\n  this._updateDepthFramebuffer = undefined;\n  this._clearGlobeColorCommand = undefined;\n  this._clearPrimitiveColorCommand = undefined;\n  this._copyColorCommand = undefined;\n  this._copyDepthCommand = undefined;\n  this._tempCopyDepthCommand = undefined;\n  this._updateDepthCommand = undefined;\n  this._mergeColorCommand = undefined;\n  this._viewport = new BoundingRectangle();\n  this._rs = undefined;\n  this._rsBlend = undefined;\n  this._rsUpdate = undefined;\n  this._useScissorTest = false;\n  this._scissorRectangle = undefined;\n  this._useLogDepth = undefined;\n  this._useHdr = undefined;\n  this._clearGlobeDepth = undefined;\n  this._debugGlobeDepthViewportCommand = undefined;\n}\n\nObject.defineProperties(GlobeDepth.prototype, {\n  framebuffer: {\n    get: function () {\n      return this._globeColorFramebuffer;\n    }\n  },\n  primitiveFramebuffer: {\n    get: function () {\n      return this._primitiveColorFramebuffer;\n    }\n  }\n});\n\nfunction executeDebugGlobeDepth(globeDepth, context, passState, useLogDepth) {\n  if (!defined(globeDepth._debugGlobeDepthViewportCommand) || useLogDepth !== globeDepth._useLogDepth) {\n    var fsSource = \"uniform sampler2D u_depthTexture;\\n\" + \"varying vec2 v_textureCoordinates;\\n\" + \"void main()\\n\" + \"{\\n\" + \"    float z_window = czm_unpackDepth(texture2D(u_depthTexture, v_textureCoordinates));\\n\" + \"    z_window = czm_reverseLogDepth(z_window); \\n\" + \"    float n_range = czm_depthRange.near;\\n\" + \"    float f_range = czm_depthRange.far;\\n\" + \"    float z_ndc = (2.0 * z_window - n_range - f_range) / (f_range - n_range);\\n\" + \"    float scale = pow(z_ndc * 0.5 + 0.5, 8.0);\\n\" + \"    gl_FragColor = vec4(mix(vec3(0.0), vec3(1.0), scale), 1.0);\\n\" + \"}\\n\";\n    var fs = new ShaderSource({\n      defines: [useLogDepth ? \"LOG_DEPTH\" : \"\"],\n      sources: [fsSource]\n    });\n    globeDepth._debugGlobeDepthViewportCommand = context.createViewportQuadCommand(fs, {\n      uniformMap: {\n        u_depthTexture: function () {\n          return globeDepth._globeDepthTexture;\n        }\n      },\n      owner: globeDepth\n    });\n    globeDepth._useLogDepth = useLogDepth;\n  }\n\n  globeDepth._debugGlobeDepthViewportCommand.execute(context, passState);\n}\n\nfunction destroyTextures(globeDepth) {\n  globeDepth._globeColorTexture = globeDepth._globeColorTexture && !globeDepth._globeColorTexture.isDestroyed() && globeDepth._globeColorTexture.destroy();\n  globeDepth._depthStencilTexture = globeDepth._depthStencilTexture && !globeDepth._depthStencilTexture.isDestroyed() && globeDepth._depthStencilTexture.destroy();\n  globeDepth._globeDepthTexture = globeDepth._globeDepthTexture && !globeDepth._globeDepthTexture.isDestroyed() && globeDepth._globeDepthTexture.destroy();\n}\n\nfunction destroyFramebuffers(globeDepth) {\n  globeDepth._globeColorFramebuffer = globeDepth._globeColorFramebuffer && !globeDepth._globeColorFramebuffer.isDestroyed() && globeDepth._globeColorFramebuffer.destroy();\n  globeDepth._copyDepthFramebuffer = globeDepth._copyDepthFramebuffer && !globeDepth._copyDepthFramebuffer.isDestroyed() && globeDepth._copyDepthFramebuffer.destroy();\n}\n\nfunction destroyUpdateDepthResources(globeDepth) {\n  globeDepth._tempCopyDepthFramebuffer = globeDepth._tempCopyDepthFramebuffer && !globeDepth._tempCopyDepthFramebuffer.isDestroyed() && globeDepth._tempCopyDepthFramebuffer.destroy();\n  globeDepth._updateDepthFramebuffer = globeDepth._updateDepthFramebuffer && !globeDepth._updateDepthFramebuffer.isDestroyed() && globeDepth._updateDepthFramebuffer.destroy();\n  globeDepth._tempGlobeDepthTexture = globeDepth._tempGlobeDepthTexture && !globeDepth._tempGlobeDepthTexture.isDestroyed() && globeDepth._tempGlobeDepthTexture.destroy();\n}\n\nfunction createUpdateDepthResources(globeDepth, context, width, height, passState) {\n  globeDepth._tempGlobeDepthTexture = new Texture({\n    context: context,\n    width: width,\n    height: height,\n    pixelFormat: PixelFormat.RGBA,\n    pixelDatatype: PixelDatatype.UNSIGNED_BYTE,\n    sampler: Sampler.NEAREST\n  });\n  globeDepth._tempCopyDepthFramebuffer = new Framebuffer({\n    context: context,\n    colorTextures: [globeDepth._tempGlobeDepthTexture],\n    destroyAttachments: false\n  });\n  globeDepth._updateDepthFramebuffer = new Framebuffer({\n    context: context,\n    colorTextures: [globeDepth._globeDepthTexture],\n    depthStencilTexture: passState.framebuffer.depthStencilTexture,\n    destroyAttachments: false\n  });\n}\n\nfunction createTextures(globeDepth, context, width, height, hdr) {\n  var pixelDatatype = hdr ? context.halfFloatingPointTexture ? PixelDatatype.HALF_FLOAT : PixelDatatype.FLOAT : PixelDatatype.UNSIGNED_BYTE;\n  globeDepth._globeColorTexture = new Texture({\n    context: context,\n    width: width,\n    height: height,\n    pixelFormat: PixelFormat.RGBA,\n    pixelDatatype: pixelDatatype,\n    sampler: Sampler.NEAREST\n  });\n  globeDepth._depthStencilTexture = new Texture({\n    context: context,\n    width: width,\n    height: height,\n    pixelFormat: PixelFormat.DEPTH_STENCIL,\n    pixelDatatype: PixelDatatype.UNSIGNED_INT_24_8\n  });\n  globeDepth._globeDepthTexture = new Texture({\n    context: context,\n    width: width,\n    height: height,\n    pixelFormat: PixelFormat.RGBA,\n    pixelDatatype: PixelDatatype.UNSIGNED_BYTE,\n    sampler: Sampler.NEAREST\n  });\n}\n\nfunction createFramebuffers(globeDepth, context) {\n  globeDepth._globeColorFramebuffer = new Framebuffer({\n    context: context,\n    colorTextures: [globeDepth._globeColorTexture],\n    depthStencilTexture: globeDepth._depthStencilTexture,\n    destroyAttachments: false\n  });\n  globeDepth._copyDepthFramebuffer = new Framebuffer({\n    context: context,\n    colorTextures: [globeDepth._globeDepthTexture],\n    destroyAttachments: false\n  });\n}\n\nfunction createPrimitiveFramebuffer(globeDepth, context, width, height, hdr) {\n  var pixelDatatype = hdr ? context.halfFloatingPointTexture ? PixelDatatype.HALF_FLOAT : PixelDatatype.FLOAT : PixelDatatype.UNSIGNED_BYTE;\n  globeDepth._primitiveColorTexture = new Texture({\n    context: context,\n    width: width,\n    height: height,\n    pixelFormat: PixelFormat.RGBA,\n    pixelDatatype: pixelDatatype,\n    sampler: Sampler.NEAREST\n  });\n  globeDepth._primitiveColorFramebuffer = new Framebuffer({\n    context: context,\n    colorTextures: [globeDepth._primitiveColorTexture],\n    depthStencilTexture: globeDepth._depthStencilTexture,\n    destroyAttachments: false\n  });\n}\n\nfunction destroyPrimitiveFramebuffer(globeDepth) {\n  globeDepth._primitiveColorTexture = globeDepth._primitiveColorTexture && !globeDepth._primitiveColorTexture.isDestroyed() && globeDepth._primitiveColorTexture.destroy();\n  globeDepth._primitiveColorFramebuffer = globeDepth._primitiveColorFramebuffer && !globeDepth._primitiveColorFramebuffer.isDestroyed() && globeDepth._primitiveColorFramebuffer.destroy();\n}\n\nfunction updateFramebuffers(globeDepth, context, width, height, hdr, clearGlobeDepth) {\n  var colorTexture = globeDepth._globeColorTexture;\n  var textureChanged = !defined(colorTexture) || colorTexture.width !== width || colorTexture.height !== height || hdr !== globeDepth._useHdr;\n\n  if (textureChanged) {\n    destroyTextures(globeDepth);\n    destroyFramebuffers(globeDepth);\n    createTextures(globeDepth, context, width, height, hdr, clearGlobeDepth);\n    createFramebuffers(globeDepth, context, clearGlobeDepth);\n  }\n\n  if (textureChanged || clearGlobeDepth !== globeDepth._clearGlobeDepth) {\n    destroyPrimitiveFramebuffer(globeDepth);\n\n    if (clearGlobeDepth) {\n      createPrimitiveFramebuffer(globeDepth, context, width, height, hdr);\n    }\n  }\n}\n\nfunction updateCopyCommands(globeDepth, context, width, height, passState) {\n  globeDepth._viewport.width = width;\n  globeDepth._viewport.height = height;\n  var useScissorTest = !BoundingRectangle.equals(globeDepth._viewport, passState.viewport);\n  var updateScissor = useScissorTest !== globeDepth._useScissorTest;\n  globeDepth._useScissorTest = useScissorTest;\n\n  if (!BoundingRectangle.equals(globeDepth._scissorRectangle, passState.viewport)) {\n    globeDepth._scissorRectangle = BoundingRectangle.clone(passState.viewport, globeDepth._scissorRectangle);\n    updateScissor = true;\n  }\n\n  if (!defined(globeDepth._rs) || !BoundingRectangle.equals(globeDepth._viewport, globeDepth._rs.viewport) || updateScissor) {\n    globeDepth._rs = RenderState.fromCache({\n      viewport: globeDepth._viewport,\n      scissorTest: {\n        enabled: globeDepth._useScissorTest,\n        rectangle: globeDepth._scissorRectangle\n      }\n    });\n    globeDepth._rsBlend = RenderState.fromCache({\n      viewport: globeDepth._viewport,\n      scissorTest: {\n        enabled: globeDepth._useScissorTest,\n        rectangle: globeDepth._scissorRectangle\n      },\n      blending: BlendingState.ALPHA_BLEND\n    }); // Copy packed depth only if the 3D Tiles bit is set\n\n    globeDepth._rsUpdate = RenderState.fromCache({\n      viewport: globeDepth._viewport,\n      scissorTest: {\n        enabled: globeDepth._useScissorTest,\n        rectangle: globeDepth._scissorRectangle\n      },\n      stencilTest: {\n        enabled: true,\n        frontFunction: StencilFunction.EQUAL,\n        frontOperation: {\n          fail: StencilOperation.KEEP,\n          zFail: StencilOperation.KEEP,\n          zPass: StencilOperation.KEEP\n        },\n        backFunction: StencilFunction.NEVER,\n        reference: StencilConstants.CESIUM_3D_TILE_MASK,\n        mask: StencilConstants.CESIUM_3D_TILE_MASK\n      }\n    });\n  }\n\n  if (!defined(globeDepth._copyDepthCommand)) {\n    globeDepth._copyDepthCommand = context.createViewportQuadCommand(PassThroughDepth, {\n      uniformMap: {\n        u_depthTexture: function () {\n          return globeDepth._depthStencilTexture;\n        }\n      },\n      owner: globeDepth\n    });\n  }\n\n  globeDepth._copyDepthCommand.framebuffer = globeDepth._copyDepthFramebuffer;\n  globeDepth._copyDepthCommand.renderState = globeDepth._rs;\n\n  if (!defined(globeDepth._copyColorCommand)) {\n    globeDepth._copyColorCommand = context.createViewportQuadCommand(PassThrough, {\n      uniformMap: {\n        colorTexture: function () {\n          return globeDepth._globeColorTexture;\n        }\n      },\n      owner: globeDepth\n    });\n  }\n\n  globeDepth._copyColorCommand.renderState = globeDepth._rs;\n\n  if (!defined(globeDepth._tempCopyDepthCommand)) {\n    globeDepth._tempCopyDepthCommand = context.createViewportQuadCommand(PassThroughDepth, {\n      uniformMap: {\n        u_depthTexture: function () {\n          return globeDepth._tempCopyDepthTexture;\n        }\n      },\n      owner: globeDepth\n    });\n  }\n\n  globeDepth._tempCopyDepthCommand.framebuffer = globeDepth._tempCopyDepthFramebuffer;\n  globeDepth._tempCopyDepthCommand.renderState = globeDepth._rs;\n\n  if (!defined(globeDepth._updateDepthCommand)) {\n    globeDepth._updateDepthCommand = context.createViewportQuadCommand(PassThrough, {\n      uniformMap: {\n        colorTexture: function () {\n          return globeDepth._tempGlobeDepthTexture;\n        }\n      },\n      owner: globeDepth\n    });\n  }\n\n  globeDepth._updateDepthCommand.framebuffer = globeDepth._updateDepthFramebuffer;\n  globeDepth._updateDepthCommand.renderState = globeDepth._rsUpdate;\n\n  if (!defined(globeDepth._clearGlobeColorCommand)) {\n    globeDepth._clearGlobeColorCommand = new ClearCommand({\n      color: new Color(0.0, 0.0, 0.0, 0.0),\n      stencil: 0.0,\n      owner: globeDepth\n    });\n  }\n\n  globeDepth._clearGlobeColorCommand.framebuffer = globeDepth._globeColorFramebuffer;\n\n  if (!defined(globeDepth._clearPrimitiveColorCommand)) {\n    globeDepth._clearPrimitiveColorCommand = new ClearCommand({\n      color: new Color(0.0, 0.0, 0.0, 0.0),\n      stencil: 0.0,\n      owner: globeDepth\n    });\n  }\n\n  globeDepth._clearPrimitiveColorCommand.framebuffer = globeDepth._primitiveColorFramebuffer;\n\n  if (!defined(globeDepth._mergeColorCommand)) {\n    globeDepth._mergeColorCommand = context.createViewportQuadCommand(PassThrough, {\n      uniformMap: {\n        colorTexture: function () {\n          return globeDepth._primitiveColorTexture;\n        }\n      },\n      owner: globeDepth\n    });\n  }\n\n  globeDepth._mergeColorCommand.framebuffer = globeDepth._globeColorFramebuffer;\n  globeDepth._mergeColorCommand.renderState = globeDepth._rsBlend;\n}\n\nGlobeDepth.prototype.executeDebugGlobeDepth = function (context, passState, useLogDepth) {\n  executeDebugGlobeDepth(this, context, passState, useLogDepth);\n};\n\nGlobeDepth.prototype.update = function (context, passState, viewport, hdr, clearGlobeDepth) {\n  var width = viewport.width;\n  var height = viewport.height;\n  updateFramebuffers(this, context, width, height, hdr, clearGlobeDepth);\n  updateCopyCommands(this, context, width, height, passState);\n  context.uniformState.globeDepthTexture = undefined;\n  this._useHdr = hdr;\n  this._clearGlobeDepth = clearGlobeDepth;\n};\n\nGlobeDepth.prototype.executeCopyDepth = function (context, passState) {\n  if (defined(this._copyDepthCommand)) {\n    this._copyDepthCommand.execute(context, passState);\n\n    context.uniformState.globeDepthTexture = this._globeDepthTexture;\n  }\n};\n\nGlobeDepth.prototype.executeUpdateDepth = function (context, passState, clearGlobeDepth) {\n  var depthTextureToCopy = passState.framebuffer.depthStencilTexture;\n\n  if (clearGlobeDepth || depthTextureToCopy !== this._depthStencilTexture) {\n    // First copy the depth to a temporary globe depth texture, then update the\n    // main globe depth texture where the stencil bit for 3D Tiles is set.\n    // This preserves the original globe depth except where 3D Tiles is rendered.\n    // The additional texture and framebuffer resources are created on demand.\n    if (defined(this._updateDepthCommand)) {\n      if (!defined(this._updateDepthFramebuffer) || this._updateDepthFramebuffer.depthStencilTexture !== depthTextureToCopy || this._updateDepthFramebuffer.getColorTexture(0) !== this._globeDepthTexture) {\n        var width = this._globeDepthTexture.width;\n        var height = this._globeDepthTexture.height;\n        destroyUpdateDepthResources(this);\n        createUpdateDepthResources(this, context, width, height, passState);\n        updateCopyCommands(this, context, width, height, passState);\n      }\n\n      this._tempCopyDepthTexture = depthTextureToCopy;\n\n      this._tempCopyDepthCommand.execute(context, passState);\n\n      this._updateDepthCommand.execute(context, passState);\n    }\n\n    return;\n  } // Fast path - the depth texture can be copied normally.\n\n\n  if (defined(this._copyDepthCommand)) {\n    this._copyDepthCommand.execute(context, passState);\n  }\n};\n\nGlobeDepth.prototype.executeCopyColor = function (context, passState) {\n  if (defined(this._copyColorCommand)) {\n    this._copyColorCommand.execute(context, passState);\n  }\n};\n\nGlobeDepth.prototype.executeMergeColor = function (context, passState) {\n  if (defined(this._mergeColorCommand)) {\n    this._mergeColorCommand.execute(context, passState);\n  }\n};\n\nGlobeDepth.prototype.clear = function (context, passState, clearColor) {\n  var clear = this._clearGlobeColorCommand;\n\n  if (defined(clear)) {\n    Color.clone(clearColor, clear.color);\n    clear.execute(context, passState);\n  }\n\n  clear = this._clearPrimitiveColorCommand;\n\n  if (defined(clear) && defined(this._primitiveColorFramebuffer)) {\n    clear.execute(context, passState);\n  }\n};\n\nGlobeDepth.prototype.isDestroyed = function () {\n  return false;\n};\n\nGlobeDepth.prototype.destroy = function () {\n  destroyTextures(this);\n  destroyFramebuffers(this);\n  destroyPrimitiveFramebuffer(this);\n  destroyUpdateDepthResources(this);\n\n  if (defined(this._copyColorCommand)) {\n    this._copyColorCommand.shaderProgram = this._copyColorCommand.shaderProgram.destroy();\n  }\n\n  if (defined(this._copyDepthCommand)) {\n    this._copyDepthCommand.shaderProgram = this._copyDepthCommand.shaderProgram.destroy();\n  }\n\n  if (defined(this._tempCopyDepthCommand)) {\n    this._tempCopyDepthCommand.shaderProgram = this._tempCopyDepthCommand.shaderProgram.destroy();\n  }\n\n  if (defined(this._updateDepthCommand)) {\n    this._updateDepthCommand.shaderProgram = this._updateDepthCommand.shaderProgram.destroy();\n  }\n\n  if (defined(this._mergeColorCommand)) {\n    this._mergeColorCommand.shaderProgram = this._mergeColorCommand.shaderProgram.destroy();\n  }\n\n  if (defined(this._debugGlobeDepthViewportCommand)) {\n    this._debugGlobeDepthViewportCommand.shaderProgram = this._debugGlobeDepthViewportCommand.shaderProgram.destroy();\n  }\n\n  return destroyObject(this);\n};\n\nexport default GlobeDepth;","map":{"version":3,"sources":["C:/Users/passa/Desktop/WaterLevelReact/node_modules/cesium/Source/Scene/GlobeDepth.js"],"names":["BoundingRectangle","Color","defined","destroyObject","PixelFormat","ClearCommand","Framebuffer","PixelDatatype","RenderState","Sampler","ShaderSource","Texture","PassThrough","PassThroughDepth","BlendingState","StencilConstants","StencilFunction","StencilOperation","GlobeDepth","_globeColorTexture","undefined","_primitiveColorTexture","_depthStencilTexture","_globeDepthTexture","_tempGlobeDepthTexture","_tempCopyDepthTexture","_globeColorFramebuffer","_primitiveColorFramebuffer","_copyDepthFramebuffer","_tempCopyDepthFramebuffer","_updateDepthFramebuffer","_clearGlobeColorCommand","_clearPrimitiveColorCommand","_copyColorCommand","_copyDepthCommand","_tempCopyDepthCommand","_updateDepthCommand","_mergeColorCommand","_viewport","_rs","_rsBlend","_rsUpdate","_useScissorTest","_scissorRectangle","_useLogDepth","_useHdr","_clearGlobeDepth","_debugGlobeDepthViewportCommand","Object","defineProperties","prototype","framebuffer","get","primitiveFramebuffer","executeDebugGlobeDepth","globeDepth","context","passState","useLogDepth","fsSource","fs","defines","sources","createViewportQuadCommand","uniformMap","u_depthTexture","owner","execute","destroyTextures","isDestroyed","destroy","destroyFramebuffers","destroyUpdateDepthResources","createUpdateDepthResources","width","height","pixelFormat","RGBA","pixelDatatype","UNSIGNED_BYTE","sampler","NEAREST","colorTextures","destroyAttachments","depthStencilTexture","createTextures","hdr","halfFloatingPointTexture","HALF_FLOAT","FLOAT","DEPTH_STENCIL","UNSIGNED_INT_24_8","createFramebuffers","createPrimitiveFramebuffer","destroyPrimitiveFramebuffer","updateFramebuffers","clearGlobeDepth","colorTexture","textureChanged","updateCopyCommands","useScissorTest","equals","viewport","updateScissor","clone","fromCache","scissorTest","enabled","rectangle","blending","ALPHA_BLEND","stencilTest","frontFunction","EQUAL","frontOperation","fail","KEEP","zFail","zPass","backFunction","NEVER","reference","CESIUM_3D_TILE_MASK","mask","renderState","color","stencil","update","uniformState","globeDepthTexture","executeCopyDepth","executeUpdateDepth","depthTextureToCopy","getColorTexture","executeCopyColor","executeMergeColor","clear","clearColor","shaderProgram"],"mappings":"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","sourcesContent":["import BoundingRectangle from \"../Core/BoundingRectangle.js\";\nimport Color from \"../Core/Color.js\";\nimport defined from \"../Core/defined.js\";\nimport destroyObject from \"../Core/destroyObject.js\";\nimport PixelFormat from \"../Core/PixelFormat.js\";\nimport ClearCommand from \"../Renderer/ClearCommand.js\";\nimport Framebuffer from \"../Renderer/Framebuffer.js\";\nimport PixelDatatype from \"../Renderer/PixelDatatype.js\";\nimport RenderState from \"../Renderer/RenderState.js\";\nimport Sampler from \"../Renderer/Sampler.js\";\nimport ShaderSource from \"../Renderer/ShaderSource.js\";\nimport Texture from \"../Renderer/Texture.js\";\nimport PassThrough from \"../Shaders/PostProcessStages/PassThrough.js\";\nimport PassThroughDepth from \"../Shaders/PostProcessStages/PassThroughDepth.js\";\nimport BlendingState from \"./BlendingState.js\";\nimport StencilConstants from \"./StencilConstants.js\";\nimport StencilFunction from \"./StencilFunction.js\";\nimport StencilOperation from \"./StencilOperation.js\";\n\n/**\n * @private\n */\nfunction GlobeDepth() {\n  this._globeColorTexture = undefined;\n  this._primitiveColorTexture = undefined;\n  this._depthStencilTexture = undefined;\n  this._globeDepthTexture = undefined;\n  this._tempGlobeDepthTexture = undefined;\n  this._tempCopyDepthTexture = undefined;\n\n  this._globeColorFramebuffer = undefined;\n  this._primitiveColorFramebuffer = undefined;\n  this._copyDepthFramebuffer = undefined;\n  this._tempCopyDepthFramebuffer = undefined;\n  this._updateDepthFramebuffer = undefined;\n\n  this._clearGlobeColorCommand = undefined;\n  this._clearPrimitiveColorCommand = undefined;\n  this._copyColorCommand = undefined;\n  this._copyDepthCommand = undefined;\n  this._tempCopyDepthCommand = undefined;\n  this._updateDepthCommand = undefined;\n  this._mergeColorCommand = undefined;\n\n  this._viewport = new BoundingRectangle();\n  this._rs = undefined;\n  this._rsBlend = undefined;\n  this._rsUpdate = undefined;\n\n  this._useScissorTest = false;\n  this._scissorRectangle = undefined;\n\n  this._useLogDepth = undefined;\n  this._useHdr = undefined;\n  this._clearGlobeDepth = undefined;\n\n  this._debugGlobeDepthViewportCommand = undefined;\n}\n\nObject.defineProperties(GlobeDepth.prototype, {\n  framebuffer: {\n    get: function () {\n      return this._globeColorFramebuffer;\n    },\n  },\n  primitiveFramebuffer: {\n    get: function () {\n      return this._primitiveColorFramebuffer;\n    },\n  },\n});\n\nfunction executeDebugGlobeDepth(globeDepth, context, passState, useLogDepth) {\n  if (\n    !defined(globeDepth._debugGlobeDepthViewportCommand) ||\n    useLogDepth !== globeDepth._useLogDepth\n  ) {\n    var fsSource =\n      \"uniform sampler2D u_depthTexture;\\n\" +\n      \"varying vec2 v_textureCoordinates;\\n\" +\n      \"void main()\\n\" +\n      \"{\\n\" +\n      \"    float z_window = czm_unpackDepth(texture2D(u_depthTexture, v_textureCoordinates));\\n\" +\n      \"    z_window = czm_reverseLogDepth(z_window); \\n\" +\n      \"    float n_range = czm_depthRange.near;\\n\" +\n      \"    float f_range = czm_depthRange.far;\\n\" +\n      \"    float z_ndc = (2.0 * z_window - n_range - f_range) / (f_range - n_range);\\n\" +\n      \"    float scale = pow(z_ndc * 0.5 + 0.5, 8.0);\\n\" +\n      \"    gl_FragColor = vec4(mix(vec3(0.0), vec3(1.0), scale), 1.0);\\n\" +\n      \"}\\n\";\n    var fs = new ShaderSource({\n      defines: [useLogDepth ? \"LOG_DEPTH\" : \"\"],\n      sources: [fsSource],\n    });\n\n    globeDepth._debugGlobeDepthViewportCommand = context.createViewportQuadCommand(\n      fs,\n      {\n        uniformMap: {\n          u_depthTexture: function () {\n            return globeDepth._globeDepthTexture;\n          },\n        },\n        owner: globeDepth,\n      }\n    );\n\n    globeDepth._useLogDepth = useLogDepth;\n  }\n\n  globeDepth._debugGlobeDepthViewportCommand.execute(context, passState);\n}\n\nfunction destroyTextures(globeDepth) {\n  globeDepth._globeColorTexture =\n    globeDepth._globeColorTexture &&\n    !globeDepth._globeColorTexture.isDestroyed() &&\n    globeDepth._globeColorTexture.destroy();\n  globeDepth._depthStencilTexture =\n    globeDepth._depthStencilTexture &&\n    !globeDepth._depthStencilTexture.isDestroyed() &&\n    globeDepth._depthStencilTexture.destroy();\n  globeDepth._globeDepthTexture =\n    globeDepth._globeDepthTexture &&\n    !globeDepth._globeDepthTexture.isDestroyed() &&\n    globeDepth._globeDepthTexture.destroy();\n}\n\nfunction destroyFramebuffers(globeDepth) {\n  globeDepth._globeColorFramebuffer =\n    globeDepth._globeColorFramebuffer &&\n    !globeDepth._globeColorFramebuffer.isDestroyed() &&\n    globeDepth._globeColorFramebuffer.destroy();\n  globeDepth._copyDepthFramebuffer =\n    globeDepth._copyDepthFramebuffer &&\n    !globeDepth._copyDepthFramebuffer.isDestroyed() &&\n    globeDepth._copyDepthFramebuffer.destroy();\n}\n\nfunction destroyUpdateDepthResources(globeDepth) {\n  globeDepth._tempCopyDepthFramebuffer =\n    globeDepth._tempCopyDepthFramebuffer &&\n    !globeDepth._tempCopyDepthFramebuffer.isDestroyed() &&\n    globeDepth._tempCopyDepthFramebuffer.destroy();\n  globeDepth._updateDepthFramebuffer =\n    globeDepth._updateDepthFramebuffer &&\n    !globeDepth._updateDepthFramebuffer.isDestroyed() &&\n    globeDepth._updateDepthFramebuffer.destroy();\n  globeDepth._tempGlobeDepthTexture =\n    globeDepth._tempGlobeDepthTexture &&\n    !globeDepth._tempGlobeDepthTexture.isDestroyed() &&\n    globeDepth._tempGlobeDepthTexture.destroy();\n}\n\nfunction createUpdateDepthResources(\n  globeDepth,\n  context,\n  width,\n  height,\n  passState\n) {\n  globeDepth._tempGlobeDepthTexture = new Texture({\n    context: context,\n    width: width,\n    height: height,\n    pixelFormat: PixelFormat.RGBA,\n    pixelDatatype: PixelDatatype.UNSIGNED_BYTE,\n    sampler: Sampler.NEAREST,\n  });\n  globeDepth._tempCopyDepthFramebuffer = new Framebuffer({\n    context: context,\n    colorTextures: [globeDepth._tempGlobeDepthTexture],\n    destroyAttachments: false,\n  });\n  globeDepth._updateDepthFramebuffer = new Framebuffer({\n    context: context,\n    colorTextures: [globeDepth._globeDepthTexture],\n    depthStencilTexture: passState.framebuffer.depthStencilTexture,\n    destroyAttachments: false,\n  });\n}\n\nfunction createTextures(globeDepth, context, width, height, hdr) {\n  var pixelDatatype = hdr\n    ? context.halfFloatingPointTexture\n      ? PixelDatatype.HALF_FLOAT\n      : PixelDatatype.FLOAT\n    : PixelDatatype.UNSIGNED_BYTE;\n  globeDepth._globeColorTexture = new Texture({\n    context: context,\n    width: width,\n    height: height,\n    pixelFormat: PixelFormat.RGBA,\n    pixelDatatype: pixelDatatype,\n    sampler: Sampler.NEAREST,\n  });\n\n  globeDepth._depthStencilTexture = new Texture({\n    context: context,\n    width: width,\n    height: height,\n    pixelFormat: PixelFormat.DEPTH_STENCIL,\n    pixelDatatype: PixelDatatype.UNSIGNED_INT_24_8,\n  });\n\n  globeDepth._globeDepthTexture = new Texture({\n    context: context,\n    width: width,\n    height: height,\n    pixelFormat: PixelFormat.RGBA,\n    pixelDatatype: PixelDatatype.UNSIGNED_BYTE,\n    sampler: Sampler.NEAREST,\n  });\n}\n\nfunction createFramebuffers(globeDepth, context) {\n  globeDepth._globeColorFramebuffer = new Framebuffer({\n    context: context,\n    colorTextures: [globeDepth._globeColorTexture],\n    depthStencilTexture: globeDepth._depthStencilTexture,\n    destroyAttachments: false,\n  });\n\n  globeDepth._copyDepthFramebuffer = new Framebuffer({\n    context: context,\n    colorTextures: [globeDepth._globeDepthTexture],\n    destroyAttachments: false,\n  });\n}\n\nfunction createPrimitiveFramebuffer(globeDepth, context, width, height, hdr) {\n  var pixelDatatype = hdr\n    ? context.halfFloatingPointTexture\n      ? PixelDatatype.HALF_FLOAT\n      : PixelDatatype.FLOAT\n    : PixelDatatype.UNSIGNED_BYTE;\n  globeDepth._primitiveColorTexture = new Texture({\n    context: context,\n    width: width,\n    height: height,\n    pixelFormat: PixelFormat.RGBA,\n    pixelDatatype: pixelDatatype,\n    sampler: Sampler.NEAREST,\n  });\n\n  globeDepth._primitiveColorFramebuffer = new Framebuffer({\n    context: context,\n    colorTextures: [globeDepth._primitiveColorTexture],\n    depthStencilTexture: globeDepth._depthStencilTexture,\n    destroyAttachments: false,\n  });\n}\n\nfunction destroyPrimitiveFramebuffer(globeDepth) {\n  globeDepth._primitiveColorTexture =\n    globeDepth._primitiveColorTexture &&\n    !globeDepth._primitiveColorTexture.isDestroyed() &&\n    globeDepth._primitiveColorTexture.destroy();\n  globeDepth._primitiveColorFramebuffer =\n    globeDepth._primitiveColorFramebuffer &&\n    !globeDepth._primitiveColorFramebuffer.isDestroyed() &&\n    globeDepth._primitiveColorFramebuffer.destroy();\n}\n\nfunction updateFramebuffers(\n  globeDepth,\n  context,\n  width,\n  height,\n  hdr,\n  clearGlobeDepth\n) {\n  var colorTexture = globeDepth._globeColorTexture;\n  var textureChanged =\n    !defined(colorTexture) ||\n    colorTexture.width !== width ||\n    colorTexture.height !== height ||\n    hdr !== globeDepth._useHdr;\n  if (textureChanged) {\n    destroyTextures(globeDepth);\n    destroyFramebuffers(globeDepth);\n    createTextures(globeDepth, context, width, height, hdr, clearGlobeDepth);\n    createFramebuffers(globeDepth, context, clearGlobeDepth);\n  }\n\n  if (textureChanged || clearGlobeDepth !== globeDepth._clearGlobeDepth) {\n    destroyPrimitiveFramebuffer(globeDepth);\n    if (clearGlobeDepth) {\n      createPrimitiveFramebuffer(globeDepth, context, width, height, hdr);\n    }\n  }\n}\n\nfunction updateCopyCommands(globeDepth, context, width, height, passState) {\n  globeDepth._viewport.width = width;\n  globeDepth._viewport.height = height;\n\n  var useScissorTest = !BoundingRectangle.equals(\n    globeDepth._viewport,\n    passState.viewport\n  );\n  var updateScissor = useScissorTest !== globeDepth._useScissorTest;\n  globeDepth._useScissorTest = useScissorTest;\n\n  if (\n    !BoundingRectangle.equals(globeDepth._scissorRectangle, passState.viewport)\n  ) {\n    globeDepth._scissorRectangle = BoundingRectangle.clone(\n      passState.viewport,\n      globeDepth._scissorRectangle\n    );\n    updateScissor = true;\n  }\n\n  if (\n    !defined(globeDepth._rs) ||\n    !BoundingRectangle.equals(globeDepth._viewport, globeDepth._rs.viewport) ||\n    updateScissor\n  ) {\n    globeDepth._rs = RenderState.fromCache({\n      viewport: globeDepth._viewport,\n      scissorTest: {\n        enabled: globeDepth._useScissorTest,\n        rectangle: globeDepth._scissorRectangle,\n      },\n    });\n    globeDepth._rsBlend = RenderState.fromCache({\n      viewport: globeDepth._viewport,\n      scissorTest: {\n        enabled: globeDepth._useScissorTest,\n        rectangle: globeDepth._scissorRectangle,\n      },\n      blending: BlendingState.ALPHA_BLEND,\n    });\n\n    // Copy packed depth only if the 3D Tiles bit is set\n    globeDepth._rsUpdate = RenderState.fromCache({\n      viewport: globeDepth._viewport,\n      scissorTest: {\n        enabled: globeDepth._useScissorTest,\n        rectangle: globeDepth._scissorRectangle,\n      },\n      stencilTest: {\n        enabled: true,\n        frontFunction: StencilFunction.EQUAL,\n        frontOperation: {\n          fail: StencilOperation.KEEP,\n          zFail: StencilOperation.KEEP,\n          zPass: StencilOperation.KEEP,\n        },\n        backFunction: StencilFunction.NEVER,\n        reference: StencilConstants.CESIUM_3D_TILE_MASK,\n        mask: StencilConstants.CESIUM_3D_TILE_MASK,\n      },\n    });\n  }\n\n  if (!defined(globeDepth._copyDepthCommand)) {\n    globeDepth._copyDepthCommand = context.createViewportQuadCommand(\n      PassThroughDepth,\n      {\n        uniformMap: {\n          u_depthTexture: function () {\n            return globeDepth._depthStencilTexture;\n          },\n        },\n        owner: globeDepth,\n      }\n    );\n  }\n\n  globeDepth._copyDepthCommand.framebuffer = globeDepth._copyDepthFramebuffer;\n  globeDepth._copyDepthCommand.renderState = globeDepth._rs;\n\n  if (!defined(globeDepth._copyColorCommand)) {\n    globeDepth._copyColorCommand = context.createViewportQuadCommand(\n      PassThrough,\n      {\n        uniformMap: {\n          colorTexture: function () {\n            return globeDepth._globeColorTexture;\n          },\n        },\n        owner: globeDepth,\n      }\n    );\n  }\n\n  globeDepth._copyColorCommand.renderState = globeDepth._rs;\n\n  if (!defined(globeDepth._tempCopyDepthCommand)) {\n    globeDepth._tempCopyDepthCommand = context.createViewportQuadCommand(\n      PassThroughDepth,\n      {\n        uniformMap: {\n          u_depthTexture: function () {\n            return globeDepth._tempCopyDepthTexture;\n          },\n        },\n        owner: globeDepth,\n      }\n    );\n  }\n\n  globeDepth._tempCopyDepthCommand.framebuffer =\n    globeDepth._tempCopyDepthFramebuffer;\n  globeDepth._tempCopyDepthCommand.renderState = globeDepth._rs;\n\n  if (!defined(globeDepth._updateDepthCommand)) {\n    globeDepth._updateDepthCommand = context.createViewportQuadCommand(\n      PassThrough,\n      {\n        uniformMap: {\n          colorTexture: function () {\n            return globeDepth._tempGlobeDepthTexture;\n          },\n        },\n        owner: globeDepth,\n      }\n    );\n  }\n\n  globeDepth._updateDepthCommand.framebuffer =\n    globeDepth._updateDepthFramebuffer;\n  globeDepth._updateDepthCommand.renderState = globeDepth._rsUpdate;\n\n  if (!defined(globeDepth._clearGlobeColorCommand)) {\n    globeDepth._clearGlobeColorCommand = new ClearCommand({\n      color: new Color(0.0, 0.0, 0.0, 0.0),\n      stencil: 0.0,\n      owner: globeDepth,\n    });\n  }\n\n  globeDepth._clearGlobeColorCommand.framebuffer =\n    globeDepth._globeColorFramebuffer;\n\n  if (!defined(globeDepth._clearPrimitiveColorCommand)) {\n    globeDepth._clearPrimitiveColorCommand = new ClearCommand({\n      color: new Color(0.0, 0.0, 0.0, 0.0),\n      stencil: 0.0,\n      owner: globeDepth,\n    });\n  }\n\n  globeDepth._clearPrimitiveColorCommand.framebuffer =\n    globeDepth._primitiveColorFramebuffer;\n\n  if (!defined(globeDepth._mergeColorCommand)) {\n    globeDepth._mergeColorCommand = context.createViewportQuadCommand(\n      PassThrough,\n      {\n        uniformMap: {\n          colorTexture: function () {\n            return globeDepth._primitiveColorTexture;\n          },\n        },\n        owner: globeDepth,\n      }\n    );\n  }\n\n  globeDepth._mergeColorCommand.framebuffer = globeDepth._globeColorFramebuffer;\n  globeDepth._mergeColorCommand.renderState = globeDepth._rsBlend;\n}\n\nGlobeDepth.prototype.executeDebugGlobeDepth = function (\n  context,\n  passState,\n  useLogDepth\n) {\n  executeDebugGlobeDepth(this, context, passState, useLogDepth);\n};\n\nGlobeDepth.prototype.update = function (\n  context,\n  passState,\n  viewport,\n  hdr,\n  clearGlobeDepth\n) {\n  var width = viewport.width;\n  var height = viewport.height;\n\n  updateFramebuffers(this, context, width, height, hdr, clearGlobeDepth);\n  updateCopyCommands(this, context, width, height, passState);\n  context.uniformState.globeDepthTexture = undefined;\n\n  this._useHdr = hdr;\n  this._clearGlobeDepth = clearGlobeDepth;\n};\n\nGlobeDepth.prototype.executeCopyDepth = function (context, passState) {\n  if (defined(this._copyDepthCommand)) {\n    this._copyDepthCommand.execute(context, passState);\n    context.uniformState.globeDepthTexture = this._globeDepthTexture;\n  }\n};\n\nGlobeDepth.prototype.executeUpdateDepth = function (\n  context,\n  passState,\n  clearGlobeDepth\n) {\n  var depthTextureToCopy = passState.framebuffer.depthStencilTexture;\n  if (clearGlobeDepth || depthTextureToCopy !== this._depthStencilTexture) {\n    // First copy the depth to a temporary globe depth texture, then update the\n    // main globe depth texture where the stencil bit for 3D Tiles is set.\n    // This preserves the original globe depth except where 3D Tiles is rendered.\n    // The additional texture and framebuffer resources are created on demand.\n    if (defined(this._updateDepthCommand)) {\n      if (\n        !defined(this._updateDepthFramebuffer) ||\n        this._updateDepthFramebuffer.depthStencilTexture !==\n          depthTextureToCopy ||\n        this._updateDepthFramebuffer.getColorTexture(0) !==\n          this._globeDepthTexture\n      ) {\n        var width = this._globeDepthTexture.width;\n        var height = this._globeDepthTexture.height;\n        destroyUpdateDepthResources(this);\n        createUpdateDepthResources(this, context, width, height, passState);\n        updateCopyCommands(this, context, width, height, passState);\n      }\n      this._tempCopyDepthTexture = depthTextureToCopy;\n      this._tempCopyDepthCommand.execute(context, passState);\n      this._updateDepthCommand.execute(context, passState);\n    }\n    return;\n  }\n\n  // Fast path - the depth texture can be copied normally.\n  if (defined(this._copyDepthCommand)) {\n    this._copyDepthCommand.execute(context, passState);\n  }\n};\n\nGlobeDepth.prototype.executeCopyColor = function (context, passState) {\n  if (defined(this._copyColorCommand)) {\n    this._copyColorCommand.execute(context, passState);\n  }\n};\n\nGlobeDepth.prototype.executeMergeColor = function (context, passState) {\n  if (defined(this._mergeColorCommand)) {\n    this._mergeColorCommand.execute(context, passState);\n  }\n};\n\nGlobeDepth.prototype.clear = function (context, passState, clearColor) {\n  var clear = this._clearGlobeColorCommand;\n  if (defined(clear)) {\n    Color.clone(clearColor, clear.color);\n    clear.execute(context, passState);\n  }\n  clear = this._clearPrimitiveColorCommand;\n  if (defined(clear) && defined(this._primitiveColorFramebuffer)) {\n    clear.execute(context, passState);\n  }\n};\n\nGlobeDepth.prototype.isDestroyed = function () {\n  return false;\n};\n\nGlobeDepth.prototype.destroy = function () {\n  destroyTextures(this);\n  destroyFramebuffers(this);\n  destroyPrimitiveFramebuffer(this);\n  destroyUpdateDepthResources(this);\n\n  if (defined(this._copyColorCommand)) {\n    this._copyColorCommand.shaderProgram = this._copyColorCommand.shaderProgram.destroy();\n  }\n\n  if (defined(this._copyDepthCommand)) {\n    this._copyDepthCommand.shaderProgram = this._copyDepthCommand.shaderProgram.destroy();\n  }\n\n  if (defined(this._tempCopyDepthCommand)) {\n    this._tempCopyDepthCommand.shaderProgram = this._tempCopyDepthCommand.shaderProgram.destroy();\n  }\n\n  if (defined(this._updateDepthCommand)) {\n    this._updateDepthCommand.shaderProgram = this._updateDepthCommand.shaderProgram.destroy();\n  }\n\n  if (defined(this._mergeColorCommand)) {\n    this._mergeColorCommand.shaderProgram = this._mergeColorCommand.shaderProgram.destroy();\n  }\n\n  if (defined(this._debugGlobeDepthViewportCommand)) {\n    this._debugGlobeDepthViewportCommand.shaderProgram = this._debugGlobeDepthViewportCommand.shaderProgram.destroy();\n  }\n\n  return destroyObject(this);\n};\nexport default GlobeDepth;\n"]},"metadata":{},"sourceType":"module"}
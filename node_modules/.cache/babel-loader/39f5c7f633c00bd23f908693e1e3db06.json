{"ast":null,"code":"import ArcType from \"../Core/ArcType.js\";\nimport Cartesian3 from \"../Core/Cartesian3.js\";\nimport Color from \"../Core/Color.js\";\nimport defaultValue from \"../Core/defaultValue.js\";\nimport defined from \"../Core/defined.js\";\nimport destroyObject from \"../Core/destroyObject.js\";\nimport GeometryInstance from \"../Core/GeometryInstance.js\";\nimport Matrix4 from \"../Core/Matrix4.js\";\nimport PolylineGeometry from \"../Core/PolylineGeometry.js\";\nimport PolylineColorAppearance from \"./PolylineColorAppearance.js\";\nimport Primitive from \"./Primitive.js\";\n/**\n * Draws the axes of a reference frame defined by a matrix that transforms to world\n * coordinates, i.e., Earth's WGS84 coordinates.  The most prominent example is\n * a primitives <code>modelMatrix</code>.\n * <p>\n * The X axis is red; Y is green; and Z is blue.\n * </p>\n * <p>\n * This is for debugging only; it is not optimized for production use.\n * </p>\n *\n * @alias DebugModelMatrixPrimitive\n * @constructor\n *\n * @param {Object} [options] Object with the following properties:\n * @param {Number} [options.length=10000000.0] The length of the axes in meters.\n * @param {Number} [options.width=2.0] The width of the axes in pixels.\n * @param {Matrix4} [options.modelMatrix=Matrix4.IDENTITY] The 4x4 matrix that defines the reference frame, i.e., origin plus axes, to visualize.\n * @param {Boolean} [options.show=true] Determines if this primitive will be shown.\n * @param {Object} [options.id] A user-defined object to return when the instance is picked with {@link Scene#pick}\n *\n * @example\n * primitives.add(new Cesium.DebugModelMatrixPrimitive({\n *   modelMatrix : primitive.modelMatrix,  // primitive to debug\n *   length : 100000.0,\n *   width : 10.0\n * }));\n */\n\nfunction DebugModelMatrixPrimitive(options) {\n  options = defaultValue(options, defaultValue.EMPTY_OBJECT);\n  /**\n   * The length of the axes in meters.\n   *\n   * @type {Number}\n   * @default 10000000.0\n   */\n\n  this.length = defaultValue(options.length, 10000000.0);\n  this._length = undefined;\n  /**\n   * The width of the axes in pixels.\n   *\n   * @type {Number}\n   * @default 2.0\n   */\n\n  this.width = defaultValue(options.width, 2.0);\n  this._width = undefined;\n  /**\n   * Determines if this primitive will be shown.\n   *\n   * @type Boolean\n   * @default true\n   */\n\n  this.show = defaultValue(options.show, true);\n  /**\n   * The 4x4 matrix that defines the reference frame, i.e., origin plus axes, to visualize.\n   *\n   * @type {Matrix4}\n   * @default {@link Matrix4.IDENTITY}\n   */\n\n  this.modelMatrix = Matrix4.clone(defaultValue(options.modelMatrix, Matrix4.IDENTITY));\n  this._modelMatrix = new Matrix4();\n  /**\n   * User-defined value returned when the primitive is picked.\n   *\n   * @type {*}\n   * @default undefined\n   *\n   * @see Scene#pick\n   */\n\n  this.id = options.id;\n  this._id = undefined;\n  this._primitive = undefined;\n}\n/**\n * @private\n */\n\n\nDebugModelMatrixPrimitive.prototype.update = function (frameState) {\n  if (!this.show) {\n    return;\n  }\n\n  if (!defined(this._primitive) || !Matrix4.equals(this._modelMatrix, this.modelMatrix) || this._length !== this.length || this._width !== this.width || this._id !== this.id) {\n    this._modelMatrix = Matrix4.clone(this.modelMatrix, this._modelMatrix);\n    this._length = this.length;\n    this._width = this.width;\n    this._id = this.id;\n\n    if (defined(this._primitive)) {\n      this._primitive.destroy();\n    } // Workaround projecting (0, 0, 0)\n\n\n    if (this.modelMatrix[12] === 0.0 && this.modelMatrix[13] === 0.0 && this.modelMatrix[14] === 0.0) {\n      this.modelMatrix[14] = 0.01;\n    }\n\n    var x = new GeometryInstance({\n      geometry: new PolylineGeometry({\n        positions: [Cartesian3.ZERO, Cartesian3.UNIT_X],\n        width: this.width,\n        vertexFormat: PolylineColorAppearance.VERTEX_FORMAT,\n        colors: [Color.RED, Color.RED],\n        arcType: ArcType.NONE\n      }),\n      modelMatrix: Matrix4.multiplyByUniformScale(this.modelMatrix, this.length, new Matrix4()),\n      id: this.id,\n      pickPrimitive: this\n    });\n    var y = new GeometryInstance({\n      geometry: new PolylineGeometry({\n        positions: [Cartesian3.ZERO, Cartesian3.UNIT_Y],\n        width: this.width,\n        vertexFormat: PolylineColorAppearance.VERTEX_FORMAT,\n        colors: [Color.GREEN, Color.GREEN],\n        arcType: ArcType.NONE\n      }),\n      modelMatrix: Matrix4.multiplyByUniformScale(this.modelMatrix, this.length, new Matrix4()),\n      id: this.id,\n      pickPrimitive: this\n    });\n    var z = new GeometryInstance({\n      geometry: new PolylineGeometry({\n        positions: [Cartesian3.ZERO, Cartesian3.UNIT_Z],\n        width: this.width,\n        vertexFormat: PolylineColorAppearance.VERTEX_FORMAT,\n        colors: [Color.BLUE, Color.BLUE],\n        arcType: ArcType.NONE\n      }),\n      modelMatrix: Matrix4.multiplyByUniformScale(this.modelMatrix, this.length, new Matrix4()),\n      id: this.id,\n      pickPrimitive: this\n    });\n    this._primitive = new Primitive({\n      geometryInstances: [x, y, z],\n      appearance: new PolylineColorAppearance(),\n      asynchronous: false\n    });\n  }\n\n  this._primitive.update(frameState);\n};\n/**\n * Returns true if this object was destroyed; otherwise, false.\n * <p>\n * If this object was destroyed, it should not be used; calling any function other than\n * <code>isDestroyed</code> will result in a {@link DeveloperError} exception.\n * </p>\n *\n * @returns {Boolean} <code>true</code> if this object was destroyed; otherwise, <code>false</code>.\n *\n * @see DebugModelMatrixPrimitive#destroy\n */\n\n\nDebugModelMatrixPrimitive.prototype.isDestroyed = function () {\n  return false;\n};\n/**\n * Destroys the WebGL resources held by this object.  Destroying an object allows for deterministic\n * release of WebGL resources, instead of relying on the garbage collector to destroy this object.\n * <p>\n * Once an object is destroyed, it should not be used; calling any function other than\n * <code>isDestroyed</code> will result in a {@link DeveloperError} exception.  Therefore,\n * assign the return value (<code>undefined</code>) to the object as done in the example.\n * </p>\n *\n * @exception {DeveloperError} This object was destroyed, i.e., destroy() was called.\n *\n * @example\n * p = p && p.destroy();\n *\n * @see DebugModelMatrixPrimitive#isDestroyed\n */\n\n\nDebugModelMatrixPrimitive.prototype.destroy = function () {\n  this._primitive = this._primitive && this._primitive.destroy();\n  return destroyObject(this);\n};\n\nexport default DebugModelMatrixPrimitive;","map":{"version":3,"sources":["C:/Users/passa/Desktop/WaterLevelReact/node_modules/cesium/Source/Scene/DebugModelMatrixPrimitive.js"],"names":["ArcType","Cartesian3","Color","defaultValue","defined","destroyObject","GeometryInstance","Matrix4","PolylineGeometry","PolylineColorAppearance","Primitive","DebugModelMatrixPrimitive","options","EMPTY_OBJECT","length","_length","undefined","width","_width","show","modelMatrix","clone","IDENTITY","_modelMatrix","id","_id","_primitive","prototype","update","frameState","equals","destroy","x","geometry","positions","ZERO","UNIT_X","vertexFormat","VERTEX_FORMAT","colors","RED","arcType","NONE","multiplyByUniformScale","pickPrimitive","y","UNIT_Y","GREEN","z","UNIT_Z","BLUE","geometryInstances","appearance","asynchronous","isDestroyed"],"mappings":"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","sourcesContent":["import ArcType from \"../Core/ArcType.js\";\nimport Cartesian3 from \"../Core/Cartesian3.js\";\nimport Color from \"../Core/Color.js\";\nimport defaultValue from \"../Core/defaultValue.js\";\nimport defined from \"../Core/defined.js\";\nimport destroyObject from \"../Core/destroyObject.js\";\nimport GeometryInstance from \"../Core/GeometryInstance.js\";\nimport Matrix4 from \"../Core/Matrix4.js\";\nimport PolylineGeometry from \"../Core/PolylineGeometry.js\";\nimport PolylineColorAppearance from \"./PolylineColorAppearance.js\";\nimport Primitive from \"./Primitive.js\";\n\n/**\n * Draws the axes of a reference frame defined by a matrix that transforms to world\n * coordinates, i.e., Earth's WGS84 coordinates.  The most prominent example is\n * a primitives <code>modelMatrix</code>.\n * <p>\n * The X axis is red; Y is green; and Z is blue.\n * </p>\n * <p>\n * This is for debugging only; it is not optimized for production use.\n * </p>\n *\n * @alias DebugModelMatrixPrimitive\n * @constructor\n *\n * @param {Object} [options] Object with the following properties:\n * @param {Number} [options.length=10000000.0] The length of the axes in meters.\n * @param {Number} [options.width=2.0] The width of the axes in pixels.\n * @param {Matrix4} [options.modelMatrix=Matrix4.IDENTITY] The 4x4 matrix that defines the reference frame, i.e., origin plus axes, to visualize.\n * @param {Boolean} [options.show=true] Determines if this primitive will be shown.\n * @param {Object} [options.id] A user-defined object to return when the instance is picked with {@link Scene#pick}\n *\n * @example\n * primitives.add(new Cesium.DebugModelMatrixPrimitive({\n *   modelMatrix : primitive.modelMatrix,  // primitive to debug\n *   length : 100000.0,\n *   width : 10.0\n * }));\n */\nfunction DebugModelMatrixPrimitive(options) {\n  options = defaultValue(options, defaultValue.EMPTY_OBJECT);\n\n  /**\n   * The length of the axes in meters.\n   *\n   * @type {Number}\n   * @default 10000000.0\n   */\n  this.length = defaultValue(options.length, 10000000.0);\n  this._length = undefined;\n\n  /**\n   * The width of the axes in pixels.\n   *\n   * @type {Number}\n   * @default 2.0\n   */\n  this.width = defaultValue(options.width, 2.0);\n  this._width = undefined;\n\n  /**\n   * Determines if this primitive will be shown.\n   *\n   * @type Boolean\n   * @default true\n   */\n  this.show = defaultValue(options.show, true);\n\n  /**\n   * The 4x4 matrix that defines the reference frame, i.e., origin plus axes, to visualize.\n   *\n   * @type {Matrix4}\n   * @default {@link Matrix4.IDENTITY}\n   */\n  this.modelMatrix = Matrix4.clone(\n    defaultValue(options.modelMatrix, Matrix4.IDENTITY)\n  );\n  this._modelMatrix = new Matrix4();\n\n  /**\n   * User-defined value returned when the primitive is picked.\n   *\n   * @type {*}\n   * @default undefined\n   *\n   * @see Scene#pick\n   */\n  this.id = options.id;\n  this._id = undefined;\n\n  this._primitive = undefined;\n}\n\n/**\n * @private\n */\nDebugModelMatrixPrimitive.prototype.update = function (frameState) {\n  if (!this.show) {\n    return;\n  }\n\n  if (\n    !defined(this._primitive) ||\n    !Matrix4.equals(this._modelMatrix, this.modelMatrix) ||\n    this._length !== this.length ||\n    this._width !== this.width ||\n    this._id !== this.id\n  ) {\n    this._modelMatrix = Matrix4.clone(this.modelMatrix, this._modelMatrix);\n    this._length = this.length;\n    this._width = this.width;\n    this._id = this.id;\n\n    if (defined(this._primitive)) {\n      this._primitive.destroy();\n    }\n\n    // Workaround projecting (0, 0, 0)\n    if (\n      this.modelMatrix[12] === 0.0 &&\n      this.modelMatrix[13] === 0.0 &&\n      this.modelMatrix[14] === 0.0\n    ) {\n      this.modelMatrix[14] = 0.01;\n    }\n\n    var x = new GeometryInstance({\n      geometry: new PolylineGeometry({\n        positions: [Cartesian3.ZERO, Cartesian3.UNIT_X],\n        width: this.width,\n        vertexFormat: PolylineColorAppearance.VERTEX_FORMAT,\n        colors: [Color.RED, Color.RED],\n        arcType: ArcType.NONE,\n      }),\n      modelMatrix: Matrix4.multiplyByUniformScale(\n        this.modelMatrix,\n        this.length,\n        new Matrix4()\n      ),\n      id: this.id,\n      pickPrimitive: this,\n    });\n    var y = new GeometryInstance({\n      geometry: new PolylineGeometry({\n        positions: [Cartesian3.ZERO, Cartesian3.UNIT_Y],\n        width: this.width,\n        vertexFormat: PolylineColorAppearance.VERTEX_FORMAT,\n        colors: [Color.GREEN, Color.GREEN],\n        arcType: ArcType.NONE,\n      }),\n      modelMatrix: Matrix4.multiplyByUniformScale(\n        this.modelMatrix,\n        this.length,\n        new Matrix4()\n      ),\n      id: this.id,\n      pickPrimitive: this,\n    });\n    var z = new GeometryInstance({\n      geometry: new PolylineGeometry({\n        positions: [Cartesian3.ZERO, Cartesian3.UNIT_Z],\n        width: this.width,\n        vertexFormat: PolylineColorAppearance.VERTEX_FORMAT,\n        colors: [Color.BLUE, Color.BLUE],\n        arcType: ArcType.NONE,\n      }),\n      modelMatrix: Matrix4.multiplyByUniformScale(\n        this.modelMatrix,\n        this.length,\n        new Matrix4()\n      ),\n      id: this.id,\n      pickPrimitive: this,\n    });\n\n    this._primitive = new Primitive({\n      geometryInstances: [x, y, z],\n      appearance: new PolylineColorAppearance(),\n      asynchronous: false,\n    });\n  }\n\n  this._primitive.update(frameState);\n};\n\n/**\n * Returns true if this object was destroyed; otherwise, false.\n * <p>\n * If this object was destroyed, it should not be used; calling any function other than\n * <code>isDestroyed</code> will result in a {@link DeveloperError} exception.\n * </p>\n *\n * @returns {Boolean} <code>true</code> if this object was destroyed; otherwise, <code>false</code>.\n *\n * @see DebugModelMatrixPrimitive#destroy\n */\nDebugModelMatrixPrimitive.prototype.isDestroyed = function () {\n  return false;\n};\n\n/**\n * Destroys the WebGL resources held by this object.  Destroying an object allows for deterministic\n * release of WebGL resources, instead of relying on the garbage collector to destroy this object.\n * <p>\n * Once an object is destroyed, it should not be used; calling any function other than\n * <code>isDestroyed</code> will result in a {@link DeveloperError} exception.  Therefore,\n * assign the return value (<code>undefined</code>) to the object as done in the example.\n * </p>\n *\n * @exception {DeveloperError} This object was destroyed, i.e., destroy() was called.\n *\n * @example\n * p = p && p.destroy();\n *\n * @see DebugModelMatrixPrimitive#isDestroyed\n */\nDebugModelMatrixPrimitive.prototype.destroy = function () {\n  this._primitive = this._primitive && this._primitive.destroy();\n  return destroyObject(this);\n};\nexport default DebugModelMatrixPrimitive;\n"]},"metadata":{},"sourceType":"module"}
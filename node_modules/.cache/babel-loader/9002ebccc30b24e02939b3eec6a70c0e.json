{"ast":null,"code":"import Check from \"./Check.js\";\nimport defined from \"./defined.js\";\nimport FeatureDetection from \"./FeatureDetection.js\";\n/**\n * Create a shallow copy of an array from begin to end.\n *\n * @param {Array} array The array to fill.\n * @param {Number} [begin=0] The index to start at.\n * @param {Number} [end=array.length] The index to end at which is not included.\n *\n * @returns {Array} The resulting array.\n * @private\n */\n\nfunction arraySlice(array, begin, end) {\n  //>>includeStart('debug', pragmas.debug);\n  Check.defined(\"array\", array);\n\n  if (defined(begin)) {\n    Check.typeOf.number(\"begin\", begin);\n  }\n\n  if (defined(end)) {\n    Check.typeOf.number(\"end\", end);\n  } //>>includeEnd('debug');\n\n\n  if (typeof array.slice === \"function\") {\n    return array.slice(begin, end);\n  }\n\n  var copy = Array.prototype.slice.call(array, begin, end);\n  var typedArrayTypes = FeatureDetection.typedArrayTypes;\n  var length = typedArrayTypes.length;\n\n  for (var i = 0; i < length; ++i) {\n    if (array instanceof typedArrayTypes[i]) {\n      copy = new typedArrayTypes[i](copy);\n      break;\n    }\n  }\n\n  return copy;\n}\n\nexport default arraySlice;","map":{"version":3,"sources":["C:/Users/passa/Desktop/WaterLevelReact/node_modules/cesium/Source/Core/arraySlice.js"],"names":["Check","defined","FeatureDetection","arraySlice","array","begin","end","typeOf","number","slice","copy","Array","prototype","call","typedArrayTypes","length","i"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,YAAlB;AACA,OAAOC,OAAP,MAAoB,cAApB;AACA,OAAOC,gBAAP,MAA6B,uBAA7B;AAEA;;;;;;;;;;;AAUA,SAASC,UAAT,CAAoBC,KAApB,EAA2BC,KAA3B,EAAkCC,GAAlC,EAAuC;AACrC;AACAN,EAAAA,KAAK,CAACC,OAAN,CAAc,OAAd,EAAuBG,KAAvB;;AACA,MAAIH,OAAO,CAACI,KAAD,CAAX,EAAoB;AAClBL,IAAAA,KAAK,CAACO,MAAN,CAAaC,MAAb,CAAoB,OAApB,EAA6BH,KAA7B;AACD;;AACD,MAAIJ,OAAO,CAACK,GAAD,CAAX,EAAkB;AAChBN,IAAAA,KAAK,CAACO,MAAN,CAAaC,MAAb,CAAoB,KAApB,EAA2BF,GAA3B;AACD,GARoC,CASrC;;;AAEA,MAAI,OAAOF,KAAK,CAACK,KAAb,KAAuB,UAA3B,EAAuC;AACrC,WAAOL,KAAK,CAACK,KAAN,CAAYJ,KAAZ,EAAmBC,GAAnB,CAAP;AACD;;AAED,MAAII,IAAI,GAAGC,KAAK,CAACC,SAAN,CAAgBH,KAAhB,CAAsBI,IAAtB,CAA2BT,KAA3B,EAAkCC,KAAlC,EAAyCC,GAAzC,CAAX;AACA,MAAIQ,eAAe,GAAGZ,gBAAgB,CAACY,eAAvC;AACA,MAAIC,MAAM,GAAGD,eAAe,CAACC,MAA7B;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,MAApB,EAA4B,EAAEC,CAA9B,EAAiC;AAC/B,QAAIZ,KAAK,YAAYU,eAAe,CAACE,CAAD,CAApC,EAAyC;AACvCN,MAAAA,IAAI,GAAG,IAAII,eAAe,CAACE,CAAD,CAAnB,CAAuBN,IAAvB,CAAP;AACA;AACD;AACF;;AAED,SAAOA,IAAP;AACD;;AACD,eAAeP,UAAf","sourcesContent":["import Check from \"./Check.js\";\nimport defined from \"./defined.js\";\nimport FeatureDetection from \"./FeatureDetection.js\";\n\n/**\n * Create a shallow copy of an array from begin to end.\n *\n * @param {Array} array The array to fill.\n * @param {Number} [begin=0] The index to start at.\n * @param {Number} [end=array.length] The index to end at which is not included.\n *\n * @returns {Array} The resulting array.\n * @private\n */\nfunction arraySlice(array, begin, end) {\n  //>>includeStart('debug', pragmas.debug);\n  Check.defined(\"array\", array);\n  if (defined(begin)) {\n    Check.typeOf.number(\"begin\", begin);\n  }\n  if (defined(end)) {\n    Check.typeOf.number(\"end\", end);\n  }\n  //>>includeEnd('debug');\n\n  if (typeof array.slice === \"function\") {\n    return array.slice(begin, end);\n  }\n\n  var copy = Array.prototype.slice.call(array, begin, end);\n  var typedArrayTypes = FeatureDetection.typedArrayTypes;\n  var length = typedArrayTypes.length;\n  for (var i = 0; i < length; ++i) {\n    if (array instanceof typedArrayTypes[i]) {\n      copy = new typedArrayTypes[i](copy);\n      break;\n    }\n  }\n\n  return copy;\n}\nexport default arraySlice;\n"]},"metadata":{},"sourceType":"module"}
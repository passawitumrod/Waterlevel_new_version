{"ast":null,"code":"import Check from \"../Core/Check.js\";\n/**\n * Gets a GLSL snippet that clips a fragment using the `clip` function from {@link getClippingFunction} and styles it.\n *\n * @param {String} samplerUniformName Name of the uniform for the clipping planes texture sampler.\n * @param {String} matrixUniformName Name of the uniform for the clipping planes matrix.\n * @param {String} styleUniformName Name of the uniform for the clipping planes style, a vec4.\n * @returns {String} A string containing GLSL that clips and styles the current fragment.\n * @private\n */\n\nfunction getClipAndStyleCode(samplerUniformName, matrixUniformName, styleUniformName) {\n  //>>includeStart('debug', pragmas.debug);\n  Check.typeOf.string(\"samplerUniformName\", samplerUniformName);\n  Check.typeOf.string(\"matrixUniformName\", matrixUniformName);\n  Check.typeOf.string(\"styleUniformName\", styleUniformName); //>>includeEnd('debug');\n\n  var shaderCode = \"    float clipDistance = clip(gl_FragCoord, \" + samplerUniformName + \", \" + matrixUniformName + \"); \\n\" + \"    vec4 clippingPlanesEdgeColor = vec4(1.0); \\n\" + \"    clippingPlanesEdgeColor.rgb = \" + styleUniformName + \".rgb; \\n\" + \"    float clippingPlanesEdgeWidth = \" + styleUniformName + \".a; \\n\" + \"    if (clipDistance > 0.0 && clipDistance < clippingPlanesEdgeWidth) \\n\" + \"    { \\n\" + \"        gl_FragColor = clippingPlanesEdgeColor;\\n\" + \"    } \\n\";\n  return shaderCode;\n}\n\nexport default getClipAndStyleCode;","map":{"version":3,"sources":["C:/Users/passa/Desktop/WaterDeployTrial/node_modules/cesium/Source/Scene/getClipAndStyleCode.js"],"names":["Check","getClipAndStyleCode","samplerUniformName","matrixUniformName","styleUniformName","typeOf","string","shaderCode"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,kBAAlB;AAEA;;;;;;;;;;AASA,SAASC,mBAAT,CACEC,kBADF,EAEEC,iBAFF,EAGEC,gBAHF,EAIE;AACA;AACAJ,EAAAA,KAAK,CAACK,MAAN,CAAaC,MAAb,CAAoB,oBAApB,EAA0CJ,kBAA1C;AACAF,EAAAA,KAAK,CAACK,MAAN,CAAaC,MAAb,CAAoB,mBAApB,EAAyCH,iBAAzC;AACAH,EAAAA,KAAK,CAACK,MAAN,CAAaC,MAAb,CAAoB,kBAApB,EAAwCF,gBAAxC,EAJA,CAKA;;AAEA,MAAIG,UAAU,GACZ,iDACAL,kBADA,GAEA,IAFA,GAGAC,iBAHA,GAIA,OAJA,GAKA,kDALA,GAMA,oCANA,GAOAC,gBAPA,GAQA,UARA,GASA,sCATA,GAUAA,gBAVA,GAWA,QAXA,GAYA,0EAZA,GAaA,UAbA,GAcA,mDAdA,GAeA,UAhBF;AAiBA,SAAOG,UAAP;AACD;;AACD,eAAeN,mBAAf","sourcesContent":["import Check from \"../Core/Check.js\";\n\n/**\n * Gets a GLSL snippet that clips a fragment using the `clip` function from {@link getClippingFunction} and styles it.\n *\n * @param {String} samplerUniformName Name of the uniform for the clipping planes texture sampler.\n * @param {String} matrixUniformName Name of the uniform for the clipping planes matrix.\n * @param {String} styleUniformName Name of the uniform for the clipping planes style, a vec4.\n * @returns {String} A string containing GLSL that clips and styles the current fragment.\n * @private\n */\nfunction getClipAndStyleCode(\n  samplerUniformName,\n  matrixUniformName,\n  styleUniformName\n) {\n  //>>includeStart('debug', pragmas.debug);\n  Check.typeOf.string(\"samplerUniformName\", samplerUniformName);\n  Check.typeOf.string(\"matrixUniformName\", matrixUniformName);\n  Check.typeOf.string(\"styleUniformName\", styleUniformName);\n  //>>includeEnd('debug');\n\n  var shaderCode =\n    \"    float clipDistance = clip(gl_FragCoord, \" +\n    samplerUniformName +\n    \", \" +\n    matrixUniformName +\n    \"); \\n\" +\n    \"    vec4 clippingPlanesEdgeColor = vec4(1.0); \\n\" +\n    \"    clippingPlanesEdgeColor.rgb = \" +\n    styleUniformName +\n    \".rgb; \\n\" +\n    \"    float clippingPlanesEdgeWidth = \" +\n    styleUniformName +\n    \".a; \\n\" +\n    \"    if (clipDistance > 0.0 && clipDistance < clippingPlanesEdgeWidth) \\n\" +\n    \"    { \\n\" +\n    \"        gl_FragColor = clippingPlanesEdgeColor;\\n\" +\n    \"    } \\n\";\n  return shaderCode;\n}\nexport default getClipAndStyleCode;\n"]},"metadata":{},"sourceType":"module"}
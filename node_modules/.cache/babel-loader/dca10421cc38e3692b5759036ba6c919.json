{"ast":null,"code":"import defaultValue from \"../Core/defaultValue.js\";\n/**\n * Represents a burst of {@link Particle}s from a {@link ParticleSystem} at a given time in the systems lifetime.\n *\n * @alias ParticleBurst\n * @constructor\n *\n * @param {Object} [options] An object with the following properties:\n * @param {Number} [options.time=0.0] The time in seconds after the beginning of the particle system's lifetime that the burst will occur.\n * @param {Number} [options.minimum=0.0] The minimum number of particles emmitted in the burst.\n * @param {Number} [options.maximum=50.0] The maximum number of particles emitted in the burst.\n */\n\nfunction ParticleBurst(options) {\n  options = defaultValue(options, defaultValue.EMPTY_OBJECT);\n  /**\n   * The time in seconds after the beginning of the particle system's lifetime that the burst will occur.\n   * @type {Number}\n   * @default 0.0\n   */\n\n  this.time = defaultValue(options.time, 0.0);\n  /**\n   * The minimum number of particles emitted.\n   * @type {Number}\n   * @default 0.0\n   */\n\n  this.minimum = defaultValue(options.minimum, 0.0);\n  /**\n   * The maximum number of particles emitted.\n   * @type {Number}\n   * @default 50.0\n   */\n\n  this.maximum = defaultValue(options.maximum, 50.0);\n  this._complete = false;\n}\n\nObject.defineProperties(ParticleBurst.prototype, {\n  /**\n   * <code>true</code> if the burst has been completed; <code>false</code> otherwise.\n   * @memberof ParticleBurst.prototype\n   * @type {Boolean}\n   */\n  complete: {\n    get: function () {\n      return this._complete;\n    }\n  }\n});\nexport default ParticleBurst;","map":{"version":3,"sources":["C:/Users/passa/Desktop/WaterDeployTrial/node_modules/cesium/Source/Scene/ParticleBurst.js"],"names":["defaultValue","ParticleBurst","options","EMPTY_OBJECT","time","minimum","maximum","_complete","Object","defineProperties","prototype","complete","get"],"mappings":"AAAA,OAAOA,YAAP,MAAyB,yBAAzB;AAEA;;;;;;;;;;;;AAWA,SAASC,aAAT,CAAuBC,OAAvB,EAAgC;AAC9BA,EAAAA,OAAO,GAAGF,YAAY,CAACE,OAAD,EAAUF,YAAY,CAACG,YAAvB,CAAtB;AAEA;;;;;;AAKA,OAAKC,IAAL,GAAYJ,YAAY,CAACE,OAAO,CAACE,IAAT,EAAe,GAAf,CAAxB;AACA;;;;;;AAKA,OAAKC,OAAL,GAAeL,YAAY,CAACE,OAAO,CAACG,OAAT,EAAkB,GAAlB,CAA3B;AACA;;;;;;AAKA,OAAKC,OAAL,GAAeN,YAAY,CAACE,OAAO,CAACI,OAAT,EAAkB,IAAlB,CAA3B;AAEA,OAAKC,SAAL,GAAiB,KAAjB;AACD;;AAEDC,MAAM,CAACC,gBAAP,CAAwBR,aAAa,CAACS,SAAtC,EAAiD;AAC/C;;;;;AAKAC,EAAAA,QAAQ,EAAE;AACRC,IAAAA,GAAG,EAAE,YAAY;AACf,aAAO,KAAKL,SAAZ;AACD;AAHO;AANqC,CAAjD;AAYA,eAAeN,aAAf","sourcesContent":["import defaultValue from \"../Core/defaultValue.js\";\n\n/**\n * Represents a burst of {@link Particle}s from a {@link ParticleSystem} at a given time in the systems lifetime.\n *\n * @alias ParticleBurst\n * @constructor\n *\n * @param {Object} [options] An object with the following properties:\n * @param {Number} [options.time=0.0] The time in seconds after the beginning of the particle system's lifetime that the burst will occur.\n * @param {Number} [options.minimum=0.0] The minimum number of particles emmitted in the burst.\n * @param {Number} [options.maximum=50.0] The maximum number of particles emitted in the burst.\n */\nfunction ParticleBurst(options) {\n  options = defaultValue(options, defaultValue.EMPTY_OBJECT);\n\n  /**\n   * The time in seconds after the beginning of the particle system's lifetime that the burst will occur.\n   * @type {Number}\n   * @default 0.0\n   */\n  this.time = defaultValue(options.time, 0.0);\n  /**\n   * The minimum number of particles emitted.\n   * @type {Number}\n   * @default 0.0\n   */\n  this.minimum = defaultValue(options.minimum, 0.0);\n  /**\n   * The maximum number of particles emitted.\n   * @type {Number}\n   * @default 50.0\n   */\n  this.maximum = defaultValue(options.maximum, 50.0);\n\n  this._complete = false;\n}\n\nObject.defineProperties(ParticleBurst.prototype, {\n  /**\n   * <code>true</code> if the burst has been completed; <code>false</code> otherwise.\n   * @memberof ParticleBurst.prototype\n   * @type {Boolean}\n   */\n  complete: {\n    get: function () {\n      return this._complete;\n    },\n  },\n});\nexport default ParticleBurst;\n"]},"metadata":{},"sourceType":"module"}
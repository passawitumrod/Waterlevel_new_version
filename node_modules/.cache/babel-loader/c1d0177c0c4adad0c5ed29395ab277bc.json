{"ast":null,"code":"import Cartesian3 from \"../../Core/Cartesian3.js\";\nimport defined from \"../../Core/defined.js\";\nimport destroyObject from \"../../Core/destroyObject.js\";\nimport DeveloperError from \"../../Core/DeveloperError.js\";\nimport Ray from \"../../Core/Ray.js\";\nimport Rectangle from \"../../Core/Rectangle.js\";\nimport ScreenSpaceEventHandler from \"../../Core/ScreenSpaceEventHandler.js\";\nimport ScreenSpaceEventType from \"../../Core/ScreenSpaceEventType.js\";\nimport DebugModelMatrixPrimitive from \"../../Scene/DebugModelMatrixPrimitive.js\";\nimport PerformanceDisplay from \"../../Scene/PerformanceDisplay.js\";\nimport TileCoordinatesImageryProvider from \"../../Scene/TileCoordinatesImageryProvider.js\";\nimport knockout from \"../../ThirdParty/knockout.js\";\nimport createCommand from \"../createCommand.js\";\n\nfunction frustumStatisticsToString(statistics) {\n  var str;\n\n  if (defined(statistics)) {\n    str = \"Command Statistics\";\n    var com = statistics.commandsInFrustums;\n\n    for (var n in com) {\n      if (com.hasOwnProperty(n)) {\n        var num = parseInt(n, 10);\n        var s;\n\n        if (num === 7) {\n          s = \"1, 2 and 3\";\n        } else {\n          var f = [];\n\n          for (var i = 2; i >= 0; i--) {\n            var p = Math.pow(2, i);\n\n            if (num >= p) {\n              f.push(i + 1);\n              num -= p;\n            }\n          }\n\n          s = f.reverse().join(\" and \");\n        }\n\n        str += \"<br>&nbsp;&nbsp;&nbsp;&nbsp;\" + com[n] + \" in frustum \" + s;\n      }\n    }\n\n    str += \"<br>Total: \" + statistics.totalCommands;\n  }\n\n  return str;\n}\n\nfunction boundDepthFrustum(lower, upper, proposed) {\n  var bounded = Math.min(proposed, upper);\n  bounded = Math.max(bounded, lower);\n  return bounded;\n}\n\nvar scratchPickRay = new Ray();\nvar scratchPickCartesian = new Cartesian3();\n/**\n * The view model for {@link CesiumInspector}.\n * @alias CesiumInspectorViewModel\n * @constructor\n *\n * @param {Scene} scene The scene instance to use.\n * @param {PerformanceContainer} performanceContainer The instance to use for performance container.\n */\n\nfunction CesiumInspectorViewModel(scene, performanceContainer) {\n  //>>includeStart('debug', pragmas.debug);\n  if (!defined(scene)) {\n    throw new DeveloperError(\"scene is required\");\n  }\n\n  if (!defined(performanceContainer)) {\n    throw new DeveloperError(\"performanceContainer is required\");\n  } //>>includeEnd('debug');\n\n\n  var that = this;\n  var canvas = scene.canvas;\n  var eventHandler = new ScreenSpaceEventHandler(canvas);\n  this._eventHandler = eventHandler;\n  this._scene = scene;\n  this._canvas = canvas;\n  this._primitive = undefined;\n  this._tile = undefined;\n  this._modelMatrixPrimitive = undefined;\n  this._performanceDisplay = undefined;\n  this._performanceContainer = performanceContainer;\n  var globe = this._scene.globe;\n  globe.depthTestAgainstTerrain = true;\n  /**\n   * Gets or sets the show frustums state.  This property is observable.\n   * @type {Boolean}\n   * @default false\n   */\n\n  this.frustums = false;\n  /**\n   * Gets or sets the show frustum planes state.  This property is observable.\n   * @type {Boolean}\n   * @default false\n   */\n\n  this.frustumPlanes = false;\n  /**\n   * Gets or sets the show performance display state.  This property is observable.\n   * @type {Boolean}\n   * @default false\n   */\n\n  this.performance = false;\n  /**\n   * Gets or sets the shader cache text.  This property is observable.\n   * @type {String}\n   * @default ''\n   */\n\n  this.shaderCacheText = \"\";\n  /**\n   * Gets or sets the show primitive bounding sphere state.  This property is observable.\n   * @type {Boolean}\n   * @default false\n   */\n\n  this.primitiveBoundingSphere = false;\n  /**\n   * Gets or sets the show primitive reference frame state.  This property is observable.\n   * @type {Boolean}\n   * @default false\n   */\n\n  this.primitiveReferenceFrame = false;\n  /**\n   * Gets or sets the filter primitive state.  This property is observable.\n   * @type {Boolean}\n   * @default false\n   */\n\n  this.filterPrimitive = false;\n  /**\n   * Gets or sets the show tile bounding sphere state.  This property is observable.\n   * @type {Boolean}\n   * @default false\n   */\n\n  this.tileBoundingSphere = false;\n  /**\n   * Gets or sets the filter tile state.  This property is observable.\n   * @type {Boolean}\n   * @default false\n   */\n\n  this.filterTile = false;\n  /**\n   * Gets or sets the show wireframe state.  This property is observable.\n   * @type {Boolean}\n   * @default false\n   */\n\n  this.wireframe = false;\n  /**\n   * Gets or sets the show globe depth state.  This property is observable.\n   * @type {Boolean}\n   * @default false\n   */\n\n  this.globeDepth = false;\n  /**\n   * Gets or sets the show pick depth state.  This property is observable.\n   * @type {Boolean}\n   * @default false\n   */\n\n  this.pickDepth = false;\n  /**\n   * Gets or sets the index of the depth frustum to display.  This property is observable.\n   * @type {Number}\n   * @default 1\n   */\n\n  this.depthFrustum = 1;\n  this._numberOfFrustums = 1;\n  /**\n   * Gets or sets the suspend updates state.  This property is observable.\n   * @type {Boolean}\n   * @default false\n   */\n\n  this.suspendUpdates = false;\n  /**\n   * Gets or sets the show tile coordinates state.  This property is observable.\n   * @type {Boolean}\n   * @default false\n   */\n\n  this.tileCoordinates = false;\n  /**\n   * Gets or sets the frustum statistic text.  This property is observable.\n   * @type {String}\n   * @default ''\n   */\n\n  this.frustumStatisticText = false;\n  /**\n   * Gets or sets the selected tile information text.  This property is observable.\n   * @type {String}\n   * @default ''\n   */\n\n  this.tileText = \"\";\n  /**\n   * Gets if a primitive has been selected.  This property is observable.\n   * @type {Boolean}\n   * @default false\n   */\n\n  this.hasPickedPrimitive = false;\n  /**\n   * Gets if a tile has been selected.  This property is observable\n   * @type {Boolean}\n   * @default false\n   */\n\n  this.hasPickedTile = false;\n  /**\n   * Gets if the picking primitive command is active.  This property is observable.\n   * @type {Boolean}\n   * @default false\n   */\n\n  this.pickPrimitiveActive = false;\n  /**\n   * Gets if the picking tile command is active.  This property is observable.\n   * @type {Boolean}\n   * @default false\n   */\n\n  this.pickTileActive = false;\n  /**\n   * Gets or sets if the cesium inspector drop down is visible.  This property is observable.\n   * @type {Boolean}\n   * @default true\n   */\n\n  this.dropDownVisible = true;\n  /**\n   * Gets or sets if the general section is visible.  This property is observable.\n   * @type {Boolean}\n   * @default true\n   */\n\n  this.generalVisible = true;\n  /**\n   * Gets or sets if the primitive section is visible.  This property is observable.\n   * @type {Boolean}\n   * @default false\n   */\n\n  this.primitivesVisible = false;\n  /**\n   * Gets or sets if the terrain section is visible.  This property is observable.\n   * @type {Boolean}\n   * @default false\n   */\n\n  this.terrainVisible = false;\n  /**\n   * Gets or sets the index of the depth frustum text.  This property is observable.\n   * @type {String}\n   * @default ''\n   */\n\n  this.depthFrustumText = \"\";\n  knockout.track(this, [\"frustums\", \"frustumPlanes\", \"performance\", \"shaderCacheText\", \"primitiveBoundingSphere\", \"primitiveReferenceFrame\", \"filterPrimitive\", \"tileBoundingSphere\", \"filterTile\", \"wireframe\", \"globeDepth\", \"pickDepth\", \"depthFrustum\", \"suspendUpdates\", \"tileCoordinates\", \"frustumStatisticText\", \"tileText\", \"hasPickedPrimitive\", \"hasPickedTile\", \"pickPrimitiveActive\", \"pickTileActive\", \"dropDownVisible\", \"generalVisible\", \"primitivesVisible\", \"terrainVisible\", \"depthFrustumText\"]);\n  this._toggleDropDown = createCommand(function () {\n    that.dropDownVisible = !that.dropDownVisible;\n  });\n  this._toggleGeneral = createCommand(function () {\n    that.generalVisible = !that.generalVisible;\n  });\n  this._togglePrimitives = createCommand(function () {\n    that.primitivesVisible = !that.primitivesVisible;\n  });\n  this._toggleTerrain = createCommand(function () {\n    that.terrainVisible = !that.terrainVisible;\n  });\n  this._frustumsSubscription = knockout.getObservable(this, \"frustums\").subscribe(function (val) {\n    that._scene.debugShowFrustums = val;\n\n    that._scene.requestRender();\n  });\n  this._frustumPlanesSubscription = knockout.getObservable(this, \"frustumPlanes\").subscribe(function (val) {\n    that._scene.debugShowFrustumPlanes = val;\n\n    that._scene.requestRender();\n  });\n  this._performanceSubscription = knockout.getObservable(this, \"performance\").subscribe(function (val) {\n    if (val) {\n      that._performanceDisplay = new PerformanceDisplay({\n        container: that._performanceContainer\n      });\n    } else {\n      that._performanceContainer.innerHTML = \"\";\n    }\n  });\n  this._showPrimitiveBoundingSphere = createCommand(function () {\n    that._primitive.debugShowBoundingVolume = that.primitiveBoundingSphere;\n\n    that._scene.requestRender();\n\n    return true;\n  });\n  this._primitiveBoundingSphereSubscription = knockout.getObservable(this, \"primitiveBoundingSphere\").subscribe(function () {\n    that._showPrimitiveBoundingSphere();\n  });\n  this._showPrimitiveReferenceFrame = createCommand(function () {\n    if (that.primitiveReferenceFrame) {\n      var modelMatrix = that._primitive.modelMatrix;\n      that._modelMatrixPrimitive = new DebugModelMatrixPrimitive({\n        modelMatrix: modelMatrix\n      });\n\n      that._scene.primitives.add(that._modelMatrixPrimitive);\n    } else if (defined(that._modelMatrixPrimitive)) {\n      that._scene.primitives.remove(that._modelMatrixPrimitive);\n\n      that._modelMatrixPrimitive = undefined;\n    }\n\n    that._scene.requestRender();\n\n    return true;\n  });\n  this._primitiveReferenceFrameSubscription = knockout.getObservable(this, \"primitiveReferenceFrame\").subscribe(function () {\n    that._showPrimitiveReferenceFrame();\n  });\n  this._doFilterPrimitive = createCommand(function () {\n    if (that.filterPrimitive) {\n      that._scene.debugCommandFilter = function (command) {\n        if (defined(that._modelMatrixPrimitive) && command.owner === that._modelMatrixPrimitive._primitive) {\n          return true;\n        } else if (defined(that._primitive)) {\n          return command.owner === that._primitive || command.owner === that._primitive._billboardCollection || command.owner.primitive === that._primitive;\n        }\n\n        return false;\n      };\n    } else {\n      that._scene.debugCommandFilter = undefined;\n    }\n\n    return true;\n  });\n  this._filterPrimitiveSubscription = knockout.getObservable(this, \"filterPrimitive\").subscribe(function () {\n    that._doFilterPrimitive();\n\n    that._scene.requestRender();\n  });\n  this._wireframeSubscription = knockout.getObservable(this, \"wireframe\").subscribe(function (val) {\n    globe._surface.tileProvider._debug.wireframe = val;\n\n    that._scene.requestRender();\n  });\n  this._globeDepthSubscription = knockout.getObservable(this, \"globeDepth\").subscribe(function (val) {\n    that._scene.debugShowGlobeDepth = val;\n\n    that._scene.requestRender();\n  });\n  this._pickDepthSubscription = knockout.getObservable(this, \"pickDepth\").subscribe(function (val) {\n    that._scene.debugShowPickDepth = val;\n\n    that._scene.requestRender();\n  });\n  this._depthFrustumSubscription = knockout.getObservable(this, \"depthFrustum\").subscribe(function (val) {\n    that._scene.debugShowDepthFrustum = val;\n\n    that._scene.requestRender();\n  });\n  this._incrementDepthFrustum = createCommand(function () {\n    var next = that.depthFrustum + 1;\n    that.depthFrustum = boundDepthFrustum(1, that._numberOfFrustums, next);\n\n    that._scene.requestRender();\n\n    return true;\n  });\n  this._decrementDepthFrustum = createCommand(function () {\n    var next = that.depthFrustum - 1;\n    that.depthFrustum = boundDepthFrustum(1, that._numberOfFrustums, next);\n\n    that._scene.requestRender();\n\n    return true;\n  });\n  this._suspendUpdatesSubscription = knockout.getObservable(this, \"suspendUpdates\").subscribe(function (val) {\n    globe._surface._debug.suspendLodUpdate = val;\n\n    if (!val) {\n      that.filterTile = false;\n    }\n  });\n  var tileBoundariesLayer;\n  this._showTileCoordinates = createCommand(function () {\n    if (that.tileCoordinates && !defined(tileBoundariesLayer)) {\n      tileBoundariesLayer = scene.imageryLayers.addImageryProvider(new TileCoordinatesImageryProvider({\n        tilingScheme: scene.terrainProvider.tilingScheme\n      }));\n    } else if (!that.tileCoordinates && defined(tileBoundariesLayer)) {\n      scene.imageryLayers.remove(tileBoundariesLayer);\n      tileBoundariesLayer = undefined;\n    }\n\n    return true;\n  });\n  this._tileCoordinatesSubscription = knockout.getObservable(this, \"tileCoordinates\").subscribe(function () {\n    that._showTileCoordinates();\n\n    that._scene.requestRender();\n  });\n  this._tileBoundingSphereSubscription = knockout.getObservable(this, \"tileBoundingSphere\").subscribe(function () {\n    that._showTileBoundingSphere();\n\n    that._scene.requestRender();\n  });\n  this._showTileBoundingSphere = createCommand(function () {\n    if (that.tileBoundingSphere) {\n      globe._surface.tileProvider._debug.boundingSphereTile = that._tile;\n    } else {\n      globe._surface.tileProvider._debug.boundingSphereTile = undefined;\n    }\n\n    that._scene.requestRender();\n\n    return true;\n  });\n  this._doFilterTile = createCommand(function () {\n    if (!that.filterTile) {\n      that.suspendUpdates = false;\n    } else {\n      that.suspendUpdates = true;\n      globe._surface._tilesToRender = [];\n\n      if (defined(that._tile) && that._tile.renderable) {\n        globe._surface._tilesToRender.push(that._tile);\n      }\n    }\n\n    return true;\n  });\n  this._filterTileSubscription = knockout.getObservable(this, \"filterTile\").subscribe(function () {\n    that.doFilterTile();\n\n    that._scene.requestRender();\n  });\n\n  function pickPrimitive(e) {\n    var newPick = that._scene.pick({\n      x: e.position.x,\n      y: e.position.y\n    });\n\n    if (defined(newPick)) {\n      that.primitive = defined(newPick.collection) ? newPick.collection : newPick.primitive;\n    }\n\n    that._scene.requestRender();\n\n    that.pickPrimitiveActive = false;\n  }\n\n  this._pickPrimitive = createCommand(function () {\n    that.pickPrimitiveActive = !that.pickPrimitiveActive;\n  });\n  this._pickPrimitiveActiveSubscription = knockout.getObservable(this, \"pickPrimitiveActive\").subscribe(function (val) {\n    if (val) {\n      eventHandler.setInputAction(pickPrimitive, ScreenSpaceEventType.LEFT_CLICK);\n    } else {\n      eventHandler.removeInputAction(ScreenSpaceEventType.LEFT_CLICK);\n    }\n  });\n\n  function selectTile(e) {\n    var selectedTile;\n    var ellipsoid = globe.ellipsoid;\n\n    var ray = that._scene.camera.getPickRay(e.position, scratchPickRay);\n\n    var cartesian = globe.pick(ray, that._scene, scratchPickCartesian);\n\n    if (defined(cartesian)) {\n      var cartographic = ellipsoid.cartesianToCartographic(cartesian);\n      var tilesRendered = globe._surface.tileProvider._tilesToRenderByTextureCount;\n\n      for (var textureCount = 0; !selectedTile && textureCount < tilesRendered.length; ++textureCount) {\n        var tilesRenderedByTextureCount = tilesRendered[textureCount];\n\n        if (!defined(tilesRenderedByTextureCount)) {\n          continue;\n        }\n\n        for (var tileIndex = 0; !selectedTile && tileIndex < tilesRenderedByTextureCount.length; ++tileIndex) {\n          var tile = tilesRenderedByTextureCount[tileIndex];\n\n          if (Rectangle.contains(tile.rectangle, cartographic)) {\n            selectedTile = tile;\n          }\n        }\n      }\n    }\n\n    that.tile = selectedTile;\n    that.pickTileActive = false;\n  }\n\n  this._pickTile = createCommand(function () {\n    that.pickTileActive = !that.pickTileActive;\n  });\n  this._pickTileActiveSubscription = knockout.getObservable(this, \"pickTileActive\").subscribe(function (val) {\n    if (val) {\n      eventHandler.setInputAction(selectTile, ScreenSpaceEventType.LEFT_CLICK);\n    } else {\n      eventHandler.removeInputAction(ScreenSpaceEventType.LEFT_CLICK);\n    }\n  });\n  this._removePostRenderEvent = scene.postRender.addEventListener(function () {\n    that._update();\n  });\n}\n\nObject.defineProperties(CesiumInspectorViewModel.prototype, {\n  /**\n   * Gets the scene to control.\n   * @memberof CesiumInspectorViewModel.prototype\n   *\n   * @type {Scene}\n   */\n  scene: {\n    get: function () {\n      return this._scene;\n    }\n  },\n\n  /**\n   * Gets the container of the PerformanceDisplay\n   * @memberof CesiumInspectorViewModel.prototype\n   *\n   * @type {Element}\n   */\n  performanceContainer: {\n    get: function () {\n      return this._performanceContainer;\n    }\n  },\n\n  /**\n   * Gets the command to toggle the visibility of the drop down.\n   * @memberof CesiumInspectorViewModel.prototype\n   *\n   * @type {Command}\n   */\n  toggleDropDown: {\n    get: function () {\n      return this._toggleDropDown;\n    }\n  },\n\n  /**\n   * Gets the command to toggle the visibility of a BoundingSphere for a primitive\n   * @memberof CesiumInspectorViewModel.prototype\n   *\n   * @type {Command}\n   */\n  showPrimitiveBoundingSphere: {\n    get: function () {\n      return this._showPrimitiveBoundingSphere;\n    }\n  },\n\n  /**\n   * Gets the command to toggle the visibility of a {@link DebugModelMatrixPrimitive} for the model matrix of a primitive\n   * @memberof CesiumInspectorViewModel.prototype\n   *\n   * @type {Command}\n   */\n  showPrimitiveReferenceFrame: {\n    get: function () {\n      return this._showPrimitiveReferenceFrame;\n    }\n  },\n\n  /**\n   * Gets the command to toggle a filter that renders only a selected primitive\n   * @memberof CesiumInspectorViewModel.prototype\n   *\n   * @type {Command}\n   */\n  doFilterPrimitive: {\n    get: function () {\n      return this._doFilterPrimitive;\n    }\n  },\n\n  /**\n   * Gets the command to increment the depth frustum index to be shown\n   * @memberof CesiumInspectorViewModel.prototype\n   *\n   * @type {Command}\n   */\n  incrementDepthFrustum: {\n    get: function () {\n      return this._incrementDepthFrustum;\n    }\n  },\n\n  /**\n   * Gets the command to decrement the depth frustum index to be shown\n   * @memberof CesiumInspectorViewModel.prototype\n   *\n   * @type {Command}\n   */\n  decrementDepthFrustum: {\n    get: function () {\n      return this._decrementDepthFrustum;\n    }\n  },\n\n  /**\n   * Gets the command to toggle the visibility of tile coordinates\n   * @memberof CesiumInspectorViewModel.prototype\n   *\n   * @type {Command}\n   */\n  showTileCoordinates: {\n    get: function () {\n      return this._showTileCoordinates;\n    }\n  },\n\n  /**\n   * Gets the command to toggle the visibility of a BoundingSphere for a selected tile\n   * @memberof CesiumInspectorViewModel.prototype\n   *\n   * @type {Command}\n   */\n  showTileBoundingSphere: {\n    get: function () {\n      return this._showTileBoundingSphere;\n    }\n  },\n\n  /**\n   * Gets the command to toggle a filter that renders only a selected tile\n   * @memberof CesiumInspectorViewModel.prototype\n   *\n   * @type {Command}\n   */\n  doFilterTile: {\n    get: function () {\n      return this._doFilterTile;\n    }\n  },\n\n  /**\n   * Gets the command to expand and collapse the general section\n   * @memberof CesiumInspectorViewModel.prototype\n   *\n   * @type {Command}\n   */\n  toggleGeneral: {\n    get: function () {\n      return this._toggleGeneral;\n    }\n  },\n\n  /**\n   * Gets the command to expand and collapse the primitives section\n   * @memberof CesiumInspectorViewModel.prototype\n   *\n   * @type {Command}\n   */\n  togglePrimitives: {\n    get: function () {\n      return this._togglePrimitives;\n    }\n  },\n\n  /**\n   * Gets the command to expand and collapse the terrain section\n   * @memberof CesiumInspectorViewModel.prototype\n   *\n   * @type {Command}\n   */\n  toggleTerrain: {\n    get: function () {\n      return this._toggleTerrain;\n    }\n  },\n\n  /**\n   * Gets the command to pick a primitive\n   * @memberof CesiumInspectorViewModel.prototype\n   *\n   * @type {Command}\n   */\n  pickPrimitive: {\n    get: function () {\n      return this._pickPrimitive;\n    }\n  },\n\n  /**\n   * Gets the command to pick a tile\n   * @memberof CesiumInspectorViewModel.prototype\n   *\n   * @type {Command}\n   */\n  pickTile: {\n    get: function () {\n      return this._pickTile;\n    }\n  },\n\n  /**\n   * Gets the command to pick a tile\n   * @memberof CesiumInspectorViewModel.prototype\n   *\n   * @type {Command}\n   */\n  selectParent: {\n    get: function () {\n      var that = this;\n      return createCommand(function () {\n        that.tile = that.tile.parent;\n      });\n    }\n  },\n\n  /**\n   * Gets the command to pick a tile\n   * @memberof CesiumInspectorViewModel.prototype\n   *\n   * @type {Command}\n   */\n  selectNW: {\n    get: function () {\n      var that = this;\n      return createCommand(function () {\n        that.tile = that.tile.northwestChild;\n      });\n    }\n  },\n\n  /**\n   * Gets the command to pick a tile\n   * @memberof CesiumInspectorViewModel.prototype\n   *\n   * @type {Command}\n   */\n  selectNE: {\n    get: function () {\n      var that = this;\n      return createCommand(function () {\n        that.tile = that.tile.northeastChild;\n      });\n    }\n  },\n\n  /**\n   * Gets the command to pick a tile\n   * @memberof CesiumInspectorViewModel.prototype\n   *\n   * @type {Command}\n   */\n  selectSW: {\n    get: function () {\n      var that = this;\n      return createCommand(function () {\n        that.tile = that.tile.southwestChild;\n      });\n    }\n  },\n\n  /**\n   * Gets the command to pick a tile\n   * @memberof CesiumInspectorViewModel.prototype\n   *\n   * @type {Command}\n   */\n  selectSE: {\n    get: function () {\n      var that = this;\n      return createCommand(function () {\n        that.tile = that.tile.southeastChild;\n      });\n    }\n  },\n\n  /**\n   * Gets or sets the current selected primitive\n   * @memberof CesiumInspectorViewModel.prototype\n   *\n   * @type {Command}\n   */\n  primitive: {\n    get: function () {\n      return this._primitive;\n    },\n    set: function (newPrimitive) {\n      var oldPrimitive = this._primitive;\n\n      if (newPrimitive !== oldPrimitive) {\n        this.hasPickedPrimitive = true;\n\n        if (defined(oldPrimitive)) {\n          oldPrimitive.debugShowBoundingVolume = false;\n        }\n\n        this._scene.debugCommandFilter = undefined;\n\n        if (defined(this._modelMatrixPrimitive)) {\n          this._scene.primitives.remove(this._modelMatrixPrimitive);\n\n          this._modelMatrixPrimitive = undefined;\n        }\n\n        this._primitive = newPrimitive;\n        newPrimitive.show = false;\n        setTimeout(function () {\n          newPrimitive.show = true;\n        }, 50);\n        this.showPrimitiveBoundingSphere();\n        this.showPrimitiveReferenceFrame();\n        this.doFilterPrimitive();\n      }\n    }\n  },\n\n  /**\n   * Gets or sets the current selected tile\n   * @memberof CesiumInspectorViewModel.prototype\n   *\n   * @type {Command}\n   */\n  tile: {\n    get: function () {\n      return this._tile;\n    },\n    set: function (newTile) {\n      if (defined(newTile)) {\n        this.hasPickedTile = true;\n        var oldTile = this._tile;\n\n        if (newTile !== oldTile) {\n          this.tileText = \"L: \" + newTile.level + \" X: \" + newTile.x + \" Y: \" + newTile.y;\n          this.tileText += \"<br>SW corner: \" + newTile.rectangle.west + \", \" + newTile.rectangle.south;\n          this.tileText += \"<br>NE corner: \" + newTile.rectangle.east + \", \" + newTile.rectangle.north;\n          var data = newTile.data;\n\n          if (defined(data) && defined(data.tileBoundingRegion)) {\n            this.tileText += \"<br>Min: \" + data.tileBoundingRegion.minimumHeight + \" Max: \" + data.tileBoundingRegion.maximumHeight;\n          } else {\n            this.tileText += \"<br>(Tile is not loaded)\";\n          }\n        }\n\n        this._tile = newTile;\n        this.showTileBoundingSphere();\n        this.doFilterTile();\n      } else {\n        this.hasPickedTile = false;\n        this._tile = undefined;\n      }\n    }\n  }\n});\n/**\n * Updates the view model\n * @private\n */\n\nCesiumInspectorViewModel.prototype._update = function () {\n  if (this.frustums) {\n    this.frustumStatisticText = frustumStatisticsToString(this._scene.debugFrustumStatistics);\n  } // Determine the number of frustums being used.\n\n\n  var numberOfFrustums = this._scene.numberOfFrustums;\n  this._numberOfFrustums = numberOfFrustums; // Bound the frustum to be displayed.\n\n  this.depthFrustum = boundDepthFrustum(1, numberOfFrustums, this.depthFrustum); // Update the displayed text.\n\n  this.depthFrustumText = this.depthFrustum + \" of \" + numberOfFrustums;\n\n  if (this.performance) {\n    this._performanceDisplay.update();\n  }\n\n  if (this.primitiveReferenceFrame) {\n    this._modelMatrixPrimitive.modelMatrix = this._primitive.modelMatrix;\n  }\n\n  this.shaderCacheText = \"Cached shaders: \" + this._scene.context.shaderCache.numberOfShaders;\n};\n/**\n * @returns {Boolean} true if the object has been destroyed, false otherwise.\n */\n\n\nCesiumInspectorViewModel.prototype.isDestroyed = function () {\n  return false;\n};\n/**\n * Destroys the widget.  Should be called if permanently\n * removing the widget from layout.\n */\n\n\nCesiumInspectorViewModel.prototype.destroy = function () {\n  this._eventHandler.destroy();\n\n  this._removePostRenderEvent();\n\n  this._frustumsSubscription.dispose();\n\n  this._frustumPlanesSubscription.dispose();\n\n  this._performanceSubscription.dispose();\n\n  this._primitiveBoundingSphereSubscription.dispose();\n\n  this._primitiveReferenceFrameSubscription.dispose();\n\n  this._filterPrimitiveSubscription.dispose();\n\n  this._wireframeSubscription.dispose();\n\n  this._globeDepthSubscription.dispose();\n\n  this._pickDepthSubscription.dispose();\n\n  this._depthFrustumSubscription.dispose();\n\n  this._suspendUpdatesSubscription.dispose();\n\n  this._tileCoordinatesSubscription.dispose();\n\n  this._tileBoundingSphereSubscription.dispose();\n\n  this._filterTileSubscription.dispose();\n\n  this._pickPrimitiveActiveSubscription.dispose();\n\n  this._pickTileActiveSubscription.dispose();\n\n  return destroyObject(this);\n};\n\nexport default CesiumInspectorViewModel;","map":{"version":3,"sources":["C:/Users/passa/Desktop/WaterDeployTrial/node_modules/cesium/Source/Widgets/CesiumInspector/CesiumInspectorViewModel.js"],"names":["Cartesian3","defined","destroyObject","DeveloperError","Ray","Rectangle","ScreenSpaceEventHandler","ScreenSpaceEventType","DebugModelMatrixPrimitive","PerformanceDisplay","TileCoordinatesImageryProvider","knockout","createCommand","frustumStatisticsToString","statistics","str","com","commandsInFrustums","n","hasOwnProperty","num","parseInt","s","f","i","p","Math","pow","push","reverse","join","totalCommands","boundDepthFrustum","lower","upper","proposed","bounded","min","max","scratchPickRay","scratchPickCartesian","CesiumInspectorViewModel","scene","performanceContainer","that","canvas","eventHandler","_eventHandler","_scene","_canvas","_primitive","undefined","_tile","_modelMatrixPrimitive","_performanceDisplay","_performanceContainer","globe","depthTestAgainstTerrain","frustums","frustumPlanes","performance","shaderCacheText","primitiveBoundingSphere","primitiveReferenceFrame","filterPrimitive","tileBoundingSphere","filterTile","wireframe","globeDepth","pickDepth","depthFrustum","_numberOfFrustums","suspendUpdates","tileCoordinates","frustumStatisticText","tileText","hasPickedPrimitive","hasPickedTile","pickPrimitiveActive","pickTileActive","dropDownVisible","generalVisible","primitivesVisible","terrainVisible","depthFrustumText","track","_toggleDropDown","_toggleGeneral","_togglePrimitives","_toggleTerrain","_frustumsSubscription","getObservable","subscribe","val","debugShowFrustums","requestRender","_frustumPlanesSubscription","debugShowFrustumPlanes","_performanceSubscription","container","innerHTML","_showPrimitiveBoundingSphere","debugShowBoundingVolume","_primitiveBoundingSphereSubscription","_showPrimitiveReferenceFrame","modelMatrix","primitives","add","remove","_primitiveReferenceFrameSubscription","_doFilterPrimitive","debugCommandFilter","command","owner","_billboardCollection","primitive","_filterPrimitiveSubscription","_wireframeSubscription","_surface","tileProvider","_debug","_globeDepthSubscription","debugShowGlobeDepth","_pickDepthSubscription","debugShowPickDepth","_depthFrustumSubscription","debugShowDepthFrustum","_incrementDepthFrustum","next","_decrementDepthFrustum","_suspendUpdatesSubscription","suspendLodUpdate","tileBoundariesLayer","_showTileCoordinates","imageryLayers","addImageryProvider","tilingScheme","terrainProvider","_tileCoordinatesSubscription","_tileBoundingSphereSubscription","_showTileBoundingSphere","boundingSphereTile","_doFilterTile","_tilesToRender","renderable","_filterTileSubscription","doFilterTile","pickPrimitive","e","newPick","pick","x","position","y","collection","_pickPrimitive","_pickPrimitiveActiveSubscription","setInputAction","LEFT_CLICK","removeInputAction","selectTile","selectedTile","ellipsoid","ray","camera","getPickRay","cartesian","cartographic","cartesianToCartographic","tilesRendered","_tilesToRenderByTextureCount","textureCount","length","tilesRenderedByTextureCount","tileIndex","tile","contains","rectangle","_pickTile","_pickTileActiveSubscription","_removePostRenderEvent","postRender","addEventListener","_update","Object","defineProperties","prototype","get","toggleDropDown","showPrimitiveBoundingSphere","showPrimitiveReferenceFrame","doFilterPrimitive","incrementDepthFrustum","decrementDepthFrustum","showTileCoordinates","showTileBoundingSphere","toggleGeneral","togglePrimitives","toggleTerrain","pickTile","selectParent","parent","selectNW","northwestChild","selectNE","northeastChild","selectSW","southwestChild","selectSE","southeastChild","set","newPrimitive","oldPrimitive","show","setTimeout","newTile","oldTile","level","west","south","east","north","data","tileBoundingRegion","minimumHeight","maximumHeight","debugFrustumStatistics","numberOfFrustums","update","context","shaderCache","numberOfShaders","isDestroyed","destroy","dispose"],"mappings":"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","sourcesContent":["import Cartesian3 from \"../../Core/Cartesian3.js\";\nimport defined from \"../../Core/defined.js\";\nimport destroyObject from \"../../Core/destroyObject.js\";\nimport DeveloperError from \"../../Core/DeveloperError.js\";\nimport Ray from \"../../Core/Ray.js\";\nimport Rectangle from \"../../Core/Rectangle.js\";\nimport ScreenSpaceEventHandler from \"../../Core/ScreenSpaceEventHandler.js\";\nimport ScreenSpaceEventType from \"../../Core/ScreenSpaceEventType.js\";\nimport DebugModelMatrixPrimitive from \"../../Scene/DebugModelMatrixPrimitive.js\";\nimport PerformanceDisplay from \"../../Scene/PerformanceDisplay.js\";\nimport TileCoordinatesImageryProvider from \"../../Scene/TileCoordinatesImageryProvider.js\";\nimport knockout from \"../../ThirdParty/knockout.js\";\nimport createCommand from \"../createCommand.js\";\n\nfunction frustumStatisticsToString(statistics) {\n  var str;\n  if (defined(statistics)) {\n    str = \"Command Statistics\";\n    var com = statistics.commandsInFrustums;\n    for (var n in com) {\n      if (com.hasOwnProperty(n)) {\n        var num = parseInt(n, 10);\n        var s;\n        if (num === 7) {\n          s = \"1, 2 and 3\";\n        } else {\n          var f = [];\n          for (var i = 2; i >= 0; i--) {\n            var p = Math.pow(2, i);\n            if (num >= p) {\n              f.push(i + 1);\n              num -= p;\n            }\n          }\n          s = f.reverse().join(\" and \");\n        }\n        str += \"<br>&nbsp;&nbsp;&nbsp;&nbsp;\" + com[n] + \" in frustum \" + s;\n      }\n    }\n    str += \"<br>Total: \" + statistics.totalCommands;\n  }\n\n  return str;\n}\n\nfunction boundDepthFrustum(lower, upper, proposed) {\n  var bounded = Math.min(proposed, upper);\n  bounded = Math.max(bounded, lower);\n  return bounded;\n}\n\nvar scratchPickRay = new Ray();\nvar scratchPickCartesian = new Cartesian3();\n\n/**\n * The view model for {@link CesiumInspector}.\n * @alias CesiumInspectorViewModel\n * @constructor\n *\n * @param {Scene} scene The scene instance to use.\n * @param {PerformanceContainer} performanceContainer The instance to use for performance container.\n */\nfunction CesiumInspectorViewModel(scene, performanceContainer) {\n  //>>includeStart('debug', pragmas.debug);\n  if (!defined(scene)) {\n    throw new DeveloperError(\"scene is required\");\n  }\n\n  if (!defined(performanceContainer)) {\n    throw new DeveloperError(\"performanceContainer is required\");\n  }\n  //>>includeEnd('debug');\n\n  var that = this;\n  var canvas = scene.canvas;\n  var eventHandler = new ScreenSpaceEventHandler(canvas);\n  this._eventHandler = eventHandler;\n  this._scene = scene;\n  this._canvas = canvas;\n  this._primitive = undefined;\n  this._tile = undefined;\n  this._modelMatrixPrimitive = undefined;\n  this._performanceDisplay = undefined;\n  this._performanceContainer = performanceContainer;\n\n  var globe = this._scene.globe;\n  globe.depthTestAgainstTerrain = true;\n\n  /**\n   * Gets or sets the show frustums state.  This property is observable.\n   * @type {Boolean}\n   * @default false\n   */\n  this.frustums = false;\n\n  /**\n   * Gets or sets the show frustum planes state.  This property is observable.\n   * @type {Boolean}\n   * @default false\n   */\n  this.frustumPlanes = false;\n\n  /**\n   * Gets or sets the show performance display state.  This property is observable.\n   * @type {Boolean}\n   * @default false\n   */\n  this.performance = false;\n\n  /**\n   * Gets or sets the shader cache text.  This property is observable.\n   * @type {String}\n   * @default ''\n   */\n  this.shaderCacheText = \"\";\n\n  /**\n   * Gets or sets the show primitive bounding sphere state.  This property is observable.\n   * @type {Boolean}\n   * @default false\n   */\n  this.primitiveBoundingSphere = false;\n\n  /**\n   * Gets or sets the show primitive reference frame state.  This property is observable.\n   * @type {Boolean}\n   * @default false\n   */\n  this.primitiveReferenceFrame = false;\n\n  /**\n   * Gets or sets the filter primitive state.  This property is observable.\n   * @type {Boolean}\n   * @default false\n   */\n  this.filterPrimitive = false;\n\n  /**\n   * Gets or sets the show tile bounding sphere state.  This property is observable.\n   * @type {Boolean}\n   * @default false\n   */\n  this.tileBoundingSphere = false;\n\n  /**\n   * Gets or sets the filter tile state.  This property is observable.\n   * @type {Boolean}\n   * @default false\n   */\n  this.filterTile = false;\n\n  /**\n   * Gets or sets the show wireframe state.  This property is observable.\n   * @type {Boolean}\n   * @default false\n   */\n  this.wireframe = false;\n\n  /**\n   * Gets or sets the show globe depth state.  This property is observable.\n   * @type {Boolean}\n   * @default false\n   */\n  this.globeDepth = false;\n\n  /**\n   * Gets or sets the show pick depth state.  This property is observable.\n   * @type {Boolean}\n   * @default false\n   */\n  this.pickDepth = false;\n\n  /**\n   * Gets or sets the index of the depth frustum to display.  This property is observable.\n   * @type {Number}\n   * @default 1\n   */\n  this.depthFrustum = 1;\n  this._numberOfFrustums = 1;\n\n  /**\n   * Gets or sets the suspend updates state.  This property is observable.\n   * @type {Boolean}\n   * @default false\n   */\n  this.suspendUpdates = false;\n\n  /**\n   * Gets or sets the show tile coordinates state.  This property is observable.\n   * @type {Boolean}\n   * @default false\n   */\n  this.tileCoordinates = false;\n\n  /**\n   * Gets or sets the frustum statistic text.  This property is observable.\n   * @type {String}\n   * @default ''\n   */\n  this.frustumStatisticText = false;\n\n  /**\n   * Gets or sets the selected tile information text.  This property is observable.\n   * @type {String}\n   * @default ''\n   */\n  this.tileText = \"\";\n\n  /**\n   * Gets if a primitive has been selected.  This property is observable.\n   * @type {Boolean}\n   * @default false\n   */\n  this.hasPickedPrimitive = false;\n\n  /**\n   * Gets if a tile has been selected.  This property is observable\n   * @type {Boolean}\n   * @default false\n   */\n  this.hasPickedTile = false;\n\n  /**\n   * Gets if the picking primitive command is active.  This property is observable.\n   * @type {Boolean}\n   * @default false\n   */\n  this.pickPrimitiveActive = false;\n\n  /**\n   * Gets if the picking tile command is active.  This property is observable.\n   * @type {Boolean}\n   * @default false\n   */\n  this.pickTileActive = false;\n\n  /**\n   * Gets or sets if the cesium inspector drop down is visible.  This property is observable.\n   * @type {Boolean}\n   * @default true\n   */\n  this.dropDownVisible = true;\n\n  /**\n   * Gets or sets if the general section is visible.  This property is observable.\n   * @type {Boolean}\n   * @default true\n   */\n  this.generalVisible = true;\n\n  /**\n   * Gets or sets if the primitive section is visible.  This property is observable.\n   * @type {Boolean}\n   * @default false\n   */\n  this.primitivesVisible = false;\n\n  /**\n   * Gets or sets if the terrain section is visible.  This property is observable.\n   * @type {Boolean}\n   * @default false\n   */\n  this.terrainVisible = false;\n\n  /**\n   * Gets or sets the index of the depth frustum text.  This property is observable.\n   * @type {String}\n   * @default ''\n   */\n  this.depthFrustumText = \"\";\n\n  knockout.track(this, [\n    \"frustums\",\n    \"frustumPlanes\",\n    \"performance\",\n    \"shaderCacheText\",\n    \"primitiveBoundingSphere\",\n    \"primitiveReferenceFrame\",\n    \"filterPrimitive\",\n    \"tileBoundingSphere\",\n    \"filterTile\",\n    \"wireframe\",\n    \"globeDepth\",\n    \"pickDepth\",\n    \"depthFrustum\",\n    \"suspendUpdates\",\n    \"tileCoordinates\",\n    \"frustumStatisticText\",\n    \"tileText\",\n    \"hasPickedPrimitive\",\n    \"hasPickedTile\",\n    \"pickPrimitiveActive\",\n    \"pickTileActive\",\n    \"dropDownVisible\",\n    \"generalVisible\",\n    \"primitivesVisible\",\n    \"terrainVisible\",\n    \"depthFrustumText\",\n  ]);\n\n  this._toggleDropDown = createCommand(function () {\n    that.dropDownVisible = !that.dropDownVisible;\n  });\n\n  this._toggleGeneral = createCommand(function () {\n    that.generalVisible = !that.generalVisible;\n  });\n\n  this._togglePrimitives = createCommand(function () {\n    that.primitivesVisible = !that.primitivesVisible;\n  });\n\n  this._toggleTerrain = createCommand(function () {\n    that.terrainVisible = !that.terrainVisible;\n  });\n\n  this._frustumsSubscription = knockout\n    .getObservable(this, \"frustums\")\n    .subscribe(function (val) {\n      that._scene.debugShowFrustums = val;\n      that._scene.requestRender();\n    });\n\n  this._frustumPlanesSubscription = knockout\n    .getObservable(this, \"frustumPlanes\")\n    .subscribe(function (val) {\n      that._scene.debugShowFrustumPlanes = val;\n      that._scene.requestRender();\n    });\n\n  this._performanceSubscription = knockout\n    .getObservable(this, \"performance\")\n    .subscribe(function (val) {\n      if (val) {\n        that._performanceDisplay = new PerformanceDisplay({\n          container: that._performanceContainer,\n        });\n      } else {\n        that._performanceContainer.innerHTML = \"\";\n      }\n    });\n\n  this._showPrimitiveBoundingSphere = createCommand(function () {\n    that._primitive.debugShowBoundingVolume = that.primitiveBoundingSphere;\n    that._scene.requestRender();\n    return true;\n  });\n\n  this._primitiveBoundingSphereSubscription = knockout\n    .getObservable(this, \"primitiveBoundingSphere\")\n    .subscribe(function () {\n      that._showPrimitiveBoundingSphere();\n    });\n\n  this._showPrimitiveReferenceFrame = createCommand(function () {\n    if (that.primitiveReferenceFrame) {\n      var modelMatrix = that._primitive.modelMatrix;\n      that._modelMatrixPrimitive = new DebugModelMatrixPrimitive({\n        modelMatrix: modelMatrix,\n      });\n      that._scene.primitives.add(that._modelMatrixPrimitive);\n    } else if (defined(that._modelMatrixPrimitive)) {\n      that._scene.primitives.remove(that._modelMatrixPrimitive);\n      that._modelMatrixPrimitive = undefined;\n    }\n    that._scene.requestRender();\n    return true;\n  });\n\n  this._primitiveReferenceFrameSubscription = knockout\n    .getObservable(this, \"primitiveReferenceFrame\")\n    .subscribe(function () {\n      that._showPrimitiveReferenceFrame();\n    });\n\n  this._doFilterPrimitive = createCommand(function () {\n    if (that.filterPrimitive) {\n      that._scene.debugCommandFilter = function (command) {\n        if (\n          defined(that._modelMatrixPrimitive) &&\n          command.owner === that._modelMatrixPrimitive._primitive\n        ) {\n          return true;\n        } else if (defined(that._primitive)) {\n          return (\n            command.owner === that._primitive ||\n            command.owner === that._primitive._billboardCollection ||\n            command.owner.primitive === that._primitive\n          );\n        }\n        return false;\n      };\n    } else {\n      that._scene.debugCommandFilter = undefined;\n    }\n    return true;\n  });\n\n  this._filterPrimitiveSubscription = knockout\n    .getObservable(this, \"filterPrimitive\")\n    .subscribe(function () {\n      that._doFilterPrimitive();\n      that._scene.requestRender();\n    });\n\n  this._wireframeSubscription = knockout\n    .getObservable(this, \"wireframe\")\n    .subscribe(function (val) {\n      globe._surface.tileProvider._debug.wireframe = val;\n      that._scene.requestRender();\n    });\n\n  this._globeDepthSubscription = knockout\n    .getObservable(this, \"globeDepth\")\n    .subscribe(function (val) {\n      that._scene.debugShowGlobeDepth = val;\n      that._scene.requestRender();\n    });\n\n  this._pickDepthSubscription = knockout\n    .getObservable(this, \"pickDepth\")\n    .subscribe(function (val) {\n      that._scene.debugShowPickDepth = val;\n      that._scene.requestRender();\n    });\n\n  this._depthFrustumSubscription = knockout\n    .getObservable(this, \"depthFrustum\")\n    .subscribe(function (val) {\n      that._scene.debugShowDepthFrustum = val;\n      that._scene.requestRender();\n    });\n\n  this._incrementDepthFrustum = createCommand(function () {\n    var next = that.depthFrustum + 1;\n    that.depthFrustum = boundDepthFrustum(1, that._numberOfFrustums, next);\n    that._scene.requestRender();\n    return true;\n  });\n\n  this._decrementDepthFrustum = createCommand(function () {\n    var next = that.depthFrustum - 1;\n    that.depthFrustum = boundDepthFrustum(1, that._numberOfFrustums, next);\n    that._scene.requestRender();\n    return true;\n  });\n\n  this._suspendUpdatesSubscription = knockout\n    .getObservable(this, \"suspendUpdates\")\n    .subscribe(function (val) {\n      globe._surface._debug.suspendLodUpdate = val;\n      if (!val) {\n        that.filterTile = false;\n      }\n    });\n\n  var tileBoundariesLayer;\n  this._showTileCoordinates = createCommand(function () {\n    if (that.tileCoordinates && !defined(tileBoundariesLayer)) {\n      tileBoundariesLayer = scene.imageryLayers.addImageryProvider(\n        new TileCoordinatesImageryProvider({\n          tilingScheme: scene.terrainProvider.tilingScheme,\n        })\n      );\n    } else if (!that.tileCoordinates && defined(tileBoundariesLayer)) {\n      scene.imageryLayers.remove(tileBoundariesLayer);\n      tileBoundariesLayer = undefined;\n    }\n    return true;\n  });\n\n  this._tileCoordinatesSubscription = knockout\n    .getObservable(this, \"tileCoordinates\")\n    .subscribe(function () {\n      that._showTileCoordinates();\n      that._scene.requestRender();\n    });\n\n  this._tileBoundingSphereSubscription = knockout\n    .getObservable(this, \"tileBoundingSphere\")\n    .subscribe(function () {\n      that._showTileBoundingSphere();\n      that._scene.requestRender();\n    });\n\n  this._showTileBoundingSphere = createCommand(function () {\n    if (that.tileBoundingSphere) {\n      globe._surface.tileProvider._debug.boundingSphereTile = that._tile;\n    } else {\n      globe._surface.tileProvider._debug.boundingSphereTile = undefined;\n    }\n    that._scene.requestRender();\n    return true;\n  });\n\n  this._doFilterTile = createCommand(function () {\n    if (!that.filterTile) {\n      that.suspendUpdates = false;\n    } else {\n      that.suspendUpdates = true;\n\n      globe._surface._tilesToRender = [];\n\n      if (defined(that._tile) && that._tile.renderable) {\n        globe._surface._tilesToRender.push(that._tile);\n      }\n    }\n    return true;\n  });\n\n  this._filterTileSubscription = knockout\n    .getObservable(this, \"filterTile\")\n    .subscribe(function () {\n      that.doFilterTile();\n      that._scene.requestRender();\n    });\n\n  function pickPrimitive(e) {\n    var newPick = that._scene.pick({\n      x: e.position.x,\n      y: e.position.y,\n    });\n    if (defined(newPick)) {\n      that.primitive = defined(newPick.collection)\n        ? newPick.collection\n        : newPick.primitive;\n    }\n\n    that._scene.requestRender();\n    that.pickPrimitiveActive = false;\n  }\n\n  this._pickPrimitive = createCommand(function () {\n    that.pickPrimitiveActive = !that.pickPrimitiveActive;\n  });\n\n  this._pickPrimitiveActiveSubscription = knockout\n    .getObservable(this, \"pickPrimitiveActive\")\n    .subscribe(function (val) {\n      if (val) {\n        eventHandler.setInputAction(\n          pickPrimitive,\n          ScreenSpaceEventType.LEFT_CLICK\n        );\n      } else {\n        eventHandler.removeInputAction(ScreenSpaceEventType.LEFT_CLICK);\n      }\n    });\n\n  function selectTile(e) {\n    var selectedTile;\n    var ellipsoid = globe.ellipsoid;\n\n    var ray = that._scene.camera.getPickRay(e.position, scratchPickRay);\n    var cartesian = globe.pick(ray, that._scene, scratchPickCartesian);\n\n    if (defined(cartesian)) {\n      var cartographic = ellipsoid.cartesianToCartographic(cartesian);\n      var tilesRendered =\n        globe._surface.tileProvider._tilesToRenderByTextureCount;\n      for (\n        var textureCount = 0;\n        !selectedTile && textureCount < tilesRendered.length;\n        ++textureCount\n      ) {\n        var tilesRenderedByTextureCount = tilesRendered[textureCount];\n        if (!defined(tilesRenderedByTextureCount)) {\n          continue;\n        }\n\n        for (\n          var tileIndex = 0;\n          !selectedTile && tileIndex < tilesRenderedByTextureCount.length;\n          ++tileIndex\n        ) {\n          var tile = tilesRenderedByTextureCount[tileIndex];\n          if (Rectangle.contains(tile.rectangle, cartographic)) {\n            selectedTile = tile;\n          }\n        }\n      }\n    }\n\n    that.tile = selectedTile;\n\n    that.pickTileActive = false;\n  }\n\n  this._pickTile = createCommand(function () {\n    that.pickTileActive = !that.pickTileActive;\n  });\n\n  this._pickTileActiveSubscription = knockout\n    .getObservable(this, \"pickTileActive\")\n    .subscribe(function (val) {\n      if (val) {\n        eventHandler.setInputAction(\n          selectTile,\n          ScreenSpaceEventType.LEFT_CLICK\n        );\n      } else {\n        eventHandler.removeInputAction(ScreenSpaceEventType.LEFT_CLICK);\n      }\n    });\n\n  this._removePostRenderEvent = scene.postRender.addEventListener(function () {\n    that._update();\n  });\n}\n\nObject.defineProperties(CesiumInspectorViewModel.prototype, {\n  /**\n   * Gets the scene to control.\n   * @memberof CesiumInspectorViewModel.prototype\n   *\n   * @type {Scene}\n   */\n  scene: {\n    get: function () {\n      return this._scene;\n    },\n  },\n\n  /**\n   * Gets the container of the PerformanceDisplay\n   * @memberof CesiumInspectorViewModel.prototype\n   *\n   * @type {Element}\n   */\n  performanceContainer: {\n    get: function () {\n      return this._performanceContainer;\n    },\n  },\n\n  /**\n   * Gets the command to toggle the visibility of the drop down.\n   * @memberof CesiumInspectorViewModel.prototype\n   *\n   * @type {Command}\n   */\n  toggleDropDown: {\n    get: function () {\n      return this._toggleDropDown;\n    },\n  },\n\n  /**\n   * Gets the command to toggle the visibility of a BoundingSphere for a primitive\n   * @memberof CesiumInspectorViewModel.prototype\n   *\n   * @type {Command}\n   */\n  showPrimitiveBoundingSphere: {\n    get: function () {\n      return this._showPrimitiveBoundingSphere;\n    },\n  },\n\n  /**\n   * Gets the command to toggle the visibility of a {@link DebugModelMatrixPrimitive} for the model matrix of a primitive\n   * @memberof CesiumInspectorViewModel.prototype\n   *\n   * @type {Command}\n   */\n  showPrimitiveReferenceFrame: {\n    get: function () {\n      return this._showPrimitiveReferenceFrame;\n    },\n  },\n\n  /**\n   * Gets the command to toggle a filter that renders only a selected primitive\n   * @memberof CesiumInspectorViewModel.prototype\n   *\n   * @type {Command}\n   */\n  doFilterPrimitive: {\n    get: function () {\n      return this._doFilterPrimitive;\n    },\n  },\n\n  /**\n   * Gets the command to increment the depth frustum index to be shown\n   * @memberof CesiumInspectorViewModel.prototype\n   *\n   * @type {Command}\n   */\n  incrementDepthFrustum: {\n    get: function () {\n      return this._incrementDepthFrustum;\n    },\n  },\n\n  /**\n   * Gets the command to decrement the depth frustum index to be shown\n   * @memberof CesiumInspectorViewModel.prototype\n   *\n   * @type {Command}\n   */\n  decrementDepthFrustum: {\n    get: function () {\n      return this._decrementDepthFrustum;\n    },\n  },\n\n  /**\n   * Gets the command to toggle the visibility of tile coordinates\n   * @memberof CesiumInspectorViewModel.prototype\n   *\n   * @type {Command}\n   */\n  showTileCoordinates: {\n    get: function () {\n      return this._showTileCoordinates;\n    },\n  },\n\n  /**\n   * Gets the command to toggle the visibility of a BoundingSphere for a selected tile\n   * @memberof CesiumInspectorViewModel.prototype\n   *\n   * @type {Command}\n   */\n  showTileBoundingSphere: {\n    get: function () {\n      return this._showTileBoundingSphere;\n    },\n  },\n\n  /**\n   * Gets the command to toggle a filter that renders only a selected tile\n   * @memberof CesiumInspectorViewModel.prototype\n   *\n   * @type {Command}\n   */\n  doFilterTile: {\n    get: function () {\n      return this._doFilterTile;\n    },\n  },\n\n  /**\n   * Gets the command to expand and collapse the general section\n   * @memberof CesiumInspectorViewModel.prototype\n   *\n   * @type {Command}\n   */\n  toggleGeneral: {\n    get: function () {\n      return this._toggleGeneral;\n    },\n  },\n\n  /**\n   * Gets the command to expand and collapse the primitives section\n   * @memberof CesiumInspectorViewModel.prototype\n   *\n   * @type {Command}\n   */\n  togglePrimitives: {\n    get: function () {\n      return this._togglePrimitives;\n    },\n  },\n\n  /**\n   * Gets the command to expand and collapse the terrain section\n   * @memberof CesiumInspectorViewModel.prototype\n   *\n   * @type {Command}\n   */\n  toggleTerrain: {\n    get: function () {\n      return this._toggleTerrain;\n    },\n  },\n\n  /**\n   * Gets the command to pick a primitive\n   * @memberof CesiumInspectorViewModel.prototype\n   *\n   * @type {Command}\n   */\n  pickPrimitive: {\n    get: function () {\n      return this._pickPrimitive;\n    },\n  },\n\n  /**\n   * Gets the command to pick a tile\n   * @memberof CesiumInspectorViewModel.prototype\n   *\n   * @type {Command}\n   */\n  pickTile: {\n    get: function () {\n      return this._pickTile;\n    },\n  },\n\n  /**\n   * Gets the command to pick a tile\n   * @memberof CesiumInspectorViewModel.prototype\n   *\n   * @type {Command}\n   */\n  selectParent: {\n    get: function () {\n      var that = this;\n      return createCommand(function () {\n        that.tile = that.tile.parent;\n      });\n    },\n  },\n\n  /**\n   * Gets the command to pick a tile\n   * @memberof CesiumInspectorViewModel.prototype\n   *\n   * @type {Command}\n   */\n  selectNW: {\n    get: function () {\n      var that = this;\n      return createCommand(function () {\n        that.tile = that.tile.northwestChild;\n      });\n    },\n  },\n\n  /**\n   * Gets the command to pick a tile\n   * @memberof CesiumInspectorViewModel.prototype\n   *\n   * @type {Command}\n   */\n  selectNE: {\n    get: function () {\n      var that = this;\n      return createCommand(function () {\n        that.tile = that.tile.northeastChild;\n      });\n    },\n  },\n\n  /**\n   * Gets the command to pick a tile\n   * @memberof CesiumInspectorViewModel.prototype\n   *\n   * @type {Command}\n   */\n  selectSW: {\n    get: function () {\n      var that = this;\n      return createCommand(function () {\n        that.tile = that.tile.southwestChild;\n      });\n    },\n  },\n\n  /**\n   * Gets the command to pick a tile\n   * @memberof CesiumInspectorViewModel.prototype\n   *\n   * @type {Command}\n   */\n  selectSE: {\n    get: function () {\n      var that = this;\n      return createCommand(function () {\n        that.tile = that.tile.southeastChild;\n      });\n    },\n  },\n\n  /**\n   * Gets or sets the current selected primitive\n   * @memberof CesiumInspectorViewModel.prototype\n   *\n   * @type {Command}\n   */\n  primitive: {\n    get: function () {\n      return this._primitive;\n    },\n    set: function (newPrimitive) {\n      var oldPrimitive = this._primitive;\n      if (newPrimitive !== oldPrimitive) {\n        this.hasPickedPrimitive = true;\n        if (defined(oldPrimitive)) {\n          oldPrimitive.debugShowBoundingVolume = false;\n        }\n        this._scene.debugCommandFilter = undefined;\n        if (defined(this._modelMatrixPrimitive)) {\n          this._scene.primitives.remove(this._modelMatrixPrimitive);\n          this._modelMatrixPrimitive = undefined;\n        }\n        this._primitive = newPrimitive;\n        newPrimitive.show = false;\n        setTimeout(function () {\n          newPrimitive.show = true;\n        }, 50);\n        this.showPrimitiveBoundingSphere();\n        this.showPrimitiveReferenceFrame();\n        this.doFilterPrimitive();\n      }\n    },\n  },\n\n  /**\n   * Gets or sets the current selected tile\n   * @memberof CesiumInspectorViewModel.prototype\n   *\n   * @type {Command}\n   */\n  tile: {\n    get: function () {\n      return this._tile;\n    },\n    set: function (newTile) {\n      if (defined(newTile)) {\n        this.hasPickedTile = true;\n        var oldTile = this._tile;\n        if (newTile !== oldTile) {\n          this.tileText =\n            \"L: \" + newTile.level + \" X: \" + newTile.x + \" Y: \" + newTile.y;\n          this.tileText +=\n            \"<br>SW corner: \" +\n            newTile.rectangle.west +\n            \", \" +\n            newTile.rectangle.south;\n          this.tileText +=\n            \"<br>NE corner: \" +\n            newTile.rectangle.east +\n            \", \" +\n            newTile.rectangle.north;\n          var data = newTile.data;\n          if (defined(data) && defined(data.tileBoundingRegion)) {\n            this.tileText +=\n              \"<br>Min: \" +\n              data.tileBoundingRegion.minimumHeight +\n              \" Max: \" +\n              data.tileBoundingRegion.maximumHeight;\n          } else {\n            this.tileText += \"<br>(Tile is not loaded)\";\n          }\n        }\n        this._tile = newTile;\n        this.showTileBoundingSphere();\n        this.doFilterTile();\n      } else {\n        this.hasPickedTile = false;\n        this._tile = undefined;\n      }\n    },\n  },\n});\n\n/**\n * Updates the view model\n * @private\n */\nCesiumInspectorViewModel.prototype._update = function () {\n  if (this.frustums) {\n    this.frustumStatisticText = frustumStatisticsToString(\n      this._scene.debugFrustumStatistics\n    );\n  }\n\n  // Determine the number of frustums being used.\n  var numberOfFrustums = this._scene.numberOfFrustums;\n  this._numberOfFrustums = numberOfFrustums;\n  // Bound the frustum to be displayed.\n  this.depthFrustum = boundDepthFrustum(1, numberOfFrustums, this.depthFrustum);\n  // Update the displayed text.\n  this.depthFrustumText = this.depthFrustum + \" of \" + numberOfFrustums;\n\n  if (this.performance) {\n    this._performanceDisplay.update();\n  }\n  if (this.primitiveReferenceFrame) {\n    this._modelMatrixPrimitive.modelMatrix = this._primitive.modelMatrix;\n  }\n\n  this.shaderCacheText =\n    \"Cached shaders: \" + this._scene.context.shaderCache.numberOfShaders;\n};\n\n/**\n * @returns {Boolean} true if the object has been destroyed, false otherwise.\n */\nCesiumInspectorViewModel.prototype.isDestroyed = function () {\n  return false;\n};\n\n/**\n * Destroys the widget.  Should be called if permanently\n * removing the widget from layout.\n */\nCesiumInspectorViewModel.prototype.destroy = function () {\n  this._eventHandler.destroy();\n  this._removePostRenderEvent();\n  this._frustumsSubscription.dispose();\n  this._frustumPlanesSubscription.dispose();\n  this._performanceSubscription.dispose();\n  this._primitiveBoundingSphereSubscription.dispose();\n  this._primitiveReferenceFrameSubscription.dispose();\n  this._filterPrimitiveSubscription.dispose();\n  this._wireframeSubscription.dispose();\n  this._globeDepthSubscription.dispose();\n  this._pickDepthSubscription.dispose();\n  this._depthFrustumSubscription.dispose();\n  this._suspendUpdatesSubscription.dispose();\n  this._tileCoordinatesSubscription.dispose();\n  this._tileBoundingSphereSubscription.dispose();\n  this._filterTileSubscription.dispose();\n  this._pickPrimitiveActiveSubscription.dispose();\n  this._pickTileActiveSubscription.dispose();\n  return destroyObject(this);\n};\nexport default CesiumInspectorViewModel;\n"]},"metadata":{},"sourceType":"module"}
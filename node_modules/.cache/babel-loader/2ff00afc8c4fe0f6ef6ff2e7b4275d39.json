{"ast":null,"code":"import defined from \"./defined.js\";\nimport IauOrientationParameters from \"./IauOrientationParameters.js\";\nimport JulianDate from \"./JulianDate.js\";\nimport CesiumMath from \"./Math.js\";\nimport TimeConstants from \"./TimeConstants.js\";\n/**\n * This is a collection of the orientation information available for central bodies.\n * The data comes from the Report of the IAU/IAG Working Group on Cartographic\n * Coordinates and Rotational Elements: 2000.\n *\n * @exports Iau2000Orientation\n *\n * @private\n */\n\nvar Iau2000Orientation = {};\nvar TdtMinusTai = 32.184;\nvar J2000d = 2451545.0;\nvar c1 = -0.0529921;\nvar c2 = -0.1059842;\nvar c3 = 13.0120009;\nvar c4 = 13.3407154;\nvar c5 = 0.9856003;\nvar c6 = 26.4057084;\nvar c7 = 13.064993;\nvar c8 = 0.3287146;\nvar c9 = 1.7484877;\nvar c10 = -0.1589763;\nvar c11 = 0.0036096;\nvar c12 = 0.1643573;\nvar c13 = 12.9590088;\nvar dateTT = new JulianDate();\n/**\n * Compute the orientation parameters for the Moon.\n *\n * @param {JulianDate} [date=JulianDate.now()] The date to evaluate the parameters.\n * @param {IauOrientationParameters} [result] The object onto which to store the result.\n * @returns {IauOrientationParameters} The modified result parameter or a new instance representing the orientation of the Earth's Moon.\n */\n\nIau2000Orientation.ComputeMoon = function (date, result) {\n  if (!defined(date)) {\n    date = JulianDate.now();\n  }\n\n  dateTT = JulianDate.addSeconds(date, TdtMinusTai, dateTT);\n  var d = JulianDate.totalDays(dateTT) - J2000d;\n  var T = d / TimeConstants.DAYS_PER_JULIAN_CENTURY;\n  var E1 = (125.045 + c1 * d) * CesiumMath.RADIANS_PER_DEGREE;\n  var E2 = (250.089 + c2 * d) * CesiumMath.RADIANS_PER_DEGREE;\n  var E3 = (260.008 + c3 * d) * CesiumMath.RADIANS_PER_DEGREE;\n  var E4 = (176.625 + c4 * d) * CesiumMath.RADIANS_PER_DEGREE;\n  var E5 = (357.529 + c5 * d) * CesiumMath.RADIANS_PER_DEGREE;\n  var E6 = (311.589 + c6 * d) * CesiumMath.RADIANS_PER_DEGREE;\n  var E7 = (134.963 + c7 * d) * CesiumMath.RADIANS_PER_DEGREE;\n  var E8 = (276.617 + c8 * d) * CesiumMath.RADIANS_PER_DEGREE;\n  var E9 = (34.226 + c9 * d) * CesiumMath.RADIANS_PER_DEGREE;\n  var E10 = (15.134 + c10 * d) * CesiumMath.RADIANS_PER_DEGREE;\n  var E11 = (119.743 + c11 * d) * CesiumMath.RADIANS_PER_DEGREE;\n  var E12 = (239.961 + c12 * d) * CesiumMath.RADIANS_PER_DEGREE;\n  var E13 = (25.053 + c13 * d) * CesiumMath.RADIANS_PER_DEGREE;\n  var sinE1 = Math.sin(E1);\n  var sinE2 = Math.sin(E2);\n  var sinE3 = Math.sin(E3);\n  var sinE4 = Math.sin(E4);\n  var sinE5 = Math.sin(E5);\n  var sinE6 = Math.sin(E6);\n  var sinE7 = Math.sin(E7);\n  var sinE8 = Math.sin(E8);\n  var sinE9 = Math.sin(E9);\n  var sinE10 = Math.sin(E10);\n  var sinE11 = Math.sin(E11);\n  var sinE12 = Math.sin(E12);\n  var sinE13 = Math.sin(E13);\n  var cosE1 = Math.cos(E1);\n  var cosE2 = Math.cos(E2);\n  var cosE3 = Math.cos(E3);\n  var cosE4 = Math.cos(E4);\n  var cosE5 = Math.cos(E5);\n  var cosE6 = Math.cos(E6);\n  var cosE7 = Math.cos(E7);\n  var cosE8 = Math.cos(E8);\n  var cosE9 = Math.cos(E9);\n  var cosE10 = Math.cos(E10);\n  var cosE11 = Math.cos(E11);\n  var cosE12 = Math.cos(E12);\n  var cosE13 = Math.cos(E13);\n  var rightAscension = (269.9949 + 0.0031 * T - 3.8787 * sinE1 - 0.1204 * sinE2 + 0.07 * sinE3 - 0.0172 * sinE4 + 0.0072 * sinE6 - 0.0052 * sinE10 + 0.0043 * sinE13) * CesiumMath.RADIANS_PER_DEGREE;\n  var declination = (66.5392 + 0.013 * T + 1.5419 * cosE1 + 0.0239 * cosE2 - 0.0278 * cosE3 + 0.0068 * cosE4 - 0.0029 * cosE6 + 0.0009 * cosE7 + 0.0008 * cosE10 - 0.0009 * cosE13) * CesiumMath.RADIANS_PER_DEGREE;\n  var rotation = (38.3213 + 13.17635815 * d - 1.4e-12 * d * d + 3.561 * sinE1 + 0.1208 * sinE2 - 0.0642 * sinE3 + 0.0158 * sinE4 + 0.0252 * sinE5 - 0.0066 * sinE6 - 0.0047 * sinE7 - 0.0046 * sinE8 + 0.0028 * sinE9 + 0.0052 * sinE10 + 0.004 * sinE11 + 0.0019 * sinE12 - 0.0044 * sinE13) * CesiumMath.RADIANS_PER_DEGREE;\n  var rotationRate = (13.17635815 - 1.4e-12 * (2.0 * d) + 3.561 * cosE1 * c1 + 0.1208 * cosE2 * c2 - 0.0642 * cosE3 * c3 + 0.0158 * cosE4 * c4 + 0.0252 * cosE5 * c5 - 0.0066 * cosE6 * c6 - 0.0047 * cosE7 * c7 - 0.0046 * cosE8 * c8 + 0.0028 * cosE9 * c9 + 0.0052 * cosE10 * c10 + 0.004 * cosE11 * c11 + 0.0019 * cosE12 * c12 - 0.0044 * cosE13 * c13) / 86400.0 * CesiumMath.RADIANS_PER_DEGREE;\n\n  if (!defined(result)) {\n    result = new IauOrientationParameters();\n  }\n\n  result.rightAscension = rightAscension;\n  result.declination = declination;\n  result.rotation = rotation;\n  result.rotationRate = rotationRate;\n  return result;\n};\n\nexport default Iau2000Orientation;","map":{"version":3,"sources":["C:/Users/passa/Desktop/WaterLevelReact/node_modules/cesium/Source/Core/Iau2000Orientation.js"],"names":["defined","IauOrientationParameters","JulianDate","CesiumMath","TimeConstants","Iau2000Orientation","TdtMinusTai","J2000d","c1","c2","c3","c4","c5","c6","c7","c8","c9","c10","c11","c12","c13","dateTT","ComputeMoon","date","result","now","addSeconds","d","totalDays","T","DAYS_PER_JULIAN_CENTURY","E1","RADIANS_PER_DEGREE","E2","E3","E4","E5","E6","E7","E8","E9","E10","E11","E12","E13","sinE1","Math","sin","sinE2","sinE3","sinE4","sinE5","sinE6","sinE7","sinE8","sinE9","sinE10","sinE11","sinE12","sinE13","cosE1","cos","cosE2","cosE3","cosE4","cosE5","cosE6","cosE7","cosE8","cosE9","cosE10","cosE11","cosE12","cosE13","rightAscension","declination","rotation","rotationRate"],"mappings":"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","sourcesContent":["import defined from \"./defined.js\";\nimport IauOrientationParameters from \"./IauOrientationParameters.js\";\nimport JulianDate from \"./JulianDate.js\";\nimport CesiumMath from \"./Math.js\";\nimport TimeConstants from \"./TimeConstants.js\";\n\n/**\n * This is a collection of the orientation information available for central bodies.\n * The data comes from the Report of the IAU/IAG Working Group on Cartographic\n * Coordinates and Rotational Elements: 2000.\n *\n * @exports Iau2000Orientation\n *\n * @private\n */\nvar Iau2000Orientation = {};\n\nvar TdtMinusTai = 32.184;\nvar J2000d = 2451545.0;\n\nvar c1 = -0.0529921;\nvar c2 = -0.1059842;\nvar c3 = 13.0120009;\nvar c4 = 13.3407154;\nvar c5 = 0.9856003;\nvar c6 = 26.4057084;\nvar c7 = 13.064993;\nvar c8 = 0.3287146;\nvar c9 = 1.7484877;\nvar c10 = -0.1589763;\nvar c11 = 0.0036096;\nvar c12 = 0.1643573;\nvar c13 = 12.9590088;\nvar dateTT = new JulianDate();\n\n/**\n * Compute the orientation parameters for the Moon.\n *\n * @param {JulianDate} [date=JulianDate.now()] The date to evaluate the parameters.\n * @param {IauOrientationParameters} [result] The object onto which to store the result.\n * @returns {IauOrientationParameters} The modified result parameter or a new instance representing the orientation of the Earth's Moon.\n */\nIau2000Orientation.ComputeMoon = function (date, result) {\n  if (!defined(date)) {\n    date = JulianDate.now();\n  }\n\n  dateTT = JulianDate.addSeconds(date, TdtMinusTai, dateTT);\n  var d = JulianDate.totalDays(dateTT) - J2000d;\n  var T = d / TimeConstants.DAYS_PER_JULIAN_CENTURY;\n\n  var E1 = (125.045 + c1 * d) * CesiumMath.RADIANS_PER_DEGREE;\n  var E2 = (250.089 + c2 * d) * CesiumMath.RADIANS_PER_DEGREE;\n  var E3 = (260.008 + c3 * d) * CesiumMath.RADIANS_PER_DEGREE;\n  var E4 = (176.625 + c4 * d) * CesiumMath.RADIANS_PER_DEGREE;\n  var E5 = (357.529 + c5 * d) * CesiumMath.RADIANS_PER_DEGREE;\n  var E6 = (311.589 + c6 * d) * CesiumMath.RADIANS_PER_DEGREE;\n  var E7 = (134.963 + c7 * d) * CesiumMath.RADIANS_PER_DEGREE;\n  var E8 = (276.617 + c8 * d) * CesiumMath.RADIANS_PER_DEGREE;\n  var E9 = (34.226 + c9 * d) * CesiumMath.RADIANS_PER_DEGREE;\n  var E10 = (15.134 + c10 * d) * CesiumMath.RADIANS_PER_DEGREE;\n  var E11 = (119.743 + c11 * d) * CesiumMath.RADIANS_PER_DEGREE;\n  var E12 = (239.961 + c12 * d) * CesiumMath.RADIANS_PER_DEGREE;\n  var E13 = (25.053 + c13 * d) * CesiumMath.RADIANS_PER_DEGREE;\n\n  var sinE1 = Math.sin(E1);\n  var sinE2 = Math.sin(E2);\n  var sinE3 = Math.sin(E3);\n  var sinE4 = Math.sin(E4);\n  var sinE5 = Math.sin(E5);\n  var sinE6 = Math.sin(E6);\n  var sinE7 = Math.sin(E7);\n  var sinE8 = Math.sin(E8);\n  var sinE9 = Math.sin(E9);\n  var sinE10 = Math.sin(E10);\n  var sinE11 = Math.sin(E11);\n  var sinE12 = Math.sin(E12);\n  var sinE13 = Math.sin(E13);\n\n  var cosE1 = Math.cos(E1);\n  var cosE2 = Math.cos(E2);\n  var cosE3 = Math.cos(E3);\n  var cosE4 = Math.cos(E4);\n  var cosE5 = Math.cos(E5);\n  var cosE6 = Math.cos(E6);\n  var cosE7 = Math.cos(E7);\n  var cosE8 = Math.cos(E8);\n  var cosE9 = Math.cos(E9);\n  var cosE10 = Math.cos(E10);\n  var cosE11 = Math.cos(E11);\n  var cosE12 = Math.cos(E12);\n  var cosE13 = Math.cos(E13);\n\n  var rightAscension =\n    (269.9949 +\n      0.0031 * T -\n      3.8787 * sinE1 -\n      0.1204 * sinE2 +\n      0.07 * sinE3 -\n      0.0172 * sinE4 +\n      0.0072 * sinE6 -\n      0.0052 * sinE10 +\n      0.0043 * sinE13) *\n    CesiumMath.RADIANS_PER_DEGREE;\n  var declination =\n    (66.5392 +\n      0.013 * T +\n      1.5419 * cosE1 +\n      0.0239 * cosE2 -\n      0.0278 * cosE3 +\n      0.0068 * cosE4 -\n      0.0029 * cosE6 +\n      0.0009 * cosE7 +\n      0.0008 * cosE10 -\n      0.0009 * cosE13) *\n    CesiumMath.RADIANS_PER_DEGREE;\n  var rotation =\n    (38.3213 +\n      13.17635815 * d -\n      1.4e-12 * d * d +\n      3.561 * sinE1 +\n      0.1208 * sinE2 -\n      0.0642 * sinE3 +\n      0.0158 * sinE4 +\n      0.0252 * sinE5 -\n      0.0066 * sinE6 -\n      0.0047 * sinE7 -\n      0.0046 * sinE8 +\n      0.0028 * sinE9 +\n      0.0052 * sinE10 +\n      0.004 * sinE11 +\n      0.0019 * sinE12 -\n      0.0044 * sinE13) *\n    CesiumMath.RADIANS_PER_DEGREE;\n\n  var rotationRate =\n    ((13.17635815 -\n      1.4e-12 * (2.0 * d) +\n      3.561 * cosE1 * c1 +\n      0.1208 * cosE2 * c2 -\n      0.0642 * cosE3 * c3 +\n      0.0158 * cosE4 * c4 +\n      0.0252 * cosE5 * c5 -\n      0.0066 * cosE6 * c6 -\n      0.0047 * cosE7 * c7 -\n      0.0046 * cosE8 * c8 +\n      0.0028 * cosE9 * c9 +\n      0.0052 * cosE10 * c10 +\n      0.004 * cosE11 * c11 +\n      0.0019 * cosE12 * c12 -\n      0.0044 * cosE13 * c13) /\n      86400.0) *\n    CesiumMath.RADIANS_PER_DEGREE;\n\n  if (!defined(result)) {\n    result = new IauOrientationParameters();\n  }\n\n  result.rightAscension = rightAscension;\n  result.declination = declination;\n  result.rotation = rotation;\n  result.rotationRate = rotationRate;\n\n  return result;\n};\nexport default Iau2000Orientation;\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import CesiumMath from \"../Core/Math.js\";\n/**\n * Defines different modes for blending between a target color and a primitive's source color.\n *\n * HIGHLIGHT multiplies the source color by the target color\n * REPLACE replaces the source color with the target color\n * MIX blends the source color and target color together\n *\n * @exports ColorBlendMode\n *\n * @see Model.colorBlendMode\n */\n\nvar ColorBlendMode = {\n  HIGHLIGHT: 0,\n  REPLACE: 1,\n  MIX: 2\n};\n/**\n * @private\n */\n\nColorBlendMode.getColorBlend = function (colorBlendMode, colorBlendAmount) {\n  if (colorBlendMode === ColorBlendMode.HIGHLIGHT) {\n    return 0.0;\n  } else if (colorBlendMode === ColorBlendMode.REPLACE) {\n    return 1.0;\n  } else if (colorBlendMode === ColorBlendMode.MIX) {\n    // The value 0.0 is reserved for highlight, so clamp to just above 0.0.\n    return CesiumMath.clamp(colorBlendAmount, CesiumMath.EPSILON4, 1.0);\n  }\n};\n\nexport default Object.freeze(ColorBlendMode);","map":{"version":3,"sources":["C:/Users/passa/Desktop/WaterDeployTrial/node_modules/cesium/Source/Scene/ColorBlendMode.js"],"names":["CesiumMath","ColorBlendMode","HIGHLIGHT","REPLACE","MIX","getColorBlend","colorBlendMode","colorBlendAmount","clamp","EPSILON4","Object","freeze"],"mappings":"AAAA,OAAOA,UAAP,MAAuB,iBAAvB;AAEA;;;;;;;;;;;;AAWA,IAAIC,cAAc,GAAG;AACnBC,EAAAA,SAAS,EAAE,CADQ;AAEnBC,EAAAA,OAAO,EAAE,CAFU;AAGnBC,EAAAA,GAAG,EAAE;AAHc,CAArB;AAMA;;;;AAGAH,cAAc,CAACI,aAAf,GAA+B,UAAUC,cAAV,EAA0BC,gBAA1B,EAA4C;AACzE,MAAID,cAAc,KAAKL,cAAc,CAACC,SAAtC,EAAiD;AAC/C,WAAO,GAAP;AACD,GAFD,MAEO,IAAII,cAAc,KAAKL,cAAc,CAACE,OAAtC,EAA+C;AACpD,WAAO,GAAP;AACD,GAFM,MAEA,IAAIG,cAAc,KAAKL,cAAc,CAACG,GAAtC,EAA2C;AAChD;AACA,WAAOJ,UAAU,CAACQ,KAAX,CAAiBD,gBAAjB,EAAmCP,UAAU,CAACS,QAA9C,EAAwD,GAAxD,CAAP;AACD;AACF,CATD;;AAUA,eAAeC,MAAM,CAACC,MAAP,CAAcV,cAAd,CAAf","sourcesContent":["import CesiumMath from \"../Core/Math.js\";\n\n/**\n * Defines different modes for blending between a target color and a primitive's source color.\n *\n * HIGHLIGHT multiplies the source color by the target color\n * REPLACE replaces the source color with the target color\n * MIX blends the source color and target color together\n *\n * @exports ColorBlendMode\n *\n * @see Model.colorBlendMode\n */\nvar ColorBlendMode = {\n  HIGHLIGHT: 0,\n  REPLACE: 1,\n  MIX: 2,\n};\n\n/**\n * @private\n */\nColorBlendMode.getColorBlend = function (colorBlendMode, colorBlendAmount) {\n  if (colorBlendMode === ColorBlendMode.HIGHLIGHT) {\n    return 0.0;\n  } else if (colorBlendMode === ColorBlendMode.REPLACE) {\n    return 1.0;\n  } else if (colorBlendMode === ColorBlendMode.MIX) {\n    // The value 0.0 is reserved for highlight, so clamp to just above 0.0.\n    return CesiumMath.clamp(colorBlendAmount, CesiumMath.EPSILON4, 1.0);\n  }\n};\nexport default Object.freeze(ColorBlendMode);\n"]},"metadata":{},"sourceType":"module"}
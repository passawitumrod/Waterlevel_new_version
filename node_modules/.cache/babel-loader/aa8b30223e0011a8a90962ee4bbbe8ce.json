{"ast":null,"code":"import Cartesian2 from \"../Core/Cartesian2.js\";\nimport Cartesian3 from \"../Core/Cartesian3.js\";\nimport Cartesian4 from \"../Core/Cartesian4.js\";\nimport Color from \"../Core/Color.js\";\nimport defined from \"../Core/defined.js\";\nimport DeveloperError from \"../Core/DeveloperError.js\";\nimport Matrix2 from \"../Core/Matrix2.js\";\nimport Matrix3 from \"../Core/Matrix3.js\";\nimport Matrix4 from \"../Core/Matrix4.js\";\nimport RuntimeError from \"../Core/RuntimeError.js\";\n/**\n * @private\n * @constructor\n */\n\nfunction createUniformArray(gl, activeUniform, uniformName, locations) {\n  switch (activeUniform.type) {\n    case gl.FLOAT:\n      return new UniformArrayFloat(gl, activeUniform, uniformName, locations);\n\n    case gl.FLOAT_VEC2:\n      return new UniformArrayFloatVec2(gl, activeUniform, uniformName, locations);\n\n    case gl.FLOAT_VEC3:\n      return new UniformArrayFloatVec3(gl, activeUniform, uniformName, locations);\n\n    case gl.FLOAT_VEC4:\n      return new UniformArrayFloatVec4(gl, activeUniform, uniformName, locations);\n\n    case gl.SAMPLER_2D:\n    case gl.SAMPLER_CUBE:\n      return new UniformArraySampler(gl, activeUniform, uniformName, locations);\n\n    case gl.INT:\n    case gl.BOOL:\n      return new UniformArrayInt(gl, activeUniform, uniformName, locations);\n\n    case gl.INT_VEC2:\n    case gl.BOOL_VEC2:\n      return new UniformArrayIntVec2(gl, activeUniform, uniformName, locations);\n\n    case gl.INT_VEC3:\n    case gl.BOOL_VEC3:\n      return new UniformArrayIntVec3(gl, activeUniform, uniformName, locations);\n\n    case gl.INT_VEC4:\n    case gl.BOOL_VEC4:\n      return new UniformArrayIntVec4(gl, activeUniform, uniformName, locations);\n\n    case gl.FLOAT_MAT2:\n      return new UniformArrayMat2(gl, activeUniform, uniformName, locations);\n\n    case gl.FLOAT_MAT3:\n      return new UniformArrayMat3(gl, activeUniform, uniformName, locations);\n\n    case gl.FLOAT_MAT4:\n      return new UniformArrayMat4(gl, activeUniform, uniformName, locations);\n\n    default:\n      throw new RuntimeError(\"Unrecognized uniform type: \" + activeUniform.type + ' for uniform \"' + uniformName + '\".');\n  }\n}\n/**\n * @private\n * @constructor\n */\n\n\nfunction UniformArrayFloat(gl, activeUniform, uniformName, locations) {\n  var length = locations.length;\n  /**\n   * @type {String}\n   * @readonly\n   */\n\n  this.name = uniformName;\n  this.value = new Array(length);\n  this._value = new Float32Array(length);\n  this._gl = gl;\n  this._location = locations[0];\n}\n\nUniformArrayFloat.prototype.set = function () {\n  var value = this.value;\n  var length = value.length;\n  var arraybuffer = this._value;\n  var changed = false;\n\n  for (var i = 0; i < length; ++i) {\n    var v = value[i];\n\n    if (v !== arraybuffer[i]) {\n      arraybuffer[i] = v;\n      changed = true;\n    }\n  }\n\n  if (changed) {\n    this._gl.uniform1fv(this._location, arraybuffer);\n  }\n}; ///////////////////////////////////////////////////////////////////////////\n\n/**\n * @private\n * @constructor\n */\n\n\nfunction UniformArrayFloatVec2(gl, activeUniform, uniformName, locations) {\n  var length = locations.length;\n  /**\n   * @type {String}\n   * @readonly\n   */\n\n  this.name = uniformName;\n  this.value = new Array(length);\n  this._value = new Float32Array(length * 2);\n  this._gl = gl;\n  this._location = locations[0];\n}\n\nUniformArrayFloatVec2.prototype.set = function () {\n  var value = this.value;\n  var length = value.length;\n  var arraybuffer = this._value;\n  var changed = false;\n  var j = 0;\n\n  for (var i = 0; i < length; ++i) {\n    var v = value[i];\n\n    if (!Cartesian2.equalsArray(v, arraybuffer, j)) {\n      Cartesian2.pack(v, arraybuffer, j);\n      changed = true;\n    }\n\n    j += 2;\n  }\n\n  if (changed) {\n    this._gl.uniform2fv(this._location, arraybuffer);\n  }\n}; ///////////////////////////////////////////////////////////////////////////\n\n/**\n * @private\n * @constructor\n */\n\n\nfunction UniformArrayFloatVec3(gl, activeUniform, uniformName, locations) {\n  var length = locations.length;\n  /**\n   * @type {String}\n   * @readonly\n   */\n\n  this.name = uniformName;\n  this.value = new Array(length);\n  this._value = new Float32Array(length * 3);\n  this._gl = gl;\n  this._location = locations[0];\n}\n\nUniformArrayFloatVec3.prototype.set = function () {\n  var value = this.value;\n  var length = value.length;\n  var arraybuffer = this._value;\n  var changed = false;\n  var j = 0;\n\n  for (var i = 0; i < length; ++i) {\n    var v = value[i];\n\n    if (defined(v.red)) {\n      if (v.red !== arraybuffer[j] || v.green !== arraybuffer[j + 1] || v.blue !== arraybuffer[j + 2]) {\n        arraybuffer[j] = v.red;\n        arraybuffer[j + 1] = v.green;\n        arraybuffer[j + 2] = v.blue;\n        changed = true;\n      }\n    } else if (defined(v.x)) {\n      if (!Cartesian3.equalsArray(v, arraybuffer, j)) {\n        Cartesian3.pack(v, arraybuffer, j);\n        changed = true;\n      }\n    } else {\n      //>>includeStart('debug', pragmas.debug);\n      throw new DeveloperError(\"Invalid vec3 value.\"); //>>includeEnd('debug');\n    }\n\n    j += 3;\n  }\n\n  if (changed) {\n    this._gl.uniform3fv(this._location, arraybuffer);\n  }\n}; ///////////////////////////////////////////////////////////////////////////\n\n/**\n * @private\n * @constructor\n */\n\n\nfunction UniformArrayFloatVec4(gl, activeUniform, uniformName, locations) {\n  var length = locations.length;\n  /**\n   * @type {String}\n   * @readonly\n   */\n\n  this.name = uniformName;\n  this.value = new Array(length);\n  this._value = new Float32Array(length * 4);\n  this._gl = gl;\n  this._location = locations[0];\n}\n\nUniformArrayFloatVec4.prototype.set = function () {\n  // PERFORMANCE_IDEA: if it is a common case that only a few elements\n  // in a uniform array change, we could use heuristics to determine\n  // when it is better to call uniform4f for each element that changed\n  // vs. call uniform4fv once to set the entire array.  This applies\n  // to all uniform array types, not just vec4.  We might not care\n  // once we have uniform buffers since that will be the fast path.\n  // PERFORMANCE_IDEA: Micro-optimization (I bet it works though):\n  // As soon as changed is true, break into a separate loop that\n  // does the copy without the equals check.\n  var value = this.value;\n  var length = value.length;\n  var arraybuffer = this._value;\n  var changed = false;\n  var j = 0;\n\n  for (var i = 0; i < length; ++i) {\n    var v = value[i];\n\n    if (defined(v.red)) {\n      if (!Color.equalsArray(v, arraybuffer, j)) {\n        Color.pack(v, arraybuffer, j);\n        changed = true;\n      }\n    } else if (defined(v.x)) {\n      if (!Cartesian4.equalsArray(v, arraybuffer, j)) {\n        Cartesian4.pack(v, arraybuffer, j);\n        changed = true;\n      }\n    } else {\n      //>>includeStart('debug', pragmas.debug);\n      throw new DeveloperError(\"Invalid vec4 value.\"); //>>includeEnd('debug');\n    }\n\n    j += 4;\n  }\n\n  if (changed) {\n    this._gl.uniform4fv(this._location, arraybuffer);\n  }\n}; ///////////////////////////////////////////////////////////////////////////\n\n/**\n * @private\n * @constructor\n */\n\n\nfunction UniformArraySampler(gl, activeUniform, uniformName, locations) {\n  var length = locations.length;\n  /**\n   * @type {String}\n   * @readonly\n   */\n\n  this.name = uniformName;\n  this.value = new Array(length);\n  this._value = new Float32Array(length);\n  this._gl = gl;\n  this._locations = locations;\n  this.textureUnitIndex = undefined;\n}\n\nUniformArraySampler.prototype.set = function () {\n  var gl = this._gl;\n  var textureUnitIndex = gl.TEXTURE0 + this.textureUnitIndex;\n  var value = this.value;\n  var length = value.length;\n\n  for (var i = 0; i < length; ++i) {\n    var v = value[i];\n    gl.activeTexture(textureUnitIndex + i);\n    gl.bindTexture(v._target, v._texture);\n  }\n};\n\nUniformArraySampler.prototype._setSampler = function (textureUnitIndex) {\n  this.textureUnitIndex = textureUnitIndex;\n  var locations = this._locations;\n  var length = locations.length;\n\n  for (var i = 0; i < length; ++i) {\n    var index = textureUnitIndex + i;\n\n    this._gl.uniform1i(locations[i], index);\n  }\n\n  return textureUnitIndex + length;\n}; ///////////////////////////////////////////////////////////////////////////\n\n/**\n * @private\n * @constructor\n */\n\n\nfunction UniformArrayInt(gl, activeUniform, uniformName, locations) {\n  var length = locations.length;\n  /**\n   * @type {String}\n   * @readonly\n   */\n\n  this.name = uniformName;\n  this.value = new Array(length);\n  this._value = new Int32Array(length);\n  this._gl = gl;\n  this._location = locations[0];\n}\n\nUniformArrayInt.prototype.set = function () {\n  var value = this.value;\n  var length = value.length;\n  var arraybuffer = this._value;\n  var changed = false;\n\n  for (var i = 0; i < length; ++i) {\n    var v = value[i];\n\n    if (v !== arraybuffer[i]) {\n      arraybuffer[i] = v;\n      changed = true;\n    }\n  }\n\n  if (changed) {\n    this._gl.uniform1iv(this._location, arraybuffer);\n  }\n}; ///////////////////////////////////////////////////////////////////////////\n\n/**\n * @private\n * @constructor\n */\n\n\nfunction UniformArrayIntVec2(gl, activeUniform, uniformName, locations) {\n  var length = locations.length;\n  /**\n   * @type {String}\n   * @readonly\n   */\n\n  this.name = uniformName;\n  this.value = new Array(length);\n  this._value = new Int32Array(length * 2);\n  this._gl = gl;\n  this._location = locations[0];\n}\n\nUniformArrayIntVec2.prototype.set = function () {\n  var value = this.value;\n  var length = value.length;\n  var arraybuffer = this._value;\n  var changed = false;\n  var j = 0;\n\n  for (var i = 0; i < length; ++i) {\n    var v = value[i];\n\n    if (!Cartesian2.equalsArray(v, arraybuffer, j)) {\n      Cartesian2.pack(v, arraybuffer, j);\n      changed = true;\n    }\n\n    j += 2;\n  }\n\n  if (changed) {\n    this._gl.uniform2iv(this._location, arraybuffer);\n  }\n}; ///////////////////////////////////////////////////////////////////////////\n\n/**\n * @private\n * @constructor\n */\n\n\nfunction UniformArrayIntVec3(gl, activeUniform, uniformName, locations) {\n  var length = locations.length;\n  /**\n   * @type {String}\n   * @readonly\n   */\n\n  this.name = uniformName;\n  this.value = new Array(length);\n  this._value = new Int32Array(length * 3);\n  this._gl = gl;\n  this._location = locations[0];\n}\n\nUniformArrayIntVec3.prototype.set = function () {\n  var value = this.value;\n  var length = value.length;\n  var arraybuffer = this._value;\n  var changed = false;\n  var j = 0;\n\n  for (var i = 0; i < length; ++i) {\n    var v = value[i];\n\n    if (!Cartesian3.equalsArray(v, arraybuffer, j)) {\n      Cartesian3.pack(v, arraybuffer, j);\n      changed = true;\n    }\n\n    j += 3;\n  }\n\n  if (changed) {\n    this._gl.uniform3iv(this._location, arraybuffer);\n  }\n}; ///////////////////////////////////////////////////////////////////////////\n\n/**\n * @private\n * @constructor\n */\n\n\nfunction UniformArrayIntVec4(gl, activeUniform, uniformName, locations) {\n  var length = locations.length;\n  /**\n   * @type {String}\n   * @readonly\n   */\n\n  this.name = uniformName;\n  this.value = new Array(length);\n  this._value = new Int32Array(length * 4);\n  this._gl = gl;\n  this._location = locations[0];\n}\n\nUniformArrayIntVec4.prototype.set = function () {\n  var value = this.value;\n  var length = value.length;\n  var arraybuffer = this._value;\n  var changed = false;\n  var j = 0;\n\n  for (var i = 0; i < length; ++i) {\n    var v = value[i];\n\n    if (!Cartesian4.equalsArray(v, arraybuffer, j)) {\n      Cartesian4.pack(v, arraybuffer, j);\n      changed = true;\n    }\n\n    j += 4;\n  }\n\n  if (changed) {\n    this._gl.uniform4iv(this._location, arraybuffer);\n  }\n}; ///////////////////////////////////////////////////////////////////////////\n\n/**\n * @private\n * @constructor\n */\n\n\nfunction UniformArrayMat2(gl, activeUniform, uniformName, locations) {\n  var length = locations.length;\n  /**\n   * @type {String}\n   * @readonly\n   */\n\n  this.name = uniformName;\n  this.value = new Array(length);\n  this._value = new Float32Array(length * 4);\n  this._gl = gl;\n  this._location = locations[0];\n}\n\nUniformArrayMat2.prototype.set = function () {\n  var value = this.value;\n  var length = value.length;\n  var arraybuffer = this._value;\n  var changed = false;\n  var j = 0;\n\n  for (var i = 0; i < length; ++i) {\n    var v = value[i];\n\n    if (!Matrix2.equalsArray(v, arraybuffer, j)) {\n      Matrix2.pack(v, arraybuffer, j);\n      changed = true;\n    }\n\n    j += 4;\n  }\n\n  if (changed) {\n    this._gl.uniformMatrix2fv(this._location, false, arraybuffer);\n  }\n}; ///////////////////////////////////////////////////////////////////////////\n\n/**\n * @private\n * @constructor\n */\n\n\nfunction UniformArrayMat3(gl, activeUniform, uniformName, locations) {\n  var length = locations.length;\n  /**\n   * @type {String}\n   * @readonly\n   */\n\n  this.name = uniformName;\n  this.value = new Array(length);\n  this._value = new Float32Array(length * 9);\n  this._gl = gl;\n  this._location = locations[0];\n}\n\nUniformArrayMat3.prototype.set = function () {\n  var value = this.value;\n  var length = value.length;\n  var arraybuffer = this._value;\n  var changed = false;\n  var j = 0;\n\n  for (var i = 0; i < length; ++i) {\n    var v = value[i];\n\n    if (!Matrix3.equalsArray(v, arraybuffer, j)) {\n      Matrix3.pack(v, arraybuffer, j);\n      changed = true;\n    }\n\n    j += 9;\n  }\n\n  if (changed) {\n    this._gl.uniformMatrix3fv(this._location, false, arraybuffer);\n  }\n}; ///////////////////////////////////////////////////////////////////////////\n\n/**\n * @private\n * @constructor\n */\n\n\nfunction UniformArrayMat4(gl, activeUniform, uniformName, locations) {\n  var length = locations.length;\n  /**\n   * @type {String}\n   * @readonly\n   */\n\n  this.name = uniformName;\n  this.value = new Array(length);\n  this._value = new Float32Array(length * 16);\n  this._gl = gl;\n  this._location = locations[0];\n}\n\nUniformArrayMat4.prototype.set = function () {\n  var value = this.value;\n  var length = value.length;\n  var arraybuffer = this._value;\n  var changed = false;\n  var j = 0;\n\n  for (var i = 0; i < length; ++i) {\n    var v = value[i];\n\n    if (!Matrix4.equalsArray(v, arraybuffer, j)) {\n      Matrix4.pack(v, arraybuffer, j);\n      changed = true;\n    }\n\n    j += 16;\n  }\n\n  if (changed) {\n    this._gl.uniformMatrix4fv(this._location, false, arraybuffer);\n  }\n};\n\nexport default createUniformArray;","map":{"version":3,"sources":["C:/Users/passa/Desktop/WaterLevelReact/node_modules/cesium/Source/Renderer/createUniformArray.js"],"names":["Cartesian2","Cartesian3","Cartesian4","Color","defined","DeveloperError","Matrix2","Matrix3","Matrix4","RuntimeError","createUniformArray","gl","activeUniform","uniformName","locations","type","FLOAT","UniformArrayFloat","FLOAT_VEC2","UniformArrayFloatVec2","FLOAT_VEC3","UniformArrayFloatVec3","FLOAT_VEC4","UniformArrayFloatVec4","SAMPLER_2D","SAMPLER_CUBE","UniformArraySampler","INT","BOOL","UniformArrayInt","INT_VEC2","BOOL_VEC2","UniformArrayIntVec2","INT_VEC3","BOOL_VEC3","UniformArrayIntVec3","INT_VEC4","BOOL_VEC4","UniformArrayIntVec4","FLOAT_MAT2","UniformArrayMat2","FLOAT_MAT3","UniformArrayMat3","FLOAT_MAT4","UniformArrayMat4","length","name","value","Array","_value","Float32Array","_gl","_location","prototype","set","arraybuffer","changed","i","v","uniform1fv","j","equalsArray","pack","uniform2fv","red","green","blue","x","uniform3fv","uniform4fv","_locations","textureUnitIndex","undefined","TEXTURE0","activeTexture","bindTexture","_target","_texture","_setSampler","index","uniform1i","Int32Array","uniform1iv","uniform2iv","uniform3iv","uniform4iv","uniformMatrix2fv","uniformMatrix3fv","uniformMatrix4fv"],"mappings":"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","sourcesContent":["import Cartesian2 from \"../Core/Cartesian2.js\";\nimport Cartesian3 from \"../Core/Cartesian3.js\";\nimport Cartesian4 from \"../Core/Cartesian4.js\";\nimport Color from \"../Core/Color.js\";\nimport defined from \"../Core/defined.js\";\nimport DeveloperError from \"../Core/DeveloperError.js\";\nimport Matrix2 from \"../Core/Matrix2.js\";\nimport Matrix3 from \"../Core/Matrix3.js\";\nimport Matrix4 from \"../Core/Matrix4.js\";\nimport RuntimeError from \"../Core/RuntimeError.js\";\n\n/**\n * @private\n * @constructor\n */\nfunction createUniformArray(gl, activeUniform, uniformName, locations) {\n  switch (activeUniform.type) {\n    case gl.FLOAT:\n      return new UniformArrayFloat(gl, activeUniform, uniformName, locations);\n    case gl.FLOAT_VEC2:\n      return new UniformArrayFloatVec2(\n        gl,\n        activeUniform,\n        uniformName,\n        locations\n      );\n    case gl.FLOAT_VEC3:\n      return new UniformArrayFloatVec3(\n        gl,\n        activeUniform,\n        uniformName,\n        locations\n      );\n    case gl.FLOAT_VEC4:\n      return new UniformArrayFloatVec4(\n        gl,\n        activeUniform,\n        uniformName,\n        locations\n      );\n    case gl.SAMPLER_2D:\n    case gl.SAMPLER_CUBE:\n      return new UniformArraySampler(gl, activeUniform, uniformName, locations);\n    case gl.INT:\n    case gl.BOOL:\n      return new UniformArrayInt(gl, activeUniform, uniformName, locations);\n    case gl.INT_VEC2:\n    case gl.BOOL_VEC2:\n      return new UniformArrayIntVec2(gl, activeUniform, uniformName, locations);\n    case gl.INT_VEC3:\n    case gl.BOOL_VEC3:\n      return new UniformArrayIntVec3(gl, activeUniform, uniformName, locations);\n    case gl.INT_VEC4:\n    case gl.BOOL_VEC4:\n      return new UniformArrayIntVec4(gl, activeUniform, uniformName, locations);\n    case gl.FLOAT_MAT2:\n      return new UniformArrayMat2(gl, activeUniform, uniformName, locations);\n    case gl.FLOAT_MAT3:\n      return new UniformArrayMat3(gl, activeUniform, uniformName, locations);\n    case gl.FLOAT_MAT4:\n      return new UniformArrayMat4(gl, activeUniform, uniformName, locations);\n    default:\n      throw new RuntimeError(\n        \"Unrecognized uniform type: \" +\n          activeUniform.type +\n          ' for uniform \"' +\n          uniformName +\n          '\".'\n      );\n  }\n}\n\n/**\n * @private\n * @constructor\n */\nfunction UniformArrayFloat(gl, activeUniform, uniformName, locations) {\n  var length = locations.length;\n\n  /**\n   * @type {String}\n   * @readonly\n   */\n  this.name = uniformName;\n\n  this.value = new Array(length);\n  this._value = new Float32Array(length);\n\n  this._gl = gl;\n  this._location = locations[0];\n}\n\nUniformArrayFloat.prototype.set = function () {\n  var value = this.value;\n  var length = value.length;\n  var arraybuffer = this._value;\n  var changed = false;\n\n  for (var i = 0; i < length; ++i) {\n    var v = value[i];\n\n    if (v !== arraybuffer[i]) {\n      arraybuffer[i] = v;\n      changed = true;\n    }\n  }\n\n  if (changed) {\n    this._gl.uniform1fv(this._location, arraybuffer);\n  }\n};\n\n///////////////////////////////////////////////////////////////////////////\n\n/**\n * @private\n * @constructor\n */\nfunction UniformArrayFloatVec2(gl, activeUniform, uniformName, locations) {\n  var length = locations.length;\n\n  /**\n   * @type {String}\n   * @readonly\n   */\n  this.name = uniformName;\n\n  this.value = new Array(length);\n  this._value = new Float32Array(length * 2);\n\n  this._gl = gl;\n  this._location = locations[0];\n}\n\nUniformArrayFloatVec2.prototype.set = function () {\n  var value = this.value;\n  var length = value.length;\n  var arraybuffer = this._value;\n  var changed = false;\n  var j = 0;\n\n  for (var i = 0; i < length; ++i) {\n    var v = value[i];\n\n    if (!Cartesian2.equalsArray(v, arraybuffer, j)) {\n      Cartesian2.pack(v, arraybuffer, j);\n      changed = true;\n    }\n    j += 2;\n  }\n\n  if (changed) {\n    this._gl.uniform2fv(this._location, arraybuffer);\n  }\n};\n\n///////////////////////////////////////////////////////////////////////////\n\n/**\n * @private\n * @constructor\n */\nfunction UniformArrayFloatVec3(gl, activeUniform, uniformName, locations) {\n  var length = locations.length;\n\n  /**\n   * @type {String}\n   * @readonly\n   */\n  this.name = uniformName;\n\n  this.value = new Array(length);\n  this._value = new Float32Array(length * 3);\n\n  this._gl = gl;\n  this._location = locations[0];\n}\n\nUniformArrayFloatVec3.prototype.set = function () {\n  var value = this.value;\n  var length = value.length;\n  var arraybuffer = this._value;\n  var changed = false;\n  var j = 0;\n\n  for (var i = 0; i < length; ++i) {\n    var v = value[i];\n\n    if (defined(v.red)) {\n      if (\n        v.red !== arraybuffer[j] ||\n        v.green !== arraybuffer[j + 1] ||\n        v.blue !== arraybuffer[j + 2]\n      ) {\n        arraybuffer[j] = v.red;\n        arraybuffer[j + 1] = v.green;\n        arraybuffer[j + 2] = v.blue;\n        changed = true;\n      }\n    } else if (defined(v.x)) {\n      if (!Cartesian3.equalsArray(v, arraybuffer, j)) {\n        Cartesian3.pack(v, arraybuffer, j);\n        changed = true;\n      }\n    } else {\n      //>>includeStart('debug', pragmas.debug);\n      throw new DeveloperError(\"Invalid vec3 value.\");\n      //>>includeEnd('debug');\n    }\n\n    j += 3;\n  }\n\n  if (changed) {\n    this._gl.uniform3fv(this._location, arraybuffer);\n  }\n};\n\n///////////////////////////////////////////////////////////////////////////\n\n/**\n * @private\n * @constructor\n */\nfunction UniformArrayFloatVec4(gl, activeUniform, uniformName, locations) {\n  var length = locations.length;\n\n  /**\n   * @type {String}\n   * @readonly\n   */\n  this.name = uniformName;\n\n  this.value = new Array(length);\n  this._value = new Float32Array(length * 4);\n\n  this._gl = gl;\n  this._location = locations[0];\n}\n\nUniformArrayFloatVec4.prototype.set = function () {\n  // PERFORMANCE_IDEA: if it is a common case that only a few elements\n  // in a uniform array change, we could use heuristics to determine\n  // when it is better to call uniform4f for each element that changed\n  // vs. call uniform4fv once to set the entire array.  This applies\n  // to all uniform array types, not just vec4.  We might not care\n  // once we have uniform buffers since that will be the fast path.\n\n  // PERFORMANCE_IDEA: Micro-optimization (I bet it works though):\n  // As soon as changed is true, break into a separate loop that\n  // does the copy without the equals check.\n\n  var value = this.value;\n  var length = value.length;\n  var arraybuffer = this._value;\n  var changed = false;\n  var j = 0;\n\n  for (var i = 0; i < length; ++i) {\n    var v = value[i];\n\n    if (defined(v.red)) {\n      if (!Color.equalsArray(v, arraybuffer, j)) {\n        Color.pack(v, arraybuffer, j);\n        changed = true;\n      }\n    } else if (defined(v.x)) {\n      if (!Cartesian4.equalsArray(v, arraybuffer, j)) {\n        Cartesian4.pack(v, arraybuffer, j);\n        changed = true;\n      }\n    } else {\n      //>>includeStart('debug', pragmas.debug);\n      throw new DeveloperError(\"Invalid vec4 value.\");\n      //>>includeEnd('debug');\n    }\n\n    j += 4;\n  }\n\n  if (changed) {\n    this._gl.uniform4fv(this._location, arraybuffer);\n  }\n};\n\n///////////////////////////////////////////////////////////////////////////\n\n/**\n * @private\n * @constructor\n */\nfunction UniformArraySampler(gl, activeUniform, uniformName, locations) {\n  var length = locations.length;\n\n  /**\n   * @type {String}\n   * @readonly\n   */\n  this.name = uniformName;\n\n  this.value = new Array(length);\n  this._value = new Float32Array(length);\n\n  this._gl = gl;\n  this._locations = locations;\n\n  this.textureUnitIndex = undefined;\n}\n\nUniformArraySampler.prototype.set = function () {\n  var gl = this._gl;\n  var textureUnitIndex = gl.TEXTURE0 + this.textureUnitIndex;\n\n  var value = this.value;\n  var length = value.length;\n  for (var i = 0; i < length; ++i) {\n    var v = value[i];\n    gl.activeTexture(textureUnitIndex + i);\n    gl.bindTexture(v._target, v._texture);\n  }\n};\n\nUniformArraySampler.prototype._setSampler = function (textureUnitIndex) {\n  this.textureUnitIndex = textureUnitIndex;\n\n  var locations = this._locations;\n  var length = locations.length;\n  for (var i = 0; i < length; ++i) {\n    var index = textureUnitIndex + i;\n    this._gl.uniform1i(locations[i], index);\n  }\n\n  return textureUnitIndex + length;\n};\n\n///////////////////////////////////////////////////////////////////////////\n\n/**\n * @private\n * @constructor\n */\nfunction UniformArrayInt(gl, activeUniform, uniformName, locations) {\n  var length = locations.length;\n\n  /**\n   * @type {String}\n   * @readonly\n   */\n  this.name = uniformName;\n\n  this.value = new Array(length);\n  this._value = new Int32Array(length);\n\n  this._gl = gl;\n  this._location = locations[0];\n}\n\nUniformArrayInt.prototype.set = function () {\n  var value = this.value;\n  var length = value.length;\n  var arraybuffer = this._value;\n  var changed = false;\n\n  for (var i = 0; i < length; ++i) {\n    var v = value[i];\n\n    if (v !== arraybuffer[i]) {\n      arraybuffer[i] = v;\n      changed = true;\n    }\n  }\n\n  if (changed) {\n    this._gl.uniform1iv(this._location, arraybuffer);\n  }\n};\n\n///////////////////////////////////////////////////////////////////////////\n\n/**\n * @private\n * @constructor\n */\nfunction UniformArrayIntVec2(gl, activeUniform, uniformName, locations) {\n  var length = locations.length;\n\n  /**\n   * @type {String}\n   * @readonly\n   */\n  this.name = uniformName;\n\n  this.value = new Array(length);\n  this._value = new Int32Array(length * 2);\n\n  this._gl = gl;\n  this._location = locations[0];\n}\n\nUniformArrayIntVec2.prototype.set = function () {\n  var value = this.value;\n  var length = value.length;\n  var arraybuffer = this._value;\n  var changed = false;\n  var j = 0;\n\n  for (var i = 0; i < length; ++i) {\n    var v = value[i];\n\n    if (!Cartesian2.equalsArray(v, arraybuffer, j)) {\n      Cartesian2.pack(v, arraybuffer, j);\n      changed = true;\n    }\n    j += 2;\n  }\n\n  if (changed) {\n    this._gl.uniform2iv(this._location, arraybuffer);\n  }\n};\n\n///////////////////////////////////////////////////////////////////////////\n\n/**\n * @private\n * @constructor\n */\nfunction UniformArrayIntVec3(gl, activeUniform, uniformName, locations) {\n  var length = locations.length;\n\n  /**\n   * @type {String}\n   * @readonly\n   */\n  this.name = uniformName;\n\n  this.value = new Array(length);\n  this._value = new Int32Array(length * 3);\n\n  this._gl = gl;\n  this._location = locations[0];\n}\n\nUniformArrayIntVec3.prototype.set = function () {\n  var value = this.value;\n  var length = value.length;\n  var arraybuffer = this._value;\n  var changed = false;\n  var j = 0;\n\n  for (var i = 0; i < length; ++i) {\n    var v = value[i];\n\n    if (!Cartesian3.equalsArray(v, arraybuffer, j)) {\n      Cartesian3.pack(v, arraybuffer, j);\n      changed = true;\n    }\n    j += 3;\n  }\n\n  if (changed) {\n    this._gl.uniform3iv(this._location, arraybuffer);\n  }\n};\n\n///////////////////////////////////////////////////////////////////////////\n\n/**\n * @private\n * @constructor\n */\nfunction UniformArrayIntVec4(gl, activeUniform, uniformName, locations) {\n  var length = locations.length;\n\n  /**\n   * @type {String}\n   * @readonly\n   */\n  this.name = uniformName;\n\n  this.value = new Array(length);\n  this._value = new Int32Array(length * 4);\n\n  this._gl = gl;\n  this._location = locations[0];\n}\n\nUniformArrayIntVec4.prototype.set = function () {\n  var value = this.value;\n  var length = value.length;\n  var arraybuffer = this._value;\n  var changed = false;\n  var j = 0;\n\n  for (var i = 0; i < length; ++i) {\n    var v = value[i];\n\n    if (!Cartesian4.equalsArray(v, arraybuffer, j)) {\n      Cartesian4.pack(v, arraybuffer, j);\n      changed = true;\n    }\n    j += 4;\n  }\n\n  if (changed) {\n    this._gl.uniform4iv(this._location, arraybuffer);\n  }\n};\n\n///////////////////////////////////////////////////////////////////////////\n\n/**\n * @private\n * @constructor\n */\nfunction UniformArrayMat2(gl, activeUniform, uniformName, locations) {\n  var length = locations.length;\n\n  /**\n   * @type {String}\n   * @readonly\n   */\n  this.name = uniformName;\n\n  this.value = new Array(length);\n  this._value = new Float32Array(length * 4);\n\n  this._gl = gl;\n  this._location = locations[0];\n}\n\nUniformArrayMat2.prototype.set = function () {\n  var value = this.value;\n  var length = value.length;\n  var arraybuffer = this._value;\n  var changed = false;\n  var j = 0;\n\n  for (var i = 0; i < length; ++i) {\n    var v = value[i];\n\n    if (!Matrix2.equalsArray(v, arraybuffer, j)) {\n      Matrix2.pack(v, arraybuffer, j);\n      changed = true;\n    }\n    j += 4;\n  }\n\n  if (changed) {\n    this._gl.uniformMatrix2fv(this._location, false, arraybuffer);\n  }\n};\n\n///////////////////////////////////////////////////////////////////////////\n\n/**\n * @private\n * @constructor\n */\nfunction UniformArrayMat3(gl, activeUniform, uniformName, locations) {\n  var length = locations.length;\n\n  /**\n   * @type {String}\n   * @readonly\n   */\n  this.name = uniformName;\n\n  this.value = new Array(length);\n  this._value = new Float32Array(length * 9);\n\n  this._gl = gl;\n  this._location = locations[0];\n}\n\nUniformArrayMat3.prototype.set = function () {\n  var value = this.value;\n  var length = value.length;\n  var arraybuffer = this._value;\n  var changed = false;\n  var j = 0;\n\n  for (var i = 0; i < length; ++i) {\n    var v = value[i];\n\n    if (!Matrix3.equalsArray(v, arraybuffer, j)) {\n      Matrix3.pack(v, arraybuffer, j);\n      changed = true;\n    }\n    j += 9;\n  }\n\n  if (changed) {\n    this._gl.uniformMatrix3fv(this._location, false, arraybuffer);\n  }\n};\n\n///////////////////////////////////////////////////////////////////////////\n\n/**\n * @private\n * @constructor\n */\nfunction UniformArrayMat4(gl, activeUniform, uniformName, locations) {\n  var length = locations.length;\n\n  /**\n   * @type {String}\n   * @readonly\n   */\n  this.name = uniformName;\n\n  this.value = new Array(length);\n  this._value = new Float32Array(length * 16);\n\n  this._gl = gl;\n  this._location = locations[0];\n}\n\nUniformArrayMat4.prototype.set = function () {\n  var value = this.value;\n  var length = value.length;\n  var arraybuffer = this._value;\n  var changed = false;\n  var j = 0;\n\n  for (var i = 0; i < length; ++i) {\n    var v = value[i];\n\n    if (!Matrix4.equalsArray(v, arraybuffer, j)) {\n      Matrix4.pack(v, arraybuffer, j);\n      changed = true;\n    }\n    j += 16;\n  }\n\n  if (changed) {\n    this._gl.uniformMatrix4fv(this._location, false, arraybuffer);\n  }\n};\nexport default createUniformArray;\n"]},"metadata":{},"sourceType":"module"}
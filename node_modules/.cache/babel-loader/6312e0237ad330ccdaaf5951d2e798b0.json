{"ast":null,"code":"import Check from \"../Core/Check.js\";\nimport defaultValue from \"../Core/defaultValue.js\";\nimport defined from \"../Core/defined.js\";\nimport DeveloperError from \"../Core/DeveloperError.js\";\nimport GeometryOffsetAttribute from \"../Core/GeometryOffsetAttribute.js\";\nimport oneTimeWarning from \"../Core/oneTimeWarning.js\";\nimport GroundPrimitive from \"../Scene/GroundPrimitive.js\";\nimport HeightReference from \"../Scene/HeightReference.js\";\nimport CallbackProperty from \"./CallbackProperty.js\";\nimport ConstantProperty from \"./ConstantProperty.js\";\nimport GeometryUpdater from \"./GeometryUpdater.js\";\nimport TerrainOffsetProperty from \"./TerrainOffsetProperty.js\";\nvar defaultZIndex = new ConstantProperty(0);\n/**\n * An abstract class for updating ground geometry entities.\n * @constructor\n * @alias GroundGeometryUpdater\n * @param {Object} options An object with the following properties:\n * @param {Entity} options.entity The entity containing the geometry to be visualized.\n * @param {Scene} options.scene The scene where visualization is taking place.\n * @param {Object} options.geometryOptions Options for the geometry\n * @param {String} options.geometryPropertyName The geometry property name\n * @param {String[]} options.observedPropertyNames The entity properties this geometry cares about\n */\n\nfunction GroundGeometryUpdater(options) {\n  GeometryUpdater.call(this, options);\n  this._zIndex = 0;\n  this._terrainOffsetProperty = undefined;\n}\n\nif (defined(Object.create)) {\n  GroundGeometryUpdater.prototype = Object.create(GeometryUpdater.prototype);\n  GroundGeometryUpdater.prototype.constructor = GroundGeometryUpdater;\n}\n\nObject.defineProperties(GroundGeometryUpdater.prototype, {\n  /**\n   * Gets the zindex\n   * @type {Number}\n   * @memberof GroundGeometryUpdater.prototype\n   * @readonly\n   */\n  zIndex: {\n    get: function () {\n      return this._zIndex;\n    }\n  },\n\n  /**\n   * Gets the terrain offset property\n   * @type {TerrainOffsetProperty}\n   * @memberof GroundGeometryUpdater.prototype\n   * @readonly\n   */\n  terrainOffsetProperty: {\n    get: function () {\n      return this._terrainOffsetProperty;\n    }\n  }\n});\n\nGroundGeometryUpdater.prototype._isOnTerrain = function (entity, geometry) {\n  return this._fillEnabled && !defined(geometry.height) && !defined(geometry.extrudedHeight) && GroundPrimitive.isSupported(this._scene);\n};\n\nGroundGeometryUpdater.prototype._getIsClosed = function (options) {\n  var height = options.height;\n  var extrudedHeight = options.extrudedHeight;\n  return height === 0 || defined(extrudedHeight) && extrudedHeight !== height;\n};\n\nGroundGeometryUpdater.prototype._computeCenter = DeveloperError.throwInstantiationError;\n\nGroundGeometryUpdater.prototype._onEntityPropertyChanged = function (entity, propertyName, newValue, oldValue) {\n  GeometryUpdater.prototype._onEntityPropertyChanged.call(this, entity, propertyName, newValue, oldValue);\n\n  if (this._observedPropertyNames.indexOf(propertyName) === -1) {\n    return;\n  }\n\n  var geometry = this._entity[this._geometryPropertyName];\n\n  if (!defined(geometry)) {\n    return;\n  }\n\n  if (defined(geometry.zIndex) && (defined(geometry.height) || defined(geometry.extrudedHeight))) {\n    oneTimeWarning(oneTimeWarning.geometryZIndex);\n  }\n\n  this._zIndex = defaultValue(geometry.zIndex, defaultZIndex);\n\n  if (defined(this._terrainOffsetProperty)) {\n    this._terrainOffsetProperty.destroy();\n\n    this._terrainOffsetProperty = undefined;\n  }\n\n  var heightReferenceProperty = geometry.heightReference;\n  var extrudedHeightReferenceProperty = geometry.extrudedHeightReference;\n\n  if (defined(heightReferenceProperty) || defined(extrudedHeightReferenceProperty)) {\n    var centerPosition = new CallbackProperty(this._computeCenter.bind(this), !this._dynamic);\n    this._terrainOffsetProperty = new TerrainOffsetProperty(this._scene, centerPosition, heightReferenceProperty, extrudedHeightReferenceProperty);\n  }\n};\n/**\n * Destroys and resources used by the object.  Once an object is destroyed, it should not be used.\n *\n * @exception {DeveloperError} This object was destroyed, i.e., destroy() was called.\n */\n\n\nGroundGeometryUpdater.prototype.destroy = function () {\n  if (defined(this._terrainOffsetProperty)) {\n    this._terrainOffsetProperty.destroy();\n\n    this._terrainOffsetProperty = undefined;\n  }\n\n  GeometryUpdater.prototype.destroy.call(this);\n};\n/**\n * @private\n */\n\n\nGroundGeometryUpdater.getGeometryHeight = function (height, heightReference) {\n  //>>includeStart('debug', pragmas.debug);\n  Check.defined(\"heightReference\", heightReference); //>>includeEnd('debug');\n\n  if (!defined(height)) {\n    if (heightReference !== HeightReference.NONE) {\n      oneTimeWarning(oneTimeWarning.geometryHeightReference);\n    }\n\n    return;\n  }\n\n  if (heightReference !== HeightReference.CLAMP_TO_GROUND) {\n    return height;\n  }\n\n  return 0.0;\n};\n/**\n * @private\n */\n\n\nGroundGeometryUpdater.getGeometryExtrudedHeight = function (extrudedHeight, extrudedHeightReference) {\n  //>>includeStart('debug', pragmas.debug);\n  Check.defined(\"extrudedHeightReference\", extrudedHeightReference); //>>includeEnd('debug');\n\n  if (!defined(extrudedHeight)) {\n    if (extrudedHeightReference !== HeightReference.NONE) {\n      oneTimeWarning(oneTimeWarning.geometryExtrudedHeightReference);\n    }\n\n    return;\n  }\n\n  if (extrudedHeightReference !== HeightReference.CLAMP_TO_GROUND) {\n    return extrudedHeight;\n  }\n\n  return GroundGeometryUpdater.CLAMP_TO_GROUND;\n};\n/**\n * @private\n */\n\n\nGroundGeometryUpdater.CLAMP_TO_GROUND = \"clamp\";\n/**\n * @private\n */\n\nGroundGeometryUpdater.computeGeometryOffsetAttribute = function (height, heightReference, extrudedHeight, extrudedHeightReference) {\n  if (!defined(height) || !defined(heightReference)) {\n    heightReference = HeightReference.NONE;\n  }\n\n  if (!defined(extrudedHeight) || !defined(extrudedHeightReference)) {\n    extrudedHeightReference = HeightReference.NONE;\n  }\n\n  var n = 0;\n\n  if (heightReference !== HeightReference.NONE) {\n    n++;\n  }\n\n  if (extrudedHeightReference === HeightReference.RELATIVE_TO_GROUND) {\n    n++;\n  }\n\n  if (n === 2) {\n    return GeometryOffsetAttribute.ALL;\n  }\n\n  if (n === 1) {\n    return GeometryOffsetAttribute.TOP;\n  }\n\n  return undefined;\n};\n\nexport default GroundGeometryUpdater;","map":{"version":3,"sources":["C:/Users/passa/Desktop/WaterLevelReact/node_modules/cesium/Source/DataSources/GroundGeometryUpdater.js"],"names":["Check","defaultValue","defined","DeveloperError","GeometryOffsetAttribute","oneTimeWarning","GroundPrimitive","HeightReference","CallbackProperty","ConstantProperty","GeometryUpdater","TerrainOffsetProperty","defaultZIndex","GroundGeometryUpdater","options","call","_zIndex","_terrainOffsetProperty","undefined","Object","create","prototype","constructor","defineProperties","zIndex","get","terrainOffsetProperty","_isOnTerrain","entity","geometry","_fillEnabled","height","extrudedHeight","isSupported","_scene","_getIsClosed","_computeCenter","throwInstantiationError","_onEntityPropertyChanged","propertyName","newValue","oldValue","_observedPropertyNames","indexOf","_entity","_geometryPropertyName","geometryZIndex","destroy","heightReferenceProperty","heightReference","extrudedHeightReferenceProperty","extrudedHeightReference","centerPosition","bind","_dynamic","getGeometryHeight","NONE","geometryHeightReference","CLAMP_TO_GROUND","getGeometryExtrudedHeight","geometryExtrudedHeightReference","computeGeometryOffsetAttribute","n","RELATIVE_TO_GROUND","ALL","TOP"],"mappings":"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","sourcesContent":["import Check from \"../Core/Check.js\";\nimport defaultValue from \"../Core/defaultValue.js\";\nimport defined from \"../Core/defined.js\";\nimport DeveloperError from \"../Core/DeveloperError.js\";\nimport GeometryOffsetAttribute from \"../Core/GeometryOffsetAttribute.js\";\nimport oneTimeWarning from \"../Core/oneTimeWarning.js\";\nimport GroundPrimitive from \"../Scene/GroundPrimitive.js\";\nimport HeightReference from \"../Scene/HeightReference.js\";\nimport CallbackProperty from \"./CallbackProperty.js\";\nimport ConstantProperty from \"./ConstantProperty.js\";\nimport GeometryUpdater from \"./GeometryUpdater.js\";\nimport TerrainOffsetProperty from \"./TerrainOffsetProperty.js\";\n\nvar defaultZIndex = new ConstantProperty(0);\n\n/**\n * An abstract class for updating ground geometry entities.\n * @constructor\n * @alias GroundGeometryUpdater\n * @param {Object} options An object with the following properties:\n * @param {Entity} options.entity The entity containing the geometry to be visualized.\n * @param {Scene} options.scene The scene where visualization is taking place.\n * @param {Object} options.geometryOptions Options for the geometry\n * @param {String} options.geometryPropertyName The geometry property name\n * @param {String[]} options.observedPropertyNames The entity properties this geometry cares about\n */\nfunction GroundGeometryUpdater(options) {\n  GeometryUpdater.call(this, options);\n\n  this._zIndex = 0;\n  this._terrainOffsetProperty = undefined;\n}\n\nif (defined(Object.create)) {\n  GroundGeometryUpdater.prototype = Object.create(GeometryUpdater.prototype);\n  GroundGeometryUpdater.prototype.constructor = GroundGeometryUpdater;\n}\n\nObject.defineProperties(GroundGeometryUpdater.prototype, {\n  /**\n   * Gets the zindex\n   * @type {Number}\n   * @memberof GroundGeometryUpdater.prototype\n   * @readonly\n   */\n  zIndex: {\n    get: function () {\n      return this._zIndex;\n    },\n  },\n\n  /**\n   * Gets the terrain offset property\n   * @type {TerrainOffsetProperty}\n   * @memberof GroundGeometryUpdater.prototype\n   * @readonly\n   */\n  terrainOffsetProperty: {\n    get: function () {\n      return this._terrainOffsetProperty;\n    },\n  },\n});\n\nGroundGeometryUpdater.prototype._isOnTerrain = function (entity, geometry) {\n  return (\n    this._fillEnabled &&\n    !defined(geometry.height) &&\n    !defined(geometry.extrudedHeight) &&\n    GroundPrimitive.isSupported(this._scene)\n  );\n};\n\nGroundGeometryUpdater.prototype._getIsClosed = function (options) {\n  var height = options.height;\n  var extrudedHeight = options.extrudedHeight;\n  return height === 0 || (defined(extrudedHeight) && extrudedHeight !== height);\n};\n\nGroundGeometryUpdater.prototype._computeCenter =\n  DeveloperError.throwInstantiationError;\n\nGroundGeometryUpdater.prototype._onEntityPropertyChanged = function (\n  entity,\n  propertyName,\n  newValue,\n  oldValue\n) {\n  GeometryUpdater.prototype._onEntityPropertyChanged.call(\n    this,\n    entity,\n    propertyName,\n    newValue,\n    oldValue\n  );\n  if (this._observedPropertyNames.indexOf(propertyName) === -1) {\n    return;\n  }\n\n  var geometry = this._entity[this._geometryPropertyName];\n  if (!defined(geometry)) {\n    return;\n  }\n  if (\n    defined(geometry.zIndex) &&\n    (defined(geometry.height) || defined(geometry.extrudedHeight))\n  ) {\n    oneTimeWarning(oneTimeWarning.geometryZIndex);\n  }\n\n  this._zIndex = defaultValue(geometry.zIndex, defaultZIndex);\n\n  if (defined(this._terrainOffsetProperty)) {\n    this._terrainOffsetProperty.destroy();\n    this._terrainOffsetProperty = undefined;\n  }\n\n  var heightReferenceProperty = geometry.heightReference;\n  var extrudedHeightReferenceProperty = geometry.extrudedHeightReference;\n\n  if (\n    defined(heightReferenceProperty) ||\n    defined(extrudedHeightReferenceProperty)\n  ) {\n    var centerPosition = new CallbackProperty(\n      this._computeCenter.bind(this),\n      !this._dynamic\n    );\n    this._terrainOffsetProperty = new TerrainOffsetProperty(\n      this._scene,\n      centerPosition,\n      heightReferenceProperty,\n      extrudedHeightReferenceProperty\n    );\n  }\n};\n\n/**\n * Destroys and resources used by the object.  Once an object is destroyed, it should not be used.\n *\n * @exception {DeveloperError} This object was destroyed, i.e., destroy() was called.\n */\nGroundGeometryUpdater.prototype.destroy = function () {\n  if (defined(this._terrainOffsetProperty)) {\n    this._terrainOffsetProperty.destroy();\n    this._terrainOffsetProperty = undefined;\n  }\n\n  GeometryUpdater.prototype.destroy.call(this);\n};\n\n/**\n * @private\n */\nGroundGeometryUpdater.getGeometryHeight = function (height, heightReference) {\n  //>>includeStart('debug', pragmas.debug);\n  Check.defined(\"heightReference\", heightReference);\n  //>>includeEnd('debug');\n  if (!defined(height)) {\n    if (heightReference !== HeightReference.NONE) {\n      oneTimeWarning(oneTimeWarning.geometryHeightReference);\n    }\n    return;\n  }\n\n  if (heightReference !== HeightReference.CLAMP_TO_GROUND) {\n    return height;\n  }\n  return 0.0;\n};\n\n/**\n * @private\n */\nGroundGeometryUpdater.getGeometryExtrudedHeight = function (\n  extrudedHeight,\n  extrudedHeightReference\n) {\n  //>>includeStart('debug', pragmas.debug);\n  Check.defined(\"extrudedHeightReference\", extrudedHeightReference);\n  //>>includeEnd('debug');\n  if (!defined(extrudedHeight)) {\n    if (extrudedHeightReference !== HeightReference.NONE) {\n      oneTimeWarning(oneTimeWarning.geometryExtrudedHeightReference);\n    }\n    return;\n  }\n  if (extrudedHeightReference !== HeightReference.CLAMP_TO_GROUND) {\n    return extrudedHeight;\n  }\n\n  return GroundGeometryUpdater.CLAMP_TO_GROUND;\n};\n\n/**\n * @private\n */\nGroundGeometryUpdater.CLAMP_TO_GROUND = \"clamp\";\n\n/**\n * @private\n */\nGroundGeometryUpdater.computeGeometryOffsetAttribute = function (\n  height,\n  heightReference,\n  extrudedHeight,\n  extrudedHeightReference\n) {\n  if (!defined(height) || !defined(heightReference)) {\n    heightReference = HeightReference.NONE;\n  }\n  if (!defined(extrudedHeight) || !defined(extrudedHeightReference)) {\n    extrudedHeightReference = HeightReference.NONE;\n  }\n  var n = 0;\n  if (heightReference !== HeightReference.NONE) {\n    n++;\n  }\n  if (extrudedHeightReference === HeightReference.RELATIVE_TO_GROUND) {\n    n++;\n  }\n  if (n === 2) {\n    return GeometryOffsetAttribute.ALL;\n  }\n  if (n === 1) {\n    return GeometryOffsetAttribute.TOP;\n  }\n\n  return undefined;\n};\nexport default GroundGeometryUpdater;\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import Check from \"../Core/Check.js\";\nimport defaultValue from \"../Core/defaultValue.js\";\nimport defined from \"../Core/defined.js\";\nimport destroyObject from \"../Core/destroyObject.js\";\nimport PrimitiveCollection from \"./PrimitiveCollection.js\";\n/**\n * A primitive collection for helping maintain the order or ground primitives based on a z-index\n *\n * @private\n */\n\nfunction OrderedGroundPrimitiveCollection() {\n  this._length = 0;\n  this._collections = {};\n  this._collectionsArray = [];\n  this.show = true;\n}\n\nObject.defineProperties(OrderedGroundPrimitiveCollection.prototype, {\n  /**\n   * Gets the number of primitives in the collection.\n   *\n   * @memberof OrderedGroundPrimitiveCollection.prototype\n   *\n   * @type {Number}\n   * @readonly\n   */\n  length: {\n    get: function get() {\n      return this._length;\n    }\n  }\n});\n/**\n * Adds a primitive to the collection.\n *\n * @param {GroundPrimitive} primitive The primitive to add.\n * @param {Number} [zIndex = 0] The index of the primitive\n * @returns {GroundPrimitive} The primitive added to the collection.\n */\n\nOrderedGroundPrimitiveCollection.prototype.add = function (primitive, zIndex) {\n  //>>includeStart('debug', pragmas.debug);\n  Check.defined(\"primitive\", primitive);\n\n  if (defined(zIndex)) {\n    Check.typeOf.number(\"zIndex\", zIndex);\n  } //>>includeEnd('debug');\n\n\n  zIndex = defaultValue(zIndex, 0);\n  var collection = this._collections[zIndex];\n\n  if (!defined(collection)) {\n    collection = new PrimitiveCollection({\n      destroyPrimitives: false\n    });\n    collection._zIndex = zIndex;\n    this._collections[zIndex] = collection;\n    var array = this._collectionsArray;\n    var i = 0;\n\n    while (i < array.length && array[i]._zIndex < zIndex) {\n      i++;\n    }\n\n    array.splice(i, 0, collection);\n  }\n\n  collection.add(primitive);\n  this._length++;\n  primitive._zIndex = zIndex;\n  return primitive;\n};\n/**\n * Adjusts the z-index\n * @param {GroundPrimitive} primitive\n * @param {Number} zIndex\n */\n\n\nOrderedGroundPrimitiveCollection.prototype.set = function (primitive, zIndex) {\n  //>>includeStart('debug', pragmas.debug);\n  Check.defined(\"primitive\", primitive);\n  Check.typeOf.number(\"zIndex\", zIndex); //>>includeEnd('debug');\n\n  if (zIndex === primitive._zIndex) {\n    return primitive;\n  }\n\n  this.remove(primitive, true);\n  this.add(primitive, zIndex);\n  return primitive;\n};\n/**\n * Removes a primitive from the collection.\n *\n * @param {Object} primitive The primitive to remove.\n * @param {Boolean} [doNotDestroy = false]\n * @returns {Boolean} <code>true</code> if the primitive was removed; <code>false</code> if the primitive is <code>undefined</code> or was not found in the collection.\n */\n\n\nOrderedGroundPrimitiveCollection.prototype.remove = function (primitive, doNotDestroy) {\n  if (this.contains(primitive)) {\n    var index = primitive._zIndex;\n    var collection = this._collections[index];\n    var result;\n\n    if (doNotDestroy) {\n      result = collection.remove(primitive);\n    } else {\n      result = collection.removeAndDestroy(primitive);\n    }\n\n    if (result) {\n      this._length--;\n    }\n\n    if (collection.length === 0) {\n      this._collectionsArray.splice(this._collectionsArray.indexOf(collection), 1);\n\n      this._collections[index] = undefined;\n      collection.destroy();\n    }\n\n    return result;\n  }\n\n  return false;\n};\n/**\n * Removes all primitives in the collection.\n *\n * @exception {DeveloperError} This object was destroyed, i.e., destroy() was called.\n *\n * @see OrderedGroundPrimitiveCollection#destroyPrimitives\n */\n\n\nOrderedGroundPrimitiveCollection.prototype.removeAll = function () {\n  var collections = this._collectionsArray;\n\n  for (var i = 0; i < collections.length; i++) {\n    var collection = collections[i];\n    collection.destroyPrimitives = true;\n    collection.destroy();\n  }\n\n  this._collections = {};\n  this._collectionsArray = [];\n  this._length = 0;\n};\n/**\n * Determines if this collection contains a primitive.\n *\n * @param {Object} primitive The primitive to check for.\n * @returns {Boolean} <code>true</code> if the primitive is in the collection; <code>false</code> if the primitive is <code>undefined</code> or was not found in the collection.\n */\n\n\nOrderedGroundPrimitiveCollection.prototype.contains = function (primitive) {\n  if (!defined(primitive)) {\n    return false;\n  }\n\n  var collection = this._collections[primitive._zIndex];\n  return defined(collection) && collection.contains(primitive);\n};\n/**\n * @private\n */\n\n\nOrderedGroundPrimitiveCollection.prototype.update = function (frameState) {\n  if (!this.show) {\n    return;\n  }\n\n  var collections = this._collectionsArray;\n\n  for (var i = 0; i < collections.length; i++) {\n    collections[i].update(frameState);\n  }\n};\n/**\n * Returns true if this object was destroyed; otherwise, false.\n * <br /><br />\n * If this object was destroyed, it should not be used; calling any function other than\n * <code>isDestroyed</code> will result in a {@link DeveloperError} exception.\n *\n * @returns {Boolean} True if this object was destroyed; otherwise, false.\n *\n * @see OrderedGroundPrimitiveCollection#destroy\n */\n\n\nOrderedGroundPrimitiveCollection.prototype.isDestroyed = function () {\n  return false;\n};\n/**\n * Destroys the WebGL resources held by each primitive in this collection.  Explicitly destroying this\n * collection allows for deterministic release of WebGL resources, instead of relying on the garbage\n * collector to destroy this collection.\n * <br /><br />\n * Since destroying a collection destroys all the contained primitives, only destroy a collection\n * when you are sure no other code is still using any of the contained primitives.\n * <br /><br />\n * Once this collection is destroyed, it should not be used; calling any function other than\n * <code>isDestroyed</code> will result in a {@link DeveloperError} exception.  Therefore,\n * assign the return value (<code>undefined</code>) to the object as done in the example.\n *\n * @exception {DeveloperError} This object was destroyed, i.e., destroy() was called.\n *\n *\n * @example\n * primitives = primitives && primitives.destroy();\n *\n * @see OrderedGroundPrimitiveCollection#isDestroyed\n */\n\n\nOrderedGroundPrimitiveCollection.prototype.destroy = function () {\n  this.removeAll();\n  return destroyObject(this);\n};\n\nexport default OrderedGroundPrimitiveCollection;","map":{"version":3,"sources":["C:/Users/passa/Desktop/WaterLevelReact/node_modules/cesium/Source/Scene/OrderedGroundPrimitiveCollection.js"],"names":["Check","defaultValue","defined","destroyObject","PrimitiveCollection","OrderedGroundPrimitiveCollection","_length","_collections","_collectionsArray","show","Object","defineProperties","prototype","length","get","add","primitive","zIndex","typeOf","number","collection","destroyPrimitives","_zIndex","array","i","splice","set","remove","doNotDestroy","contains","index","result","removeAndDestroy","indexOf","undefined","destroy","removeAll","collections","update","frameState","isDestroyed"],"mappings":"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","sourcesContent":["import Check from \"../Core/Check.js\";\nimport defaultValue from \"../Core/defaultValue.js\";\nimport defined from \"../Core/defined.js\";\nimport destroyObject from \"../Core/destroyObject.js\";\nimport PrimitiveCollection from \"./PrimitiveCollection.js\";\n\n/**\n * A primitive collection for helping maintain the order or ground primitives based on a z-index\n *\n * @private\n */\nfunction OrderedGroundPrimitiveCollection() {\n  this._length = 0;\n  this._collections = {};\n  this._collectionsArray = [];\n\n  this.show = true;\n}\n\nObject.defineProperties(OrderedGroundPrimitiveCollection.prototype, {\n  /**\n   * Gets the number of primitives in the collection.\n   *\n   * @memberof OrderedGroundPrimitiveCollection.prototype\n   *\n   * @type {Number}\n   * @readonly\n   */\n  length: {\n    get: function () {\n      return this._length;\n    },\n  },\n});\n\n/**\n * Adds a primitive to the collection.\n *\n * @param {GroundPrimitive} primitive The primitive to add.\n * @param {Number} [zIndex = 0] The index of the primitive\n * @returns {GroundPrimitive} The primitive added to the collection.\n */\nOrderedGroundPrimitiveCollection.prototype.add = function (primitive, zIndex) {\n  //>>includeStart('debug', pragmas.debug);\n  Check.defined(\"primitive\", primitive);\n  if (defined(zIndex)) {\n    Check.typeOf.number(\"zIndex\", zIndex);\n  }\n  //>>includeEnd('debug');\n\n  zIndex = defaultValue(zIndex, 0);\n  var collection = this._collections[zIndex];\n  if (!defined(collection)) {\n    collection = new PrimitiveCollection({ destroyPrimitives: false });\n    collection._zIndex = zIndex;\n    this._collections[zIndex] = collection;\n    var array = this._collectionsArray;\n    var i = 0;\n    while (i < array.length && array[i]._zIndex < zIndex) {\n      i++;\n    }\n    array.splice(i, 0, collection);\n  }\n\n  collection.add(primitive);\n  this._length++;\n  primitive._zIndex = zIndex;\n\n  return primitive;\n};\n\n/**\n * Adjusts the z-index\n * @param {GroundPrimitive} primitive\n * @param {Number} zIndex\n */\nOrderedGroundPrimitiveCollection.prototype.set = function (primitive, zIndex) {\n  //>>includeStart('debug', pragmas.debug);\n  Check.defined(\"primitive\", primitive);\n  Check.typeOf.number(\"zIndex\", zIndex);\n  //>>includeEnd('debug');\n\n  if (zIndex === primitive._zIndex) {\n    return primitive;\n  }\n\n  this.remove(primitive, true);\n  this.add(primitive, zIndex);\n\n  return primitive;\n};\n\n/**\n * Removes a primitive from the collection.\n *\n * @param {Object} primitive The primitive to remove.\n * @param {Boolean} [doNotDestroy = false]\n * @returns {Boolean} <code>true</code> if the primitive was removed; <code>false</code> if the primitive is <code>undefined</code> or was not found in the collection.\n */\nOrderedGroundPrimitiveCollection.prototype.remove = function (\n  primitive,\n  doNotDestroy\n) {\n  if (this.contains(primitive)) {\n    var index = primitive._zIndex;\n    var collection = this._collections[index];\n    var result;\n    if (doNotDestroy) {\n      result = collection.remove(primitive);\n    } else {\n      result = collection.removeAndDestroy(primitive);\n    }\n\n    if (result) {\n      this._length--;\n    }\n\n    if (collection.length === 0) {\n      this._collectionsArray.splice(\n        this._collectionsArray.indexOf(collection),\n        1\n      );\n      this._collections[index] = undefined;\n      collection.destroy();\n    }\n\n    return result;\n  }\n\n  return false;\n};\n\n/**\n * Removes all primitives in the collection.\n *\n * @exception {DeveloperError} This object was destroyed, i.e., destroy() was called.\n *\n * @see OrderedGroundPrimitiveCollection#destroyPrimitives\n */\nOrderedGroundPrimitiveCollection.prototype.removeAll = function () {\n  var collections = this._collectionsArray;\n  for (var i = 0; i < collections.length; i++) {\n    var collection = collections[i];\n    collection.destroyPrimitives = true;\n    collection.destroy();\n  }\n\n  this._collections = {};\n  this._collectionsArray = [];\n  this._length = 0;\n};\n\n/**\n * Determines if this collection contains a primitive.\n *\n * @param {Object} primitive The primitive to check for.\n * @returns {Boolean} <code>true</code> if the primitive is in the collection; <code>false</code> if the primitive is <code>undefined</code> or was not found in the collection.\n */\nOrderedGroundPrimitiveCollection.prototype.contains = function (primitive) {\n  if (!defined(primitive)) {\n    return false;\n  }\n  var collection = this._collections[primitive._zIndex];\n  return defined(collection) && collection.contains(primitive);\n};\n\n/**\n * @private\n */\nOrderedGroundPrimitiveCollection.prototype.update = function (frameState) {\n  if (!this.show) {\n    return;\n  }\n\n  var collections = this._collectionsArray;\n  for (var i = 0; i < collections.length; i++) {\n    collections[i].update(frameState);\n  }\n};\n\n/**\n * Returns true if this object was destroyed; otherwise, false.\n * <br /><br />\n * If this object was destroyed, it should not be used; calling any function other than\n * <code>isDestroyed</code> will result in a {@link DeveloperError} exception.\n *\n * @returns {Boolean} True if this object was destroyed; otherwise, false.\n *\n * @see OrderedGroundPrimitiveCollection#destroy\n */\nOrderedGroundPrimitiveCollection.prototype.isDestroyed = function () {\n  return false;\n};\n\n/**\n * Destroys the WebGL resources held by each primitive in this collection.  Explicitly destroying this\n * collection allows for deterministic release of WebGL resources, instead of relying on the garbage\n * collector to destroy this collection.\n * <br /><br />\n * Since destroying a collection destroys all the contained primitives, only destroy a collection\n * when you are sure no other code is still using any of the contained primitives.\n * <br /><br />\n * Once this collection is destroyed, it should not be used; calling any function other than\n * <code>isDestroyed</code> will result in a {@link DeveloperError} exception.  Therefore,\n * assign the return value (<code>undefined</code>) to the object as done in the example.\n *\n * @exception {DeveloperError} This object was destroyed, i.e., destroy() was called.\n *\n *\n * @example\n * primitives = primitives && primitives.destroy();\n *\n * @see OrderedGroundPrimitiveCollection#isDestroyed\n */\nOrderedGroundPrimitiveCollection.prototype.destroy = function () {\n  this.removeAll();\n  return destroyObject(this);\n};\nexport default OrderedGroundPrimitiveCollection;\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import DeveloperError from \"./DeveloperError.js\";\n/**\n * Wraps a function on the provided objects with another function called in the\n * object's context so that the new function is always called immediately\n * before the old one.\n *\n * @private\n */\n\nfunction wrapFunction(obj, oldFunction, newFunction) {\n  //>>includeStart('debug', pragmas.debug);\n  if (typeof oldFunction !== \"function\") {\n    throw new DeveloperError(\"oldFunction is required to be a function.\");\n  }\n\n  if (typeof newFunction !== \"function\") {\n    throw new DeveloperError(\"oldFunction is required to be a function.\");\n  } //>>includeEnd('debug');\n\n\n  return function () {\n    newFunction.apply(obj, arguments);\n    oldFunction.apply(obj, arguments);\n  };\n}\n\nexport default wrapFunction;","map":{"version":3,"sources":["C:/Users/passa/Desktop/WaterLevelReact/node_modules/cesium/Source/Core/wrapFunction.js"],"names":["DeveloperError","wrapFunction","obj","oldFunction","newFunction","apply","arguments"],"mappings":"AAAA,OAAOA,cAAP,MAA2B,qBAA3B;AAEA;;;;;;;;AAOA,SAASC,YAAT,CAAsBC,GAAtB,EAA2BC,WAA3B,EAAwCC,WAAxC,EAAqD;AACnD;AACA,MAAI,OAAOD,WAAP,KAAuB,UAA3B,EAAuC;AACrC,UAAM,IAAIH,cAAJ,CAAmB,2CAAnB,CAAN;AACD;;AAED,MAAI,OAAOI,WAAP,KAAuB,UAA3B,EAAuC;AACrC,UAAM,IAAIJ,cAAJ,CAAmB,2CAAnB,CAAN;AACD,GARkD,CASnD;;;AAEA,SAAO,YAAY;AACjBI,IAAAA,WAAW,CAACC,KAAZ,CAAkBH,GAAlB,EAAuBI,SAAvB;AACAH,IAAAA,WAAW,CAACE,KAAZ,CAAkBH,GAAlB,EAAuBI,SAAvB;AACD,GAHD;AAID;;AACD,eAAeL,YAAf","sourcesContent":["import DeveloperError from \"./DeveloperError.js\";\n\n/**\n * Wraps a function on the provided objects with another function called in the\n * object's context so that the new function is always called immediately\n * before the old one.\n *\n * @private\n */\nfunction wrapFunction(obj, oldFunction, newFunction) {\n  //>>includeStart('debug', pragmas.debug);\n  if (typeof oldFunction !== \"function\") {\n    throw new DeveloperError(\"oldFunction is required to be a function.\");\n  }\n\n  if (typeof newFunction !== \"function\") {\n    throw new DeveloperError(\"oldFunction is required to be a function.\");\n  }\n  //>>includeEnd('debug');\n\n  return function () {\n    newFunction.apply(obj, arguments);\n    oldFunction.apply(obj, arguments);\n  };\n}\nexport default wrapFunction;\n"]},"metadata":{},"sourceType":"module"}
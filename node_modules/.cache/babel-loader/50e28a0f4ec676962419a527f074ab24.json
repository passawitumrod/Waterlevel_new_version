{"ast":null,"code":"import defined from \"../Core/defined.js\";\nimport destroyObject from \"../Core/destroyObject.js\";\nimport DeveloperError from \"../Core/DeveloperError.js\";\nimport CesiumMath from \"../Core/Math.js\";\nimport Matrix3 from \"../Core/Matrix3.js\";\nimport Quaternion from \"../Core/Quaternion.js\";\n/**\n * @private\n */\n\nfunction DeviceOrientationCameraController(scene) {\n  //>>includeStart('debug', pragmas.debug);\n  if (!defined(scene)) {\n    throw new DeveloperError(\"scene is required.\");\n  } //>>includeEnd('debug');\n\n\n  this._scene = scene;\n  this._lastAlpha = undefined;\n  this._lastBeta = undefined;\n  this._lastGamma = undefined;\n  this._alpha = undefined;\n  this._beta = undefined;\n  this._gamma = undefined;\n  var that = this;\n\n  function callback(e) {\n    var alpha = e.alpha;\n\n    if (!defined(alpha)) {\n      that._alpha = undefined;\n      that._beta = undefined;\n      that._gamma = undefined;\n      return;\n    }\n\n    that._alpha = CesiumMath.toRadians(alpha);\n    that._beta = CesiumMath.toRadians(e.beta);\n    that._gamma = CesiumMath.toRadians(e.gamma);\n  }\n\n  window.addEventListener(\"deviceorientation\", callback, false);\n\n  this._removeListener = function () {\n    window.removeEventListener(\"deviceorientation\", callback, false);\n  };\n}\n\nvar scratchQuaternion1 = new Quaternion();\nvar scratchQuaternion2 = new Quaternion();\nvar scratchMatrix3 = new Matrix3();\n\nfunction rotate(camera, alpha, beta, gamma) {\n  var direction = camera.direction;\n  var right = camera.right;\n  var up = camera.up;\n  var bQuat = Quaternion.fromAxisAngle(direction, beta, scratchQuaternion2);\n  var gQuat = Quaternion.fromAxisAngle(right, gamma, scratchQuaternion1);\n  var rotQuat = Quaternion.multiply(gQuat, bQuat, gQuat);\n  var aQuat = Quaternion.fromAxisAngle(up, alpha, scratchQuaternion2);\n  Quaternion.multiply(aQuat, rotQuat, rotQuat);\n  var matrix = Matrix3.fromQuaternion(rotQuat, scratchMatrix3);\n  Matrix3.multiplyByVector(matrix, right, right);\n  Matrix3.multiplyByVector(matrix, up, up);\n  Matrix3.multiplyByVector(matrix, direction, direction);\n}\n\nDeviceOrientationCameraController.prototype.update = function () {\n  if (!defined(this._alpha)) {\n    return;\n  }\n\n  if (!defined(this._lastAlpha)) {\n    this._lastAlpha = this._alpha;\n    this._lastBeta = this._beta;\n    this._lastGamma = this._gamma;\n  }\n\n  var a = this._lastAlpha - this._alpha;\n  var b = this._lastBeta - this._beta;\n  var g = this._lastGamma - this._gamma;\n  rotate(this._scene.camera, -a, b, g);\n  this._lastAlpha = this._alpha;\n  this._lastBeta = this._beta;\n  this._lastGamma = this._gamma;\n};\n/**\n * Returns true if this object was destroyed; otherwise, false.\n * <br /><br />\n *\n * @returns {Boolean} <code>true</code> if this object was destroyed; otherwise, <code>false</code>.\n */\n\n\nDeviceOrientationCameraController.prototype.isDestroyed = function () {\n  return false;\n};\n/**\n * Destroys the resources held by this object.  Destroying an object allows for deterministic\n * release of resources, instead of relying on the garbage collector to destroy this object.\n * <br /><br />\n * Once an object is destroyed, it should not be used; calling any function other than\n * <code>isDestroyed</code> will result in a {@link DeveloperError} exception.  Therefore,\n * assign the return value (<code>undefined</code>) to the object as done in the example.\n *\n * @exception {DeveloperError} This object was destroyed, i.e., destroy() was called.\n */\n\n\nDeviceOrientationCameraController.prototype.destroy = function () {\n  this._removeListener();\n\n  return destroyObject(this);\n};\n\nexport default DeviceOrientationCameraController;","map":{"version":3,"sources":["C:/Users/passa/Desktop/WaterLevelReact/node_modules/cesium/Source/Scene/DeviceOrientationCameraController.js"],"names":["defined","destroyObject","DeveloperError","CesiumMath","Matrix3","Quaternion","DeviceOrientationCameraController","scene","_scene","_lastAlpha","undefined","_lastBeta","_lastGamma","_alpha","_beta","_gamma","that","callback","e","alpha","toRadians","beta","gamma","window","addEventListener","_removeListener","removeEventListener","scratchQuaternion1","scratchQuaternion2","scratchMatrix3","rotate","camera","direction","right","up","bQuat","fromAxisAngle","gQuat","rotQuat","multiply","aQuat","matrix","fromQuaternion","multiplyByVector","prototype","update","a","b","g","isDestroyed","destroy"],"mappings":"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","sourcesContent":["import defined from \"../Core/defined.js\";\nimport destroyObject from \"../Core/destroyObject.js\";\nimport DeveloperError from \"../Core/DeveloperError.js\";\nimport CesiumMath from \"../Core/Math.js\";\nimport Matrix3 from \"../Core/Matrix3.js\";\nimport Quaternion from \"../Core/Quaternion.js\";\n\n/**\n * @private\n */\nfunction DeviceOrientationCameraController(scene) {\n  //>>includeStart('debug', pragmas.debug);\n  if (!defined(scene)) {\n    throw new DeveloperError(\"scene is required.\");\n  }\n  //>>includeEnd('debug');\n\n  this._scene = scene;\n\n  this._lastAlpha = undefined;\n  this._lastBeta = undefined;\n  this._lastGamma = undefined;\n\n  this._alpha = undefined;\n  this._beta = undefined;\n  this._gamma = undefined;\n\n  var that = this;\n\n  function callback(e) {\n    var alpha = e.alpha;\n    if (!defined(alpha)) {\n      that._alpha = undefined;\n      that._beta = undefined;\n      that._gamma = undefined;\n      return;\n    }\n\n    that._alpha = CesiumMath.toRadians(alpha);\n    that._beta = CesiumMath.toRadians(e.beta);\n    that._gamma = CesiumMath.toRadians(e.gamma);\n  }\n\n  window.addEventListener(\"deviceorientation\", callback, false);\n\n  this._removeListener = function () {\n    window.removeEventListener(\"deviceorientation\", callback, false);\n  };\n}\n\nvar scratchQuaternion1 = new Quaternion();\nvar scratchQuaternion2 = new Quaternion();\nvar scratchMatrix3 = new Matrix3();\n\nfunction rotate(camera, alpha, beta, gamma) {\n  var direction = camera.direction;\n  var right = camera.right;\n  var up = camera.up;\n\n  var bQuat = Quaternion.fromAxisAngle(direction, beta, scratchQuaternion2);\n  var gQuat = Quaternion.fromAxisAngle(right, gamma, scratchQuaternion1);\n\n  var rotQuat = Quaternion.multiply(gQuat, bQuat, gQuat);\n\n  var aQuat = Quaternion.fromAxisAngle(up, alpha, scratchQuaternion2);\n  Quaternion.multiply(aQuat, rotQuat, rotQuat);\n\n  var matrix = Matrix3.fromQuaternion(rotQuat, scratchMatrix3);\n  Matrix3.multiplyByVector(matrix, right, right);\n  Matrix3.multiplyByVector(matrix, up, up);\n  Matrix3.multiplyByVector(matrix, direction, direction);\n}\n\nDeviceOrientationCameraController.prototype.update = function () {\n  if (!defined(this._alpha)) {\n    return;\n  }\n\n  if (!defined(this._lastAlpha)) {\n    this._lastAlpha = this._alpha;\n    this._lastBeta = this._beta;\n    this._lastGamma = this._gamma;\n  }\n\n  var a = this._lastAlpha - this._alpha;\n  var b = this._lastBeta - this._beta;\n  var g = this._lastGamma - this._gamma;\n\n  rotate(this._scene.camera, -a, b, g);\n\n  this._lastAlpha = this._alpha;\n  this._lastBeta = this._beta;\n  this._lastGamma = this._gamma;\n};\n\n/**\n * Returns true if this object was destroyed; otherwise, false.\n * <br /><br />\n *\n * @returns {Boolean} <code>true</code> if this object was destroyed; otherwise, <code>false</code>.\n */\nDeviceOrientationCameraController.prototype.isDestroyed = function () {\n  return false;\n};\n\n/**\n * Destroys the resources held by this object.  Destroying an object allows for deterministic\n * release of resources, instead of relying on the garbage collector to destroy this object.\n * <br /><br />\n * Once an object is destroyed, it should not be used; calling any function other than\n * <code>isDestroyed</code> will result in a {@link DeveloperError} exception.  Therefore,\n * assign the return value (<code>undefined</code>) to the object as done in the example.\n *\n * @exception {DeveloperError} This object was destroyed, i.e., destroy() was called.\n */\nDeviceOrientationCameraController.prototype.destroy = function () {\n  this._removeListener();\n  return destroyObject(this);\n};\nexport default DeviceOrientationCameraController;\n"]},"metadata":{},"sourceType":"module"}
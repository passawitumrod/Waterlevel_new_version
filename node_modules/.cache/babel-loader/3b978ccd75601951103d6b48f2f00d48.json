{"ast":null,"code":"import Cartesian4 from \"../Core/Cartesian4.js\";\nimport defined from \"../Core/defined.js\";\nimport destroyObject from \"../Core/destroyObject.js\";\nimport PixelFormat from \"../Core/PixelFormat.js\";\nimport Framebuffer from \"../Renderer/Framebuffer.js\";\nimport PixelDatatype from \"../Renderer/PixelDatatype.js\";\nimport RenderState from \"../Renderer/RenderState.js\";\nimport ShaderSource from \"../Renderer/ShaderSource.js\";\nimport Texture from \"../Renderer/Texture.js\";\n/**\n * @private\n */\n\nfunction PickDepth() {\n  this._framebuffer = undefined;\n  this._depthTexture = undefined;\n  this._textureToCopy = undefined;\n  this._copyDepthCommand = undefined;\n  this._useLogDepth = undefined;\n  this._debugPickDepthViewportCommand = undefined;\n}\n\nfunction executeDebugPickDepth(pickDepth, context, passState, useLogDepth) {\n  if (!defined(pickDepth._debugPickDepthViewportCommand) || useLogDepth !== pickDepth._useLogDepth) {\n    var fsSource = \"uniform sampler2D u_texture;\\n\" + \"varying vec2 v_textureCoordinates;\\n\" + \"void main()\\n\" + \"{\\n\" + \"    float z_window = czm_unpackDepth(texture2D(u_texture, v_textureCoordinates));\\n\" + \"    z_window = czm_reverseLogDepth(z_window); \\n\" + \"    float n_range = czm_depthRange.near;\\n\" + \"    float f_range = czm_depthRange.far;\\n\" + \"    float z_ndc = (2.0 * z_window - n_range - f_range) / (f_range - n_range);\\n\" + \"    float scale = pow(z_ndc * 0.5 + 0.5, 8.0);\\n\" + \"    gl_FragColor = vec4(mix(vec3(0.0), vec3(1.0), scale), 1.0);\\n\" + \"}\\n\";\n    var fs = new ShaderSource({\n      defines: [useLogDepth ? \"LOG_DEPTH\" : \"\"],\n      sources: [fsSource]\n    });\n    pickDepth._debugPickDepthViewportCommand = context.createViewportQuadCommand(fs, {\n      uniformMap: {\n        u_texture: function u_texture() {\n          return pickDepth._depthTexture;\n        }\n      },\n      owner: pickDepth\n    });\n    pickDepth._useLogDepth = useLogDepth;\n  }\n\n  pickDepth._debugPickDepthViewportCommand.execute(context, passState);\n}\n\nfunction destroyTextures(pickDepth) {\n  pickDepth._depthTexture = pickDepth._depthTexture && !pickDepth._depthTexture.isDestroyed() && pickDepth._depthTexture.destroy();\n}\n\nfunction destroyFramebuffers(pickDepth) {\n  pickDepth._framebuffer = pickDepth._framebuffer && !pickDepth._framebuffer.isDestroyed() && pickDepth._framebuffer.destroy();\n}\n\nfunction createTextures(pickDepth, context, width, height) {\n  pickDepth._depthTexture = new Texture({\n    context: context,\n    width: width,\n    height: height,\n    pixelFormat: PixelFormat.RGBA,\n    pixelDatatype: PixelDatatype.UNSIGNED_BYTE\n  });\n}\n\nfunction createFramebuffers(pickDepth, context, width, height) {\n  destroyTextures(pickDepth);\n  destroyFramebuffers(pickDepth);\n  createTextures(pickDepth, context, width, height);\n  pickDepth._framebuffer = new Framebuffer({\n    context: context,\n    colorTextures: [pickDepth._depthTexture],\n    destroyAttachments: false\n  });\n}\n\nfunction updateFramebuffers(pickDepth, context, depthTexture) {\n  var width = depthTexture.width;\n  var height = depthTexture.height;\n  var texture = pickDepth._depthTexture;\n  var textureChanged = !defined(texture) || texture.width !== width || texture.height !== height;\n\n  if (!defined(pickDepth._framebuffer) || textureChanged) {\n    createFramebuffers(pickDepth, context, width, height);\n  }\n}\n\nfunction updateCopyCommands(pickDepth, context, depthTexture) {\n  if (!defined(pickDepth._copyDepthCommand)) {\n    var fs = \"uniform sampler2D u_texture;\\n\" + \"varying vec2 v_textureCoordinates;\\n\" + \"void main()\\n\" + \"{\\n\" + \"    gl_FragColor = czm_packDepth(texture2D(u_texture, v_textureCoordinates).r);\\n\" + \"}\\n\";\n    pickDepth._copyDepthCommand = context.createViewportQuadCommand(fs, {\n      renderState: RenderState.fromCache(),\n      uniformMap: {\n        u_texture: function u_texture() {\n          return pickDepth._textureToCopy;\n        }\n      },\n      owner: pickDepth\n    });\n  }\n\n  pickDepth._textureToCopy = depthTexture;\n  pickDepth._copyDepthCommand.framebuffer = pickDepth._framebuffer;\n}\n\nPickDepth.prototype.executeDebugPickDepth = function (context, passState, useLogDepth) {\n  executeDebugPickDepth(this, context, passState, useLogDepth);\n};\n\nPickDepth.prototype.update = function (context, depthTexture) {\n  updateFramebuffers(this, context, depthTexture);\n  updateCopyCommands(this, context, depthTexture);\n};\n\nvar scratchPackedDepth = new Cartesian4();\nvar packedDepthScale = new Cartesian4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0);\n\nPickDepth.prototype.getDepth = function (context, x, y) {\n  var pixels = context.readPixels({\n    x: x,\n    y: y,\n    width: 1,\n    height: 1,\n    framebuffer: this._framebuffer\n  });\n  var packedDepth = Cartesian4.unpack(pixels, 0, scratchPackedDepth);\n  Cartesian4.divideByScalar(packedDepth, 255.0, packedDepth);\n  return Cartesian4.dot(packedDepth, packedDepthScale);\n};\n\nPickDepth.prototype.executeCopyDepth = function (context, passState) {\n  this._copyDepthCommand.execute(context, passState);\n};\n\nPickDepth.prototype.isDestroyed = function () {\n  return false;\n};\n\nPickDepth.prototype.destroy = function () {\n  destroyTextures(this);\n  destroyFramebuffers(this);\n  this._copyDepthCommand.shaderProgram = defined(this._copyDepthCommand.shaderProgram) && this._copyDepthCommand.shaderProgram.destroy();\n  return destroyObject(this);\n};\n\nexport default PickDepth;","map":{"version":3,"sources":["C:/Users/passa/Desktop/WaterLevelReact/node_modules/cesium/Source/Scene/PickDepth.js"],"names":["Cartesian4","defined","destroyObject","PixelFormat","Framebuffer","PixelDatatype","RenderState","ShaderSource","Texture","PickDepth","_framebuffer","undefined","_depthTexture","_textureToCopy","_copyDepthCommand","_useLogDepth","_debugPickDepthViewportCommand","executeDebugPickDepth","pickDepth","context","passState","useLogDepth","fsSource","fs","defines","sources","createViewportQuadCommand","uniformMap","u_texture","owner","execute","destroyTextures","isDestroyed","destroy","destroyFramebuffers","createTextures","width","height","pixelFormat","RGBA","pixelDatatype","UNSIGNED_BYTE","createFramebuffers","colorTextures","destroyAttachments","updateFramebuffers","depthTexture","texture","textureChanged","updateCopyCommands","renderState","fromCache","framebuffer","prototype","update","scratchPackedDepth","packedDepthScale","getDepth","x","y","pixels","readPixels","packedDepth","unpack","divideByScalar","dot","executeCopyDepth","shaderProgram"],"mappings":"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","sourcesContent":["import Cartesian4 from \"../Core/Cartesian4.js\";\nimport defined from \"../Core/defined.js\";\nimport destroyObject from \"../Core/destroyObject.js\";\nimport PixelFormat from \"../Core/PixelFormat.js\";\nimport Framebuffer from \"../Renderer/Framebuffer.js\";\nimport PixelDatatype from \"../Renderer/PixelDatatype.js\";\nimport RenderState from \"../Renderer/RenderState.js\";\nimport ShaderSource from \"../Renderer/ShaderSource.js\";\nimport Texture from \"../Renderer/Texture.js\";\n\n/**\n * @private\n */\nfunction PickDepth() {\n  this._framebuffer = undefined;\n\n  this._depthTexture = undefined;\n  this._textureToCopy = undefined;\n  this._copyDepthCommand = undefined;\n\n  this._useLogDepth = undefined;\n\n  this._debugPickDepthViewportCommand = undefined;\n}\n\nfunction executeDebugPickDepth(pickDepth, context, passState, useLogDepth) {\n  if (\n    !defined(pickDepth._debugPickDepthViewportCommand) ||\n    useLogDepth !== pickDepth._useLogDepth\n  ) {\n    var fsSource =\n      \"uniform sampler2D u_texture;\\n\" +\n      \"varying vec2 v_textureCoordinates;\\n\" +\n      \"void main()\\n\" +\n      \"{\\n\" +\n      \"    float z_window = czm_unpackDepth(texture2D(u_texture, v_textureCoordinates));\\n\" +\n      \"    z_window = czm_reverseLogDepth(z_window); \\n\" +\n      \"    float n_range = czm_depthRange.near;\\n\" +\n      \"    float f_range = czm_depthRange.far;\\n\" +\n      \"    float z_ndc = (2.0 * z_window - n_range - f_range) / (f_range - n_range);\\n\" +\n      \"    float scale = pow(z_ndc * 0.5 + 0.5, 8.0);\\n\" +\n      \"    gl_FragColor = vec4(mix(vec3(0.0), vec3(1.0), scale), 1.0);\\n\" +\n      \"}\\n\";\n    var fs = new ShaderSource({\n      defines: [useLogDepth ? \"LOG_DEPTH\" : \"\"],\n      sources: [fsSource],\n    });\n\n    pickDepth._debugPickDepthViewportCommand = context.createViewportQuadCommand(\n      fs,\n      {\n        uniformMap: {\n          u_texture: function () {\n            return pickDepth._depthTexture;\n          },\n        },\n        owner: pickDepth,\n      }\n    );\n\n    pickDepth._useLogDepth = useLogDepth;\n  }\n\n  pickDepth._debugPickDepthViewportCommand.execute(context, passState);\n}\n\nfunction destroyTextures(pickDepth) {\n  pickDepth._depthTexture =\n    pickDepth._depthTexture &&\n    !pickDepth._depthTexture.isDestroyed() &&\n    pickDepth._depthTexture.destroy();\n}\n\nfunction destroyFramebuffers(pickDepth) {\n  pickDepth._framebuffer =\n    pickDepth._framebuffer &&\n    !pickDepth._framebuffer.isDestroyed() &&\n    pickDepth._framebuffer.destroy();\n}\n\nfunction createTextures(pickDepth, context, width, height) {\n  pickDepth._depthTexture = new Texture({\n    context: context,\n    width: width,\n    height: height,\n    pixelFormat: PixelFormat.RGBA,\n    pixelDatatype: PixelDatatype.UNSIGNED_BYTE,\n  });\n}\n\nfunction createFramebuffers(pickDepth, context, width, height) {\n  destroyTextures(pickDepth);\n  destroyFramebuffers(pickDepth);\n\n  createTextures(pickDepth, context, width, height);\n\n  pickDepth._framebuffer = new Framebuffer({\n    context: context,\n    colorTextures: [pickDepth._depthTexture],\n    destroyAttachments: false,\n  });\n}\n\nfunction updateFramebuffers(pickDepth, context, depthTexture) {\n  var width = depthTexture.width;\n  var height = depthTexture.height;\n\n  var texture = pickDepth._depthTexture;\n  var textureChanged =\n    !defined(texture) || texture.width !== width || texture.height !== height;\n  if (!defined(pickDepth._framebuffer) || textureChanged) {\n    createFramebuffers(pickDepth, context, width, height);\n  }\n}\n\nfunction updateCopyCommands(pickDepth, context, depthTexture) {\n  if (!defined(pickDepth._copyDepthCommand)) {\n    var fs =\n      \"uniform sampler2D u_texture;\\n\" +\n      \"varying vec2 v_textureCoordinates;\\n\" +\n      \"void main()\\n\" +\n      \"{\\n\" +\n      \"    gl_FragColor = czm_packDepth(texture2D(u_texture, v_textureCoordinates).r);\\n\" +\n      \"}\\n\";\n    pickDepth._copyDepthCommand = context.createViewportQuadCommand(fs, {\n      renderState: RenderState.fromCache(),\n      uniformMap: {\n        u_texture: function () {\n          return pickDepth._textureToCopy;\n        },\n      },\n      owner: pickDepth,\n    });\n  }\n\n  pickDepth._textureToCopy = depthTexture;\n  pickDepth._copyDepthCommand.framebuffer = pickDepth._framebuffer;\n}\n\nPickDepth.prototype.executeDebugPickDepth = function (\n  context,\n  passState,\n  useLogDepth\n) {\n  executeDebugPickDepth(this, context, passState, useLogDepth);\n};\n\nPickDepth.prototype.update = function (context, depthTexture) {\n  updateFramebuffers(this, context, depthTexture);\n  updateCopyCommands(this, context, depthTexture);\n};\n\nvar scratchPackedDepth = new Cartesian4();\nvar packedDepthScale = new Cartesian4(\n  1.0,\n  1.0 / 255.0,\n  1.0 / 65025.0,\n  1.0 / 16581375.0\n);\n\nPickDepth.prototype.getDepth = function (context, x, y) {\n  var pixels = context.readPixels({\n    x: x,\n    y: y,\n    width: 1,\n    height: 1,\n    framebuffer: this._framebuffer,\n  });\n\n  var packedDepth = Cartesian4.unpack(pixels, 0, scratchPackedDepth);\n  Cartesian4.divideByScalar(packedDepth, 255.0, packedDepth);\n  return Cartesian4.dot(packedDepth, packedDepthScale);\n};\n\nPickDepth.prototype.executeCopyDepth = function (context, passState) {\n  this._copyDepthCommand.execute(context, passState);\n};\n\nPickDepth.prototype.isDestroyed = function () {\n  return false;\n};\n\nPickDepth.prototype.destroy = function () {\n  destroyTextures(this);\n  destroyFramebuffers(this);\n\n  this._copyDepthCommand.shaderProgram =\n    defined(this._copyDepthCommand.shaderProgram) &&\n    this._copyDepthCommand.shaderProgram.destroy();\n\n  return destroyObject(this);\n};\nexport default PickDepth;\n"]},"metadata":{},"sourceType":"module"}
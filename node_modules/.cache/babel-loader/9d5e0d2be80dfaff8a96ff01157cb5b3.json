{"ast":null,"code":"import defined from \"./defined.js\";\nimport DeveloperError from \"./DeveloperError.js\";\nimport getAbsoluteUri from \"./getAbsoluteUri.js\";\nimport Resource from \"./Resource.js\";\n/*global CESIUM_BASE_URL*/\n\nvar cesiumScriptRegex = /((?:.*\\/)|^)Cesium\\.js$/;\n\nfunction getBaseUrlFromCesiumScript() {\n  var scripts = document.getElementsByTagName(\"script\");\n\n  for (var i = 0, len = scripts.length; i < len; ++i) {\n    var src = scripts[i].getAttribute(\"src\");\n    var result = cesiumScriptRegex.exec(src);\n\n    if (result !== null) {\n      return result[1];\n    }\n  }\n\n  return undefined;\n}\n\nvar a;\n\nfunction tryMakeAbsolute(url) {\n  if (typeof document === \"undefined\") {\n    //Node.js and Web Workers. In both cases, the URL will already be absolute.\n    return url;\n  }\n\n  if (!defined(a)) {\n    a = document.createElement(\"a\");\n  }\n\n  a.href = url; // IE only absolutizes href on get, not set\n  // eslint-disable-next-line no-self-assign\n\n  a.href = a.href;\n  return a.href;\n}\n\nvar baseResource;\n\nfunction getCesiumBaseUrl() {\n  if (defined(baseResource)) {\n    return baseResource;\n  }\n\n  var baseUrlString;\n\n  if (typeof CESIUM_BASE_URL !== \"undefined\") {\n    baseUrlString = CESIUM_BASE_URL;\n  } else if (typeof define === \"object\" && defined(define.amd) && !define.amd.toUrlUndefined && defined(require.toUrl)) {\n    baseUrlString = getAbsoluteUri(\"..\", buildModuleUrl(\"Core/buildModuleUrl.js\"));\n  } else {\n    baseUrlString = getBaseUrlFromCesiumScript();\n  } //>>includeStart('debug', pragmas.debug);\n\n\n  if (!defined(baseUrlString)) {\n    throw new DeveloperError(\"Unable to determine Cesium base URL automatically, try defining a global variable called CESIUM_BASE_URL.\");\n  } //>>includeEnd('debug');\n\n\n  baseResource = new Resource({\n    url: tryMakeAbsolute(baseUrlString)\n  });\n  baseResource.appendForwardSlash();\n  return baseResource;\n}\n\nfunction buildModuleUrlFromRequireToUrl(moduleID) {\n  //moduleID will be non-relative, so require it relative to this module, in Core.\n  return tryMakeAbsolute(require.toUrl(\"../\" + moduleID));\n}\n\nfunction buildModuleUrlFromBaseUrl(moduleID) {\n  var resource = getCesiumBaseUrl().getDerivedResource({\n    url: moduleID\n  });\n  return resource.url;\n}\n\nvar implementation;\n/**\n * Given a non-relative moduleID, returns an absolute URL to the file represented by that module ID,\n * using, in order of preference, require.toUrl, the value of a global CESIUM_BASE_URL, or\n * the base URL of the Cesium.js script.\n *\n * @private\n */\n\nfunction buildModuleUrl(moduleID) {\n  if (!defined(implementation)) {\n    //select implementation\n    if (typeof define === \"object\" && defined(define.amd) && !define.amd.toUrlUndefined && defined(require.toUrl)) {\n      implementation = buildModuleUrlFromRequireToUrl;\n    } else {\n      implementation = buildModuleUrlFromBaseUrl;\n    }\n  }\n\n  var url = implementation(moduleID);\n  return url;\n} // exposed for testing\n\n\nbuildModuleUrl._cesiumScriptRegex = cesiumScriptRegex;\nbuildModuleUrl._buildModuleUrlFromBaseUrl = buildModuleUrlFromBaseUrl;\n\nbuildModuleUrl._clearBaseResource = function () {\n  baseResource = undefined;\n};\n/**\n * Sets the base URL for resolving modules.\n * @param {String} value The new base URL.\n */\n\n\nbuildModuleUrl.setBaseUrl = function (value) {\n  baseResource = Resource.DEFAULT.getDerivedResource({\n    url: value\n  });\n};\n/**\n * Gets the base URL for resolving modules.\n */\n\n\nbuildModuleUrl.getCesiumBaseUrl = getCesiumBaseUrl;\nexport default buildModuleUrl;","map":{"version":3,"sources":["C:/Users/passa/Desktop/WaterDeployTrial/node_modules/cesium/Source/Core/buildModuleUrl.js"],"names":["defined","DeveloperError","getAbsoluteUri","Resource","cesiumScriptRegex","getBaseUrlFromCesiumScript","scripts","document","getElementsByTagName","i","len","length","src","getAttribute","result","exec","undefined","a","tryMakeAbsolute","url","createElement","href","baseResource","getCesiumBaseUrl","baseUrlString","CESIUM_BASE_URL","define","amd","toUrlUndefined","require","toUrl","buildModuleUrl","appendForwardSlash","buildModuleUrlFromRequireToUrl","moduleID","buildModuleUrlFromBaseUrl","resource","getDerivedResource","implementation","_cesiumScriptRegex","_buildModuleUrlFromBaseUrl","_clearBaseResource","setBaseUrl","value","DEFAULT"],"mappings":"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","sourcesContent":["import defined from \"./defined.js\";\nimport DeveloperError from \"./DeveloperError.js\";\nimport getAbsoluteUri from \"./getAbsoluteUri.js\";\nimport Resource from \"./Resource.js\";\n\n/*global CESIUM_BASE_URL*/\n\nvar cesiumScriptRegex = /((?:.*\\/)|^)Cesium\\.js$/;\nfunction getBaseUrlFromCesiumScript() {\n  var scripts = document.getElementsByTagName(\"script\");\n  for (var i = 0, len = scripts.length; i < len; ++i) {\n    var src = scripts[i].getAttribute(\"src\");\n    var result = cesiumScriptRegex.exec(src);\n    if (result !== null) {\n      return result[1];\n    }\n  }\n  return undefined;\n}\n\nvar a;\nfunction tryMakeAbsolute(url) {\n  if (typeof document === \"undefined\") {\n    //Node.js and Web Workers. In both cases, the URL will already be absolute.\n    return url;\n  }\n\n  if (!defined(a)) {\n    a = document.createElement(\"a\");\n  }\n  a.href = url;\n\n  // IE only absolutizes href on get, not set\n  // eslint-disable-next-line no-self-assign\n  a.href = a.href;\n  return a.href;\n}\n\nvar baseResource;\nfunction getCesiumBaseUrl() {\n  if (defined(baseResource)) {\n    return baseResource;\n  }\n\n  var baseUrlString;\n  if (typeof CESIUM_BASE_URL !== \"undefined\") {\n    baseUrlString = CESIUM_BASE_URL;\n  } else if (\n    typeof define === \"object\" &&\n    defined(define.amd) &&\n    !define.amd.toUrlUndefined &&\n    defined(require.toUrl)\n  ) {\n    baseUrlString = getAbsoluteUri(\n      \"..\",\n      buildModuleUrl(\"Core/buildModuleUrl.js\")\n    );\n  } else {\n    baseUrlString = getBaseUrlFromCesiumScript();\n  }\n\n  //>>includeStart('debug', pragmas.debug);\n  if (!defined(baseUrlString)) {\n    throw new DeveloperError(\n      \"Unable to determine Cesium base URL automatically, try defining a global variable called CESIUM_BASE_URL.\"\n    );\n  }\n  //>>includeEnd('debug');\n\n  baseResource = new Resource({\n    url: tryMakeAbsolute(baseUrlString),\n  });\n  baseResource.appendForwardSlash();\n\n  return baseResource;\n}\n\nfunction buildModuleUrlFromRequireToUrl(moduleID) {\n  //moduleID will be non-relative, so require it relative to this module, in Core.\n  return tryMakeAbsolute(require.toUrl(\"../\" + moduleID));\n}\n\nfunction buildModuleUrlFromBaseUrl(moduleID) {\n  var resource = getCesiumBaseUrl().getDerivedResource({\n    url: moduleID,\n  });\n  return resource.url;\n}\n\nvar implementation;\n\n/**\n * Given a non-relative moduleID, returns an absolute URL to the file represented by that module ID,\n * using, in order of preference, require.toUrl, the value of a global CESIUM_BASE_URL, or\n * the base URL of the Cesium.js script.\n *\n * @private\n */\nfunction buildModuleUrl(moduleID) {\n  if (!defined(implementation)) {\n    //select implementation\n    if (\n      typeof define === \"object\" &&\n      defined(define.amd) &&\n      !define.amd.toUrlUndefined &&\n      defined(require.toUrl)\n    ) {\n      implementation = buildModuleUrlFromRequireToUrl;\n    } else {\n      implementation = buildModuleUrlFromBaseUrl;\n    }\n  }\n\n  var url = implementation(moduleID);\n  return url;\n}\n\n// exposed for testing\nbuildModuleUrl._cesiumScriptRegex = cesiumScriptRegex;\nbuildModuleUrl._buildModuleUrlFromBaseUrl = buildModuleUrlFromBaseUrl;\nbuildModuleUrl._clearBaseResource = function () {\n  baseResource = undefined;\n};\n\n/**\n * Sets the base URL for resolving modules.\n * @param {String} value The new base URL.\n */\nbuildModuleUrl.setBaseUrl = function (value) {\n  baseResource = Resource.DEFAULT.getDerivedResource({\n    url: value,\n  });\n};\n\n/**\n * Gets the base URL for resolving modules.\n */\nbuildModuleUrl.getCesiumBaseUrl = getCesiumBaseUrl;\n\nexport default buildModuleUrl;\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import defaultValue from \"./defaultValue.js\";\nimport defined from \"./defined.js\";\nimport DeveloperError from \"./DeveloperError.js\";\nvar warnings = {};\n/**\n * Logs a one time message to the console.  Use this function instead of\n * <code>console.log</code> directly since this does not log duplicate messages\n * unless it is called from multiple workers.\n *\n * @exports oneTimeWarning\n *\n * @param {String} identifier The unique identifier for this warning.\n * @param {String} [message=identifier] The message to log to the console.\n *\n * @example\n * for(var i=0;i<foo.length;++i) {\n *    if (!defined(foo[i].bar)) {\n *       // Something that can be recovered from but may happen a lot\n *       oneTimeWarning('foo.bar undefined', 'foo.bar is undefined. Setting to 0.');\n *       foo[i].bar = 0;\n *       // ...\n *    }\n * }\n *\n * @private\n */\n\nfunction oneTimeWarning(identifier, message) {\n  //>>includeStart('debug', pragmas.debug);\n  if (!defined(identifier)) {\n    throw new DeveloperError(\"identifier is required.\");\n  } //>>includeEnd('debug');\n\n\n  if (!defined(warnings[identifier])) {\n    warnings[identifier] = true;\n    console.warn(defaultValue(message, identifier));\n  }\n}\n\noneTimeWarning.geometryOutlines = \"Entity geometry outlines are unsupported on terrain. Outlines will be disabled. To enable outlines, disable geometry terrain clamping by explicitly setting height to 0.\";\noneTimeWarning.geometryZIndex = \"Entity geometry with zIndex are unsupported when height or extrudedHeight are defined.  zIndex will be ignored\";\noneTimeWarning.geometryHeightReference = \"Entity corridor, ellipse, polygon or rectangle with heightReference must also have a defined height.  heightReference will be ignored\";\noneTimeWarning.geometryExtrudedHeightReference = \"Entity corridor, ellipse, polygon or rectangle with extrudedHeightReference must also have a defined extrudedHeight.  extrudedHeightReference will be ignored\";\nexport default oneTimeWarning;","map":{"version":3,"sources":["C:/Users/passa/Desktop/WaterLevelReact/node_modules/cesium/Source/Core/oneTimeWarning.js"],"names":["defaultValue","defined","DeveloperError","warnings","oneTimeWarning","identifier","message","console","warn","geometryOutlines","geometryZIndex","geometryHeightReference","geometryExtrudedHeightReference"],"mappings":"AAAA,OAAOA,YAAP,MAAyB,mBAAzB;AACA,OAAOC,OAAP,MAAoB,cAApB;AACA,OAAOC,cAAP,MAA2B,qBAA3B;AAEA,IAAIC,QAAQ,GAAG,EAAf;AAEA;;;;;;;;;;;;;;;;;;;;;;;AAsBA,SAASC,cAAT,CAAwBC,UAAxB,EAAoCC,OAApC,EAA6C;AAC3C;AACA,MAAI,CAACL,OAAO,CAACI,UAAD,CAAZ,EAA0B;AACxB,UAAM,IAAIH,cAAJ,CAAmB,yBAAnB,CAAN;AACD,GAJ0C,CAK3C;;;AAEA,MAAI,CAACD,OAAO,CAACE,QAAQ,CAACE,UAAD,CAAT,CAAZ,EAAoC;AAClCF,IAAAA,QAAQ,CAACE,UAAD,CAAR,GAAuB,IAAvB;AACAE,IAAAA,OAAO,CAACC,IAAR,CAAaR,YAAY,CAACM,OAAD,EAAUD,UAAV,CAAzB;AACD;AACF;;AAEDD,cAAc,CAACK,gBAAf,GACE,0KADF;AAGAL,cAAc,CAACM,cAAf,GACE,gHADF;AAGAN,cAAc,CAACO,uBAAf,GACE,uIADF;AAEAP,cAAc,CAACQ,+BAAf,GACE,+JADF;AAEA,eAAeR,cAAf","sourcesContent":["import defaultValue from \"./defaultValue.js\";\nimport defined from \"./defined.js\";\nimport DeveloperError from \"./DeveloperError.js\";\n\nvar warnings = {};\n\n/**\n * Logs a one time message to the console.  Use this function instead of\n * <code>console.log</code> directly since this does not log duplicate messages\n * unless it is called from multiple workers.\n *\n * @exports oneTimeWarning\n *\n * @param {String} identifier The unique identifier for this warning.\n * @param {String} [message=identifier] The message to log to the console.\n *\n * @example\n * for(var i=0;i<foo.length;++i) {\n *    if (!defined(foo[i].bar)) {\n *       // Something that can be recovered from but may happen a lot\n *       oneTimeWarning('foo.bar undefined', 'foo.bar is undefined. Setting to 0.');\n *       foo[i].bar = 0;\n *       // ...\n *    }\n * }\n *\n * @private\n */\nfunction oneTimeWarning(identifier, message) {\n  //>>includeStart('debug', pragmas.debug);\n  if (!defined(identifier)) {\n    throw new DeveloperError(\"identifier is required.\");\n  }\n  //>>includeEnd('debug');\n\n  if (!defined(warnings[identifier])) {\n    warnings[identifier] = true;\n    console.warn(defaultValue(message, identifier));\n  }\n}\n\noneTimeWarning.geometryOutlines =\n  \"Entity geometry outlines are unsupported on terrain. Outlines will be disabled. To enable outlines, disable geometry terrain clamping by explicitly setting height to 0.\";\n\noneTimeWarning.geometryZIndex =\n  \"Entity geometry with zIndex are unsupported when height or extrudedHeight are defined.  zIndex will be ignored\";\n\noneTimeWarning.geometryHeightReference =\n  \"Entity corridor, ellipse, polygon or rectangle with heightReference must also have a defined height.  heightReference will be ignored\";\noneTimeWarning.geometryExtrudedHeightReference =\n  \"Entity corridor, ellipse, polygon or rectangle with extrudedHeightReference must also have a defined extrudedHeight.  extrudedHeightReference will be ignored\";\nexport default oneTimeWarning;\n"]},"metadata":{},"sourceType":"module"}
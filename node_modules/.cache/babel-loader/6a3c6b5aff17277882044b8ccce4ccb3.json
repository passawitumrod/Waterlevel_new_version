{"ast":null,"code":"import WebGLConstants from \"../Core/WebGLConstants.js\";\n/**\n * Determines the function used to compare two depths for the depth test.\n *\n * @exports DepthFunction\n */\n\nvar DepthFunction = {\n  /**\n   * The depth test never passes.\n   *\n   * @type {Number}\n   * @constant\n   */\n  NEVER: WebGLConstants.NEVER,\n\n  /**\n   * The depth test passes if the incoming depth is less than the stored depth.\n   *\n   * @type {Number}\n   * @constant\n   */\n  LESS: WebGLConstants.LESS,\n\n  /**\n   * The depth test passes if the incoming depth is equal to the stored depth.\n   *\n   * @type {Number}\n   * @constant\n   */\n  EQUAL: WebGLConstants.EQUAL,\n\n  /**\n   * The depth test passes if the incoming depth is less than or equal to the stored depth.\n   *\n   * @type {Number}\n   * @constant\n   */\n  LESS_OR_EQUAL: WebGLConstants.LEQUAL,\n\n  /**\n   * The depth test passes if the incoming depth is greater than the stored depth.\n   *\n   * @type {Number}\n   * @constant\n   */\n  GREATER: WebGLConstants.GREATER,\n\n  /**\n   * The depth test passes if the incoming depth is not equal to the stored depth.\n   *\n   * @type {Number}\n   * @constant\n   */\n  NOT_EQUAL: WebGLConstants.NOTEQUAL,\n\n  /**\n   * The depth test passes if the incoming depth is greater than or equal to the stored depth.\n   *\n   * @type {Number}\n   * @constant\n   */\n  GREATER_OR_EQUAL: WebGLConstants.GEQUAL,\n\n  /**\n   * The depth test always passes.\n   *\n   * @type {Number}\n   * @constant\n   */\n  ALWAYS: WebGLConstants.ALWAYS\n};\nexport default Object.freeze(DepthFunction);","map":{"version":3,"sources":["C:/Users/passa/Desktop/WaterLevelReact/node_modules/cesium/Source/Scene/DepthFunction.js"],"names":["WebGLConstants","DepthFunction","NEVER","LESS","EQUAL","LESS_OR_EQUAL","LEQUAL","GREATER","NOT_EQUAL","NOTEQUAL","GREATER_OR_EQUAL","GEQUAL","ALWAYS","Object","freeze"],"mappings":"AAAA,OAAOA,cAAP,MAA2B,2BAA3B;AAEA;;;;;;AAKA,IAAIC,aAAa,GAAG;AAClB;;;;;;AAMAC,EAAAA,KAAK,EAAEF,cAAc,CAACE,KAPJ;;AASlB;;;;;;AAMAC,EAAAA,IAAI,EAAEH,cAAc,CAACG,IAfH;;AAiBlB;;;;;;AAMAC,EAAAA,KAAK,EAAEJ,cAAc,CAACI,KAvBJ;;AAyBlB;;;;;;AAMAC,EAAAA,aAAa,EAAEL,cAAc,CAACM,MA/BZ;;AAiClB;;;;;;AAMAC,EAAAA,OAAO,EAAEP,cAAc,CAACO,OAvCN;;AAyClB;;;;;;AAMAC,EAAAA,SAAS,EAAER,cAAc,CAACS,QA/CR;;AAiDlB;;;;;;AAMAC,EAAAA,gBAAgB,EAAEV,cAAc,CAACW,MAvDf;;AAyDlB;;;;;;AAMAC,EAAAA,MAAM,EAAEZ,cAAc,CAACY;AA/DL,CAApB;AAiEA,eAAeC,MAAM,CAACC,MAAP,CAAcb,aAAd,CAAf","sourcesContent":["import WebGLConstants from \"../Core/WebGLConstants.js\";\n\n/**\n * Determines the function used to compare two depths for the depth test.\n *\n * @exports DepthFunction\n */\nvar DepthFunction = {\n  /**\n   * The depth test never passes.\n   *\n   * @type {Number}\n   * @constant\n   */\n  NEVER: WebGLConstants.NEVER,\n\n  /**\n   * The depth test passes if the incoming depth is less than the stored depth.\n   *\n   * @type {Number}\n   * @constant\n   */\n  LESS: WebGLConstants.LESS,\n\n  /**\n   * The depth test passes if the incoming depth is equal to the stored depth.\n   *\n   * @type {Number}\n   * @constant\n   */\n  EQUAL: WebGLConstants.EQUAL,\n\n  /**\n   * The depth test passes if the incoming depth is less than or equal to the stored depth.\n   *\n   * @type {Number}\n   * @constant\n   */\n  LESS_OR_EQUAL: WebGLConstants.LEQUAL,\n\n  /**\n   * The depth test passes if the incoming depth is greater than the stored depth.\n   *\n   * @type {Number}\n   * @constant\n   */\n  GREATER: WebGLConstants.GREATER,\n\n  /**\n   * The depth test passes if the incoming depth is not equal to the stored depth.\n   *\n   * @type {Number}\n   * @constant\n   */\n  NOT_EQUAL: WebGLConstants.NOTEQUAL,\n\n  /**\n   * The depth test passes if the incoming depth is greater than or equal to the stored depth.\n   *\n   * @type {Number}\n   * @constant\n   */\n  GREATER_OR_EQUAL: WebGLConstants.GEQUAL,\n\n  /**\n   * The depth test always passes.\n   *\n   * @type {Number}\n   * @constant\n   */\n  ALWAYS: WebGLConstants.ALWAYS,\n};\nexport default Object.freeze(DepthFunction);\n"]},"metadata":{},"sourceType":"module"}
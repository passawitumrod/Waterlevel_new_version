{"ast":null,"code":"import defaultValue from \"./defaultValue.js\";\nimport defined from \"./defined.js\";\nimport DeveloperError from \"./DeveloperError.js\";\n/**\n * Represents a scalar value's lower and upper bound at a near distance and far distance in eye space.\n * @alias NearFarScalar\n * @constructor\n *\n * @param {Number} [near=0.0] The lower bound of the camera range.\n * @param {Number} [nearValue=0.0] The value at the lower bound of the camera range.\n * @param {Number} [far=1.0] The upper bound of the camera range.\n * @param {Number} [farValue=0.0] The value at the upper bound of the camera range.\n *\n * @see Packable\n */\n\nfunction NearFarScalar(near, nearValue, far, farValue) {\n  /**\n   * The lower bound of the camera range.\n   * @type {Number}\n   * @default 0.0\n   */\n  this.near = defaultValue(near, 0.0);\n  /**\n   * The value at the lower bound of the camera range.\n   * @type {Number}\n   * @default 0.0\n   */\n\n  this.nearValue = defaultValue(nearValue, 0.0);\n  /**\n   * The upper bound of the camera range.\n   * @type {Number}\n   * @default 1.0\n   */\n\n  this.far = defaultValue(far, 1.0);\n  /**\n   * The value at the upper bound of the camera range.\n   * @type {Number}\n   * @default 0.0\n   */\n\n  this.farValue = defaultValue(farValue, 0.0);\n}\n/**\n * Duplicates a NearFarScalar instance.\n *\n * @param {NearFarScalar} nearFarScalar The NearFarScalar to duplicate.\n * @param {NearFarScalar} [result] The object onto which to store the result.\n * @returns {NearFarScalar} The modified result parameter or a new NearFarScalar instance if one was not provided. (Returns undefined if nearFarScalar is undefined)\n */\n\n\nNearFarScalar.clone = function (nearFarScalar, result) {\n  if (!defined(nearFarScalar)) {\n    return undefined;\n  }\n\n  if (!defined(result)) {\n    return new NearFarScalar(nearFarScalar.near, nearFarScalar.nearValue, nearFarScalar.far, nearFarScalar.farValue);\n  }\n\n  result.near = nearFarScalar.near;\n  result.nearValue = nearFarScalar.nearValue;\n  result.far = nearFarScalar.far;\n  result.farValue = nearFarScalar.farValue;\n  return result;\n};\n/**\n * The number of elements used to pack the object into an array.\n * @type {Number}\n */\n\n\nNearFarScalar.packedLength = 4;\n/**\n * Stores the provided instance into the provided array.\n *\n * @param {NearFarScalar} value The value to pack.\n * @param {Number[]} array The array to pack into.\n * @param {Number} [startingIndex=0] The index into the array at which to start packing the elements.\n *\n * @returns {Number[]} The array that was packed into\n */\n\nNearFarScalar.pack = function (value, array, startingIndex) {\n  //>>includeStart('debug', pragmas.debug);\n  if (!defined(value)) {\n    throw new DeveloperError(\"value is required\");\n  }\n\n  if (!defined(array)) {\n    throw new DeveloperError(\"array is required\");\n  } //>>includeEnd('debug');\n\n\n  startingIndex = defaultValue(startingIndex, 0);\n  array[startingIndex++] = value.near;\n  array[startingIndex++] = value.nearValue;\n  array[startingIndex++] = value.far;\n  array[startingIndex] = value.farValue;\n  return array;\n};\n/**\n * Retrieves an instance from a packed array.\n *\n * @param {Number[]} array The packed array.\n * @param {Number} [startingIndex=0] The starting index of the element to be unpacked.\n * @param {NearFarScalar} [result] The object into which to store the result.\n * @returns {NearFarScalar} The modified result parameter or a new NearFarScalar instance if one was not provided.\n */\n\n\nNearFarScalar.unpack = function (array, startingIndex, result) {\n  //>>includeStart('debug', pragmas.debug);\n  if (!defined(array)) {\n    throw new DeveloperError(\"array is required\");\n  } //>>includeEnd('debug');\n\n\n  startingIndex = defaultValue(startingIndex, 0);\n\n  if (!defined(result)) {\n    result = new NearFarScalar();\n  }\n\n  result.near = array[startingIndex++];\n  result.nearValue = array[startingIndex++];\n  result.far = array[startingIndex++];\n  result.farValue = array[startingIndex];\n  return result;\n};\n/**\n * Compares the provided NearFarScalar and returns <code>true</code> if they are equal,\n * <code>false</code> otherwise.\n *\n * @param {NearFarScalar} [left] The first NearFarScalar.\n * @param {NearFarScalar} [right] The second NearFarScalar.\n * @returns {Boolean} <code>true</code> if left and right are equal; otherwise <code>false</code>.\n */\n\n\nNearFarScalar.equals = function (left, right) {\n  return left === right || defined(left) && defined(right) && left.near === right.near && left.nearValue === right.nearValue && left.far === right.far && left.farValue === right.farValue;\n};\n/**\n * Duplicates this instance.\n *\n * @param {NearFarScalar} [result] The object onto which to store the result.\n * @returns {NearFarScalar} The modified result parameter or a new NearFarScalar instance if one was not provided.\n */\n\n\nNearFarScalar.prototype.clone = function (result) {\n  return NearFarScalar.clone(this, result);\n};\n/**\n * Compares this instance to the provided NearFarScalar and returns <code>true</code> if they are equal,\n * <code>false</code> otherwise.\n *\n * @param {NearFarScalar} [right] The right hand side NearFarScalar.\n * @returns {Boolean} <code>true</code> if left and right are equal; otherwise <code>false</code>.\n */\n\n\nNearFarScalar.prototype.equals = function (right) {\n  return NearFarScalar.equals(this, right);\n};\n\nexport default NearFarScalar;","map":{"version":3,"sources":["C:/Users/passa/Desktop/WaterLevelReact/node_modules/cesium/Source/Core/NearFarScalar.js"],"names":["defaultValue","defined","DeveloperError","NearFarScalar","near","nearValue","far","farValue","clone","nearFarScalar","result","undefined","packedLength","pack","value","array","startingIndex","unpack","equals","left","right","prototype"],"mappings":"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","sourcesContent":["import defaultValue from \"./defaultValue.js\";\nimport defined from \"./defined.js\";\nimport DeveloperError from \"./DeveloperError.js\";\n\n/**\n * Represents a scalar value's lower and upper bound at a near distance and far distance in eye space.\n * @alias NearFarScalar\n * @constructor\n *\n * @param {Number} [near=0.0] The lower bound of the camera range.\n * @param {Number} [nearValue=0.0] The value at the lower bound of the camera range.\n * @param {Number} [far=1.0] The upper bound of the camera range.\n * @param {Number} [farValue=0.0] The value at the upper bound of the camera range.\n *\n * @see Packable\n */\nfunction NearFarScalar(near, nearValue, far, farValue) {\n  /**\n   * The lower bound of the camera range.\n   * @type {Number}\n   * @default 0.0\n   */\n  this.near = defaultValue(near, 0.0);\n  /**\n   * The value at the lower bound of the camera range.\n   * @type {Number}\n   * @default 0.0\n   */\n  this.nearValue = defaultValue(nearValue, 0.0);\n  /**\n   * The upper bound of the camera range.\n   * @type {Number}\n   * @default 1.0\n   */\n  this.far = defaultValue(far, 1.0);\n  /**\n   * The value at the upper bound of the camera range.\n   * @type {Number}\n   * @default 0.0\n   */\n  this.farValue = defaultValue(farValue, 0.0);\n}\n\n/**\n * Duplicates a NearFarScalar instance.\n *\n * @param {NearFarScalar} nearFarScalar The NearFarScalar to duplicate.\n * @param {NearFarScalar} [result] The object onto which to store the result.\n * @returns {NearFarScalar} The modified result parameter or a new NearFarScalar instance if one was not provided. (Returns undefined if nearFarScalar is undefined)\n */\nNearFarScalar.clone = function (nearFarScalar, result) {\n  if (!defined(nearFarScalar)) {\n    return undefined;\n  }\n\n  if (!defined(result)) {\n    return new NearFarScalar(\n      nearFarScalar.near,\n      nearFarScalar.nearValue,\n      nearFarScalar.far,\n      nearFarScalar.farValue\n    );\n  }\n\n  result.near = nearFarScalar.near;\n  result.nearValue = nearFarScalar.nearValue;\n  result.far = nearFarScalar.far;\n  result.farValue = nearFarScalar.farValue;\n  return result;\n};\n\n/**\n * The number of elements used to pack the object into an array.\n * @type {Number}\n */\nNearFarScalar.packedLength = 4;\n\n/**\n * Stores the provided instance into the provided array.\n *\n * @param {NearFarScalar} value The value to pack.\n * @param {Number[]} array The array to pack into.\n * @param {Number} [startingIndex=0] The index into the array at which to start packing the elements.\n *\n * @returns {Number[]} The array that was packed into\n */\nNearFarScalar.pack = function (value, array, startingIndex) {\n  //>>includeStart('debug', pragmas.debug);\n  if (!defined(value)) {\n    throw new DeveloperError(\"value is required\");\n  }\n  if (!defined(array)) {\n    throw new DeveloperError(\"array is required\");\n  }\n  //>>includeEnd('debug');\n\n  startingIndex = defaultValue(startingIndex, 0);\n\n  array[startingIndex++] = value.near;\n  array[startingIndex++] = value.nearValue;\n  array[startingIndex++] = value.far;\n  array[startingIndex] = value.farValue;\n\n  return array;\n};\n\n/**\n * Retrieves an instance from a packed array.\n *\n * @param {Number[]} array The packed array.\n * @param {Number} [startingIndex=0] The starting index of the element to be unpacked.\n * @param {NearFarScalar} [result] The object into which to store the result.\n * @returns {NearFarScalar} The modified result parameter or a new NearFarScalar instance if one was not provided.\n */\nNearFarScalar.unpack = function (array, startingIndex, result) {\n  //>>includeStart('debug', pragmas.debug);\n  if (!defined(array)) {\n    throw new DeveloperError(\"array is required\");\n  }\n  //>>includeEnd('debug');\n\n  startingIndex = defaultValue(startingIndex, 0);\n\n  if (!defined(result)) {\n    result = new NearFarScalar();\n  }\n  result.near = array[startingIndex++];\n  result.nearValue = array[startingIndex++];\n  result.far = array[startingIndex++];\n  result.farValue = array[startingIndex];\n  return result;\n};\n\n/**\n * Compares the provided NearFarScalar and returns <code>true</code> if they are equal,\n * <code>false</code> otherwise.\n *\n * @param {NearFarScalar} [left] The first NearFarScalar.\n * @param {NearFarScalar} [right] The second NearFarScalar.\n * @returns {Boolean} <code>true</code> if left and right are equal; otherwise <code>false</code>.\n */\nNearFarScalar.equals = function (left, right) {\n  return (\n    left === right ||\n    (defined(left) &&\n      defined(right) &&\n      left.near === right.near &&\n      left.nearValue === right.nearValue &&\n      left.far === right.far &&\n      left.farValue === right.farValue)\n  );\n};\n\n/**\n * Duplicates this instance.\n *\n * @param {NearFarScalar} [result] The object onto which to store the result.\n * @returns {NearFarScalar} The modified result parameter or a new NearFarScalar instance if one was not provided.\n */\nNearFarScalar.prototype.clone = function (result) {\n  return NearFarScalar.clone(this, result);\n};\n\n/**\n * Compares this instance to the provided NearFarScalar and returns <code>true</code> if they are equal,\n * <code>false</code> otherwise.\n *\n * @param {NearFarScalar} [right] The right hand side NearFarScalar.\n * @returns {Boolean} <code>true</code> if left and right are equal; otherwise <code>false</code>.\n */\nNearFarScalar.prototype.equals = function (right) {\n  return NearFarScalar.equals(this, right);\n};\nexport default NearFarScalar;\n"]},"metadata":{},"sourceType":"module"}
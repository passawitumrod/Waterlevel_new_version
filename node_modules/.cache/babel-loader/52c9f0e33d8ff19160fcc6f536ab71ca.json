{"ast":null,"code":"import AssociativeArray from \"../Core/AssociativeArray.js\";\nimport defined from \"../Core/defined.js\";\nimport BoundingSphereState from \"./BoundingSphereState.js\";\n/**\n * @private\n */\n\nfunction DynamicGeometryBatch(primitives, orderedGroundPrimitives) {\n  this._primitives = primitives;\n  this._orderedGroundPrimitives = orderedGroundPrimitives;\n  this._dynamicUpdaters = new AssociativeArray();\n}\n\nDynamicGeometryBatch.prototype.add = function (time, updater) {\n  this._dynamicUpdaters.set(updater.id, updater.createDynamicUpdater(this._primitives, this._orderedGroundPrimitives));\n};\n\nDynamicGeometryBatch.prototype.remove = function (updater) {\n  var id = updater.id;\n\n  var dynamicUpdater = this._dynamicUpdaters.get(id);\n\n  if (defined(dynamicUpdater)) {\n    this._dynamicUpdaters.remove(id);\n\n    dynamicUpdater.destroy();\n  }\n};\n\nDynamicGeometryBatch.prototype.update = function (time) {\n  var geometries = this._dynamicUpdaters.values;\n\n  for (var i = 0, len = geometries.length; i < len; i++) {\n    geometries[i].update(time);\n  }\n\n  return true;\n};\n\nDynamicGeometryBatch.prototype.removeAllPrimitives = function () {\n  var geometries = this._dynamicUpdaters.values;\n\n  for (var i = 0, len = geometries.length; i < len; i++) {\n    geometries[i].destroy();\n  }\n\n  this._dynamicUpdaters.removeAll();\n};\n\nDynamicGeometryBatch.prototype.getBoundingSphere = function (updater, result) {\n  updater = this._dynamicUpdaters.get(updater.id);\n\n  if (defined(updater) && defined(updater.getBoundingSphere)) {\n    return updater.getBoundingSphere(result);\n  }\n\n  return BoundingSphereState.FAILED;\n};\n\nexport default DynamicGeometryBatch;","map":{"version":3,"sources":["C:/Users/passa/Desktop/WaterDeployTrial/node_modules/cesium/Source/DataSources/DynamicGeometryBatch.js"],"names":["AssociativeArray","defined","BoundingSphereState","DynamicGeometryBatch","primitives","orderedGroundPrimitives","_primitives","_orderedGroundPrimitives","_dynamicUpdaters","prototype","add","time","updater","set","id","createDynamicUpdater","remove","dynamicUpdater","get","destroy","update","geometries","values","i","len","length","removeAllPrimitives","removeAll","getBoundingSphere","result","FAILED"],"mappings":"AAAA,OAAOA,gBAAP,MAA6B,6BAA7B;AACA,OAAOC,OAAP,MAAoB,oBAApB;AACA,OAAOC,mBAAP,MAAgC,0BAAhC;AAEA;;;;AAGA,SAASC,oBAAT,CAA8BC,UAA9B,EAA0CC,uBAA1C,EAAmE;AACjE,OAAKC,WAAL,GAAmBF,UAAnB;AACA,OAAKG,wBAAL,GAAgCF,uBAAhC;AACA,OAAKG,gBAAL,GAAwB,IAAIR,gBAAJ,EAAxB;AACD;;AAEDG,oBAAoB,CAACM,SAArB,CAA+BC,GAA/B,GAAqC,UAAUC,IAAV,EAAgBC,OAAhB,EAAyB;AAC5D,OAAKJ,gBAAL,CAAsBK,GAAtB,CACED,OAAO,CAACE,EADV,EAEEF,OAAO,CAACG,oBAAR,CACE,KAAKT,WADP,EAEE,KAAKC,wBAFP,CAFF;AAOD,CARD;;AAUAJ,oBAAoB,CAACM,SAArB,CAA+BO,MAA/B,GAAwC,UAAUJ,OAAV,EAAmB;AACzD,MAAIE,EAAE,GAAGF,OAAO,CAACE,EAAjB;;AACA,MAAIG,cAAc,GAAG,KAAKT,gBAAL,CAAsBU,GAAtB,CAA0BJ,EAA1B,CAArB;;AACA,MAAIb,OAAO,CAACgB,cAAD,CAAX,EAA6B;AAC3B,SAAKT,gBAAL,CAAsBQ,MAAtB,CAA6BF,EAA7B;;AACAG,IAAAA,cAAc,CAACE,OAAf;AACD;AACF,CAPD;;AASAhB,oBAAoB,CAACM,SAArB,CAA+BW,MAA/B,GAAwC,UAAUT,IAAV,EAAgB;AACtD,MAAIU,UAAU,GAAG,KAAKb,gBAAL,CAAsBc,MAAvC;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAR,EAAWC,GAAG,GAAGH,UAAU,CAACI,MAAjC,EAAyCF,CAAC,GAAGC,GAA7C,EAAkDD,CAAC,EAAnD,EAAuD;AACrDF,IAAAA,UAAU,CAACE,CAAD,CAAV,CAAcH,MAAd,CAAqBT,IAArB;AACD;;AACD,SAAO,IAAP;AACD,CAND;;AAQAR,oBAAoB,CAACM,SAArB,CAA+BiB,mBAA/B,GAAqD,YAAY;AAC/D,MAAIL,UAAU,GAAG,KAAKb,gBAAL,CAAsBc,MAAvC;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAR,EAAWC,GAAG,GAAGH,UAAU,CAACI,MAAjC,EAAyCF,CAAC,GAAGC,GAA7C,EAAkDD,CAAC,EAAnD,EAAuD;AACrDF,IAAAA,UAAU,CAACE,CAAD,CAAV,CAAcJ,OAAd;AACD;;AACD,OAAKX,gBAAL,CAAsBmB,SAAtB;AACD,CAND;;AAQAxB,oBAAoB,CAACM,SAArB,CAA+BmB,iBAA/B,GAAmD,UAAUhB,OAAV,EAAmBiB,MAAnB,EAA2B;AAC5EjB,EAAAA,OAAO,GAAG,KAAKJ,gBAAL,CAAsBU,GAAtB,CAA0BN,OAAO,CAACE,EAAlC,CAAV;;AACA,MAAIb,OAAO,CAACW,OAAD,CAAP,IAAoBX,OAAO,CAACW,OAAO,CAACgB,iBAAT,CAA/B,EAA4D;AAC1D,WAAOhB,OAAO,CAACgB,iBAAR,CAA0BC,MAA1B,CAAP;AACD;;AACD,SAAO3B,mBAAmB,CAAC4B,MAA3B;AACD,CAND;;AAOA,eAAe3B,oBAAf","sourcesContent":["import AssociativeArray from \"../Core/AssociativeArray.js\";\nimport defined from \"../Core/defined.js\";\nimport BoundingSphereState from \"./BoundingSphereState.js\";\n\n/**\n * @private\n */\nfunction DynamicGeometryBatch(primitives, orderedGroundPrimitives) {\n  this._primitives = primitives;\n  this._orderedGroundPrimitives = orderedGroundPrimitives;\n  this._dynamicUpdaters = new AssociativeArray();\n}\n\nDynamicGeometryBatch.prototype.add = function (time, updater) {\n  this._dynamicUpdaters.set(\n    updater.id,\n    updater.createDynamicUpdater(\n      this._primitives,\n      this._orderedGroundPrimitives\n    )\n  );\n};\n\nDynamicGeometryBatch.prototype.remove = function (updater) {\n  var id = updater.id;\n  var dynamicUpdater = this._dynamicUpdaters.get(id);\n  if (defined(dynamicUpdater)) {\n    this._dynamicUpdaters.remove(id);\n    dynamicUpdater.destroy();\n  }\n};\n\nDynamicGeometryBatch.prototype.update = function (time) {\n  var geometries = this._dynamicUpdaters.values;\n  for (var i = 0, len = geometries.length; i < len; i++) {\n    geometries[i].update(time);\n  }\n  return true;\n};\n\nDynamicGeometryBatch.prototype.removeAllPrimitives = function () {\n  var geometries = this._dynamicUpdaters.values;\n  for (var i = 0, len = geometries.length; i < len; i++) {\n    geometries[i].destroy();\n  }\n  this._dynamicUpdaters.removeAll();\n};\n\nDynamicGeometryBatch.prototype.getBoundingSphere = function (updater, result) {\n  updater = this._dynamicUpdaters.get(updater.id);\n  if (defined(updater) && defined(updater.getBoundingSphere)) {\n    return updater.getBoundingSphere(result);\n  }\n  return BoundingSphereState.FAILED;\n};\nexport default DynamicGeometryBatch;\n"]},"metadata":{},"sourceType":"module"}
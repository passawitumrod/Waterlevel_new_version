{"ast":null,"code":"import defined from \"../../Core/defined.js\";\nimport destroyObject from \"../../Core/destroyObject.js\";\nimport DeveloperError from \"../../Core/DeveloperError.js\";\nimport knockout from \"../../ThirdParty/knockout.js\";\nimport getElement from \"../getElement.js\";\nimport FullscreenButtonViewModel from \"./FullscreenButtonViewModel.js\";\nvar enterFullScreenPath = \"M 83.96875 17.5625 L 83.96875 17.59375 L 76.65625 24.875 L 97.09375 24.96875 L 76.09375 45.96875 L 81.9375 51.8125 L 102.78125 30.9375 L 102.875 51.15625 L 110.15625 43.875 L 110.1875 17.59375 L 83.96875 17.5625 z M 44.125 17.59375 L 17.90625 17.625 L 17.9375 43.90625 L 25.21875 51.1875 L 25.3125 30.96875 L 46.15625 51.8125 L 52 45.96875 L 31 25 L 51.4375 24.90625 L 44.125 17.59375 z M 46.0625 76.03125 L 25.1875 96.875 L 25.09375 76.65625 L 17.8125 83.9375 L 17.8125 110.21875 L 44 110.25 L 51.3125 102.9375 L 30.90625 102.84375 L 51.875 81.875 L 46.0625 76.03125 z M 82 76.15625 L 76.15625 82 L 97.15625 103 L 76.71875 103.0625 L 84.03125 110.375 L 110.25 110.34375 L 110.21875 84.0625 L 102.9375 76.8125 L 102.84375 97 L 82 76.15625 z\";\nvar exitFullScreenPath = \"M 104.34375 17.5625 L 83.5 38.4375 L 83.40625 18.21875 L 76.125 25.5 L 76.09375 51.78125 L 102.3125 51.8125 L 102.3125 51.78125 L 109.625 44.5 L 89.1875 44.40625 L 110.1875 23.40625 L 104.34375 17.5625 z M 23.75 17.59375 L 17.90625 23.4375 L 38.90625 44.4375 L 18.5 44.53125 L 25.78125 51.8125 L 52 51.78125 L 51.96875 25.53125 L 44.6875 18.25 L 44.625 38.46875 L 23.75 17.59375 z M 25.6875 76.03125 L 18.375 83.3125 L 38.78125 83.40625 L 17.8125 104.40625 L 23.625 110.25 L 44.5 89.375 L 44.59375 109.59375 L 51.875 102.3125 L 51.875 76.0625 L 25.6875 76.03125 z M 102.375 76.15625 L 76.15625 76.1875 L 76.1875 102.4375 L 83.46875 109.71875 L 83.5625 89.53125 L 104.40625 110.375 L 110.25 104.53125 L 89.25 83.53125 L 109.6875 83.46875 L 102.375 76.15625 z\";\n/**\n * A single button widget for toggling fullscreen mode.\n *\n * @alias FullscreenButton\n * @constructor\n *\n * @param {Element|String} container The DOM element or ID that will contain the widget.\n * @param {Element|String} [fullscreenElement=document.body] The element or id to be placed into fullscreen mode.\n *\n * @exception {DeveloperError} Element with id \"container\" does not exist in the document.\n *\n * @see Fullscreen\n */\n\nfunction FullscreenButton(container, fullscreenElement) {\n  //>>includeStart('debug', pragmas.debug);\n  if (!defined(container)) {\n    throw new DeveloperError(\"container is required.\");\n  } //>>includeEnd('debug');\n\n\n  container = getElement(container);\n  var viewModel = new FullscreenButtonViewModel(fullscreenElement, container);\n  viewModel._exitFullScreenPath = exitFullScreenPath;\n  viewModel._enterFullScreenPath = enterFullScreenPath;\n  var element = document.createElement(\"button\");\n  element.type = \"button\";\n  element.className = \"cesium-button cesium-fullscreenButton\";\n  element.setAttribute(\"data-bind\", \"\\\nattr: { title: tooltip },\\\nclick: command,\\\nenable: isFullscreenEnabled,\\\ncesiumSvgPath: { path: isFullscreen ? _exitFullScreenPath : _enterFullScreenPath, width: 128, height: 128 }\");\n  container.appendChild(element);\n  knockout.applyBindings(viewModel, element);\n  this._container = container;\n  this._viewModel = viewModel;\n  this._element = element;\n}\n\nObject.defineProperties(FullscreenButton.prototype, {\n  /**\n   * Gets the parent container.\n   * @memberof FullscreenButton.prototype\n   *\n   * @type {Element}\n   */\n  container: {\n    get: function () {\n      return this._container;\n    }\n  },\n\n  /**\n   * Gets the view model.\n   * @memberof FullscreenButton.prototype\n   *\n   * @type {FullscreenButtonViewModel}\n   */\n  viewModel: {\n    get: function () {\n      return this._viewModel;\n    }\n  }\n});\n/**\n * @returns {Boolean} true if the object has been destroyed, false otherwise.\n */\n\nFullscreenButton.prototype.isDestroyed = function () {\n  return false;\n};\n/**\n * Destroys the widget.  Should be called if permanently\n * removing the widget from layout.\n */\n\n\nFullscreenButton.prototype.destroy = function () {\n  this._viewModel.destroy();\n\n  knockout.cleanNode(this._element);\n\n  this._container.removeChild(this._element);\n\n  return destroyObject(this);\n};\n\nexport default FullscreenButton;","map":{"version":3,"sources":["C:/Users/passa/Desktop/WaterLevelReact/node_modules/cesium/Source/Widgets/FullscreenButton/FullscreenButton.js"],"names":["defined","destroyObject","DeveloperError","knockout","getElement","FullscreenButtonViewModel","enterFullScreenPath","exitFullScreenPath","FullscreenButton","container","fullscreenElement","viewModel","_exitFullScreenPath","_enterFullScreenPath","element","document","createElement","type","className","setAttribute","appendChild","applyBindings","_container","_viewModel","_element","Object","defineProperties","prototype","get","isDestroyed","destroy","cleanNode","removeChild"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,uBAApB;AACA,OAAOC,aAAP,MAA0B,6BAA1B;AACA,OAAOC,cAAP,MAA2B,8BAA3B;AACA,OAAOC,QAAP,MAAqB,8BAArB;AACA,OAAOC,UAAP,MAAuB,kBAAvB;AACA,OAAOC,yBAAP,MAAsC,gCAAtC;AAEA,IAAIC,mBAAmB,GACrB,suBADF;AAEA,IAAIC,kBAAkB,GACpB,uvBADF;AAGA;;;;;;;;;;;;;;AAaA,SAASC,gBAAT,CAA0BC,SAA1B,EAAqCC,iBAArC,EAAwD;AACtD;AACA,MAAI,CAACV,OAAO,CAACS,SAAD,CAAZ,EAAyB;AACvB,UAAM,IAAIP,cAAJ,CAAmB,wBAAnB,CAAN;AACD,GAJqD,CAKtD;;;AAEAO,EAAAA,SAAS,GAAGL,UAAU,CAACK,SAAD,CAAtB;AAEA,MAAIE,SAAS,GAAG,IAAIN,yBAAJ,CAA8BK,iBAA9B,EAAiDD,SAAjD,CAAhB;AAEAE,EAAAA,SAAS,CAACC,mBAAV,GAAgCL,kBAAhC;AACAI,EAAAA,SAAS,CAACE,oBAAV,GAAiCP,mBAAjC;AAEA,MAAIQ,OAAO,GAAGC,QAAQ,CAACC,aAAT,CAAuB,QAAvB,CAAd;AACAF,EAAAA,OAAO,CAACG,IAAR,GAAe,QAAf;AACAH,EAAAA,OAAO,CAACI,SAAR,GAAoB,uCAApB;AACAJ,EAAAA,OAAO,CAACK,YAAR,CACE,WADF,EAEE;;;;4GAFF;AASAV,EAAAA,SAAS,CAACW,WAAV,CAAsBN,OAAtB;AAEAX,EAAAA,QAAQ,CAACkB,aAAT,CAAuBV,SAAvB,EAAkCG,OAAlC;AAEA,OAAKQ,UAAL,GAAkBb,SAAlB;AACA,OAAKc,UAAL,GAAkBZ,SAAlB;AACA,OAAKa,QAAL,GAAgBV,OAAhB;AACD;;AAEDW,MAAM,CAACC,gBAAP,CAAwBlB,gBAAgB,CAACmB,SAAzC,EAAoD;AAClD;;;;;;AAMAlB,EAAAA,SAAS,EAAE;AACTmB,IAAAA,GAAG,EAAE,YAAY;AACf,aAAO,KAAKN,UAAZ;AACD;AAHQ,GAPuC;;AAalD;;;;;;AAMAX,EAAAA,SAAS,EAAE;AACTiB,IAAAA,GAAG,EAAE,YAAY;AACf,aAAO,KAAKL,UAAZ;AACD;AAHQ;AAnBuC,CAApD;AA0BA;;;;AAGAf,gBAAgB,CAACmB,SAAjB,CAA2BE,WAA3B,GAAyC,YAAY;AACnD,SAAO,KAAP;AACD,CAFD;AAIA;;;;;;AAIArB,gBAAgB,CAACmB,SAAjB,CAA2BG,OAA3B,GAAqC,YAAY;AAC/C,OAAKP,UAAL,CAAgBO,OAAhB;;AAEA3B,EAAAA,QAAQ,CAAC4B,SAAT,CAAmB,KAAKP,QAAxB;;AACA,OAAKF,UAAL,CAAgBU,WAAhB,CAA4B,KAAKR,QAAjC;;AAEA,SAAOvB,aAAa,CAAC,IAAD,CAApB;AACD,CAPD;;AAQA,eAAeO,gBAAf","sourcesContent":["import defined from \"../../Core/defined.js\";\nimport destroyObject from \"../../Core/destroyObject.js\";\nimport DeveloperError from \"../../Core/DeveloperError.js\";\nimport knockout from \"../../ThirdParty/knockout.js\";\nimport getElement from \"../getElement.js\";\nimport FullscreenButtonViewModel from \"./FullscreenButtonViewModel.js\";\n\nvar enterFullScreenPath =\n  \"M 83.96875 17.5625 L 83.96875 17.59375 L 76.65625 24.875 L 97.09375 24.96875 L 76.09375 45.96875 L 81.9375 51.8125 L 102.78125 30.9375 L 102.875 51.15625 L 110.15625 43.875 L 110.1875 17.59375 L 83.96875 17.5625 z M 44.125 17.59375 L 17.90625 17.625 L 17.9375 43.90625 L 25.21875 51.1875 L 25.3125 30.96875 L 46.15625 51.8125 L 52 45.96875 L 31 25 L 51.4375 24.90625 L 44.125 17.59375 z M 46.0625 76.03125 L 25.1875 96.875 L 25.09375 76.65625 L 17.8125 83.9375 L 17.8125 110.21875 L 44 110.25 L 51.3125 102.9375 L 30.90625 102.84375 L 51.875 81.875 L 46.0625 76.03125 z M 82 76.15625 L 76.15625 82 L 97.15625 103 L 76.71875 103.0625 L 84.03125 110.375 L 110.25 110.34375 L 110.21875 84.0625 L 102.9375 76.8125 L 102.84375 97 L 82 76.15625 z\";\nvar exitFullScreenPath =\n  \"M 104.34375 17.5625 L 83.5 38.4375 L 83.40625 18.21875 L 76.125 25.5 L 76.09375 51.78125 L 102.3125 51.8125 L 102.3125 51.78125 L 109.625 44.5 L 89.1875 44.40625 L 110.1875 23.40625 L 104.34375 17.5625 z M 23.75 17.59375 L 17.90625 23.4375 L 38.90625 44.4375 L 18.5 44.53125 L 25.78125 51.8125 L 52 51.78125 L 51.96875 25.53125 L 44.6875 18.25 L 44.625 38.46875 L 23.75 17.59375 z M 25.6875 76.03125 L 18.375 83.3125 L 38.78125 83.40625 L 17.8125 104.40625 L 23.625 110.25 L 44.5 89.375 L 44.59375 109.59375 L 51.875 102.3125 L 51.875 76.0625 L 25.6875 76.03125 z M 102.375 76.15625 L 76.15625 76.1875 L 76.1875 102.4375 L 83.46875 109.71875 L 83.5625 89.53125 L 104.40625 110.375 L 110.25 104.53125 L 89.25 83.53125 L 109.6875 83.46875 L 102.375 76.15625 z\";\n\n/**\n * A single button widget for toggling fullscreen mode.\n *\n * @alias FullscreenButton\n * @constructor\n *\n * @param {Element|String} container The DOM element or ID that will contain the widget.\n * @param {Element|String} [fullscreenElement=document.body] The element or id to be placed into fullscreen mode.\n *\n * @exception {DeveloperError} Element with id \"container\" does not exist in the document.\n *\n * @see Fullscreen\n */\nfunction FullscreenButton(container, fullscreenElement) {\n  //>>includeStart('debug', pragmas.debug);\n  if (!defined(container)) {\n    throw new DeveloperError(\"container is required.\");\n  }\n  //>>includeEnd('debug');\n\n  container = getElement(container);\n\n  var viewModel = new FullscreenButtonViewModel(fullscreenElement, container);\n\n  viewModel._exitFullScreenPath = exitFullScreenPath;\n  viewModel._enterFullScreenPath = enterFullScreenPath;\n\n  var element = document.createElement(\"button\");\n  element.type = \"button\";\n  element.className = \"cesium-button cesium-fullscreenButton\";\n  element.setAttribute(\n    \"data-bind\",\n    \"\\\nattr: { title: tooltip },\\\nclick: command,\\\nenable: isFullscreenEnabled,\\\ncesiumSvgPath: { path: isFullscreen ? _exitFullScreenPath : _enterFullScreenPath, width: 128, height: 128 }\"\n  );\n\n  container.appendChild(element);\n\n  knockout.applyBindings(viewModel, element);\n\n  this._container = container;\n  this._viewModel = viewModel;\n  this._element = element;\n}\n\nObject.defineProperties(FullscreenButton.prototype, {\n  /**\n   * Gets the parent container.\n   * @memberof FullscreenButton.prototype\n   *\n   * @type {Element}\n   */\n  container: {\n    get: function () {\n      return this._container;\n    },\n  },\n\n  /**\n   * Gets the view model.\n   * @memberof FullscreenButton.prototype\n   *\n   * @type {FullscreenButtonViewModel}\n   */\n  viewModel: {\n    get: function () {\n      return this._viewModel;\n    },\n  },\n});\n\n/**\n * @returns {Boolean} true if the object has been destroyed, false otherwise.\n */\nFullscreenButton.prototype.isDestroyed = function () {\n  return false;\n};\n\n/**\n * Destroys the widget.  Should be called if permanently\n * removing the widget from layout.\n */\nFullscreenButton.prototype.destroy = function () {\n  this._viewModel.destroy();\n\n  knockout.cleanNode(this._element);\n  this._container.removeChild(this._element);\n\n  return destroyObject(this);\n};\nexport default FullscreenButton;\n"]},"metadata":{},"sourceType":"module"}
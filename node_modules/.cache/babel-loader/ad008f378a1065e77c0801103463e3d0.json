{"ast":null,"code":"import defaultValue from \"../../Core/defaultValue.js\";\nimport defined from \"../../Core/defined.js\";\nimport DeveloperError from \"../../Core/DeveloperError.js\";\nimport PerformanceWatchdog from \"../PerformanceWatchdog/PerformanceWatchdog.js\";\n/**\n * A mixin which adds the {@link PerformanceWatchdog} widget to the {@link Viewer} widget.\n * Rather than being called directly, this function is normally passed as\n * a parameter to {@link Viewer#extend}, as shown in the example below.\n * @exports viewerPerformanceWatchdogMixin\n *\n * @param {Viewer} viewer The viewer instance.\n * @param {Object} [options] An object with properties.\n * @param {String} [options.lowFrameRateMessage='This application appears to be performing poorly on your system.  Please try using a different web browser or updating your video drivers.'] The\n *        message to display when a low frame rate is detected.  The message is interpeted as HTML, so make sure\n *        it comes from a trusted source so that your application is not vulnerable to cross-site scripting attacks.\n *\n * @exception {DeveloperError} viewer is required.\n *\n * @example\n * var viewer = new Cesium.Viewer('cesiumContainer');\n * viewer.extend(Cesium.viewerPerformanceWatchdogMixin, {\n *     lowFrameRateMessage : 'Why is this going so <em>slowly</em>?'\n * });\n */\n\nfunction viewerPerformanceWatchdogMixin(viewer, options) {\n  //>>includeStart('debug', pragmas.debug);\n  if (!defined(viewer)) {\n    throw new DeveloperError(\"viewer is required.\");\n  } //>>includeEnd('debug');\n\n\n  options = defaultValue(options, defaultValue.EMPTY_OBJECT);\n  var performanceWatchdog = new PerformanceWatchdog({\n    scene: viewer.scene,\n    container: viewer.bottomContainer,\n    lowFrameRateMessage: options.lowFrameRateMessage\n  });\n  Object.defineProperties(viewer, {\n    performanceWatchdog: {\n      get: function () {\n        return performanceWatchdog;\n      }\n    }\n  });\n}\n\nexport default viewerPerformanceWatchdogMixin;","map":{"version":3,"sources":["C:/Users/passa/Desktop/WaterLevelReact/node_modules/cesium/Source/Widgets/Viewer/viewerPerformanceWatchdogMixin.js"],"names":["defaultValue","defined","DeveloperError","PerformanceWatchdog","viewerPerformanceWatchdogMixin","viewer","options","EMPTY_OBJECT","performanceWatchdog","scene","container","bottomContainer","lowFrameRateMessage","Object","defineProperties","get"],"mappings":"AAAA,OAAOA,YAAP,MAAyB,4BAAzB;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,OAAOC,cAAP,MAA2B,8BAA3B;AACA,OAAOC,mBAAP,MAAgC,+CAAhC;AAEA;;;;;;;;;;;;;;;;;;;;;AAoBA,SAASC,8BAAT,CAAwCC,MAAxC,EAAgDC,OAAhD,EAAyD;AACvD;AACA,MAAI,CAACL,OAAO,CAACI,MAAD,CAAZ,EAAsB;AACpB,UAAM,IAAIH,cAAJ,CAAmB,qBAAnB,CAAN;AACD,GAJsD,CAKvD;;;AAEAI,EAAAA,OAAO,GAAGN,YAAY,CAACM,OAAD,EAAUN,YAAY,CAACO,YAAvB,CAAtB;AAEA,MAAIC,mBAAmB,GAAG,IAAIL,mBAAJ,CAAwB;AAChDM,IAAAA,KAAK,EAAEJ,MAAM,CAACI,KADkC;AAEhDC,IAAAA,SAAS,EAAEL,MAAM,CAACM,eAF8B;AAGhDC,IAAAA,mBAAmB,EAAEN,OAAO,CAACM;AAHmB,GAAxB,CAA1B;AAMAC,EAAAA,MAAM,CAACC,gBAAP,CAAwBT,MAAxB,EAAgC;AAC9BG,IAAAA,mBAAmB,EAAE;AACnBO,MAAAA,GAAG,EAAE,YAAY;AACf,eAAOP,mBAAP;AACD;AAHkB;AADS,GAAhC;AAOD;;AACD,eAAeJ,8BAAf","sourcesContent":["import defaultValue from \"../../Core/defaultValue.js\";\nimport defined from \"../../Core/defined.js\";\nimport DeveloperError from \"../../Core/DeveloperError.js\";\nimport PerformanceWatchdog from \"../PerformanceWatchdog/PerformanceWatchdog.js\";\n\n/**\n * A mixin which adds the {@link PerformanceWatchdog} widget to the {@link Viewer} widget.\n * Rather than being called directly, this function is normally passed as\n * a parameter to {@link Viewer#extend}, as shown in the example below.\n * @exports viewerPerformanceWatchdogMixin\n *\n * @param {Viewer} viewer The viewer instance.\n * @param {Object} [options] An object with properties.\n * @param {String} [options.lowFrameRateMessage='This application appears to be performing poorly on your system.  Please try using a different web browser or updating your video drivers.'] The\n *        message to display when a low frame rate is detected.  The message is interpeted as HTML, so make sure\n *        it comes from a trusted source so that your application is not vulnerable to cross-site scripting attacks.\n *\n * @exception {DeveloperError} viewer is required.\n *\n * @example\n * var viewer = new Cesium.Viewer('cesiumContainer');\n * viewer.extend(Cesium.viewerPerformanceWatchdogMixin, {\n *     lowFrameRateMessage : 'Why is this going so <em>slowly</em>?'\n * });\n */\nfunction viewerPerformanceWatchdogMixin(viewer, options) {\n  //>>includeStart('debug', pragmas.debug);\n  if (!defined(viewer)) {\n    throw new DeveloperError(\"viewer is required.\");\n  }\n  //>>includeEnd('debug');\n\n  options = defaultValue(options, defaultValue.EMPTY_OBJECT);\n\n  var performanceWatchdog = new PerformanceWatchdog({\n    scene: viewer.scene,\n    container: viewer.bottomContainer,\n    lowFrameRateMessage: options.lowFrameRateMessage,\n  });\n\n  Object.defineProperties(viewer, {\n    performanceWatchdog: {\n      get: function () {\n        return performanceWatchdog;\n      },\n    },\n  });\n}\nexport default viewerPerformanceWatchdogMixin;\n"]},"metadata":{},"sourceType":"module"}
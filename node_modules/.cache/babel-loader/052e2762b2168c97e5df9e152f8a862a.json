{"ast":null,"code":"import Cartesian2 from \"../Core/Cartesian2.js\";\nimport Cartesian3 from \"../Core/Cartesian3.js\";\nimport Cartesian4 from \"../Core/Cartesian4.js\";\nimport ComponentDatatype from \"../Core/ComponentDatatype.js\";\nimport Matrix2 from \"../Core/Matrix2.js\";\nimport Matrix3 from \"../Core/Matrix3.js\";\nimport Matrix4 from \"../Core/Matrix4.js\";\nvar ComponentsPerAttribute = {\n  SCALAR: 1,\n  VEC2: 2,\n  VEC3: 3,\n  VEC4: 4,\n  MAT2: 4,\n  MAT3: 9,\n  MAT4: 16\n};\nvar ClassPerType = {\n  SCALAR: undefined,\n  VEC2: Cartesian2,\n  VEC3: Cartesian3,\n  VEC4: Cartesian4,\n  MAT2: Matrix2,\n  MAT3: Matrix3,\n  MAT4: Matrix4\n};\n/**\n * @private\n */\n\nfunction getBinaryAccessor(accessor) {\n  var componentType = accessor.componentType;\n  var componentDatatype;\n\n  if (typeof componentType === \"string\") {\n    componentDatatype = ComponentDatatype.fromName(componentType);\n  } else {\n    componentDatatype = componentType;\n  }\n\n  var componentsPerAttribute = ComponentsPerAttribute[accessor.type];\n  var classType = ClassPerType[accessor.type];\n  return {\n    componentsPerAttribute: componentsPerAttribute,\n    classType: classType,\n    createArrayBufferView: function createArrayBufferView(buffer, byteOffset, length) {\n      return ComponentDatatype.createArrayBufferView(componentDatatype, buffer, byteOffset, componentsPerAttribute * length);\n    }\n  };\n}\n\nexport default getBinaryAccessor;","map":{"version":3,"sources":["C:/Users/passa/Desktop/WaterLevelReact/node_modules/cesium/Source/Scene/getBinaryAccessor.js"],"names":["Cartesian2","Cartesian3","Cartesian4","ComponentDatatype","Matrix2","Matrix3","Matrix4","ComponentsPerAttribute","SCALAR","VEC2","VEC3","VEC4","MAT2","MAT3","MAT4","ClassPerType","undefined","getBinaryAccessor","accessor","componentType","componentDatatype","fromName","componentsPerAttribute","type","classType","createArrayBufferView","buffer","byteOffset","length"],"mappings":"AAAA,OAAOA,UAAP,MAAuB,uBAAvB;AACA,OAAOC,UAAP,MAAuB,uBAAvB;AACA,OAAOC,UAAP,MAAuB,uBAAvB;AACA,OAAOC,iBAAP,MAA8B,8BAA9B;AACA,OAAOC,OAAP,MAAoB,oBAApB;AACA,OAAOC,OAAP,MAAoB,oBAApB;AACA,OAAOC,OAAP,MAAoB,oBAApB;AAEA,IAAIC,sBAAsB,GAAG;AAC3BC,EAAAA,MAAM,EAAE,CADmB;AAE3BC,EAAAA,IAAI,EAAE,CAFqB;AAG3BC,EAAAA,IAAI,EAAE,CAHqB;AAI3BC,EAAAA,IAAI,EAAE,CAJqB;AAK3BC,EAAAA,IAAI,EAAE,CALqB;AAM3BC,EAAAA,IAAI,EAAE,CANqB;AAO3BC,EAAAA,IAAI,EAAE;AAPqB,CAA7B;AAUA,IAAIC,YAAY,GAAG;AACjBP,EAAAA,MAAM,EAAEQ,SADS;AAEjBP,EAAAA,IAAI,EAAET,UAFW;AAGjBU,EAAAA,IAAI,EAAET,UAHW;AAIjBU,EAAAA,IAAI,EAAET,UAJW;AAKjBU,EAAAA,IAAI,EAAER,OALW;AAMjBS,EAAAA,IAAI,EAAER,OANW;AAOjBS,EAAAA,IAAI,EAAER;AAPW,CAAnB;AAUA;;;;AAGA,SAASW,iBAAT,CAA2BC,QAA3B,EAAqC;AACnC,MAAIC,aAAa,GAAGD,QAAQ,CAACC,aAA7B;AACA,MAAIC,iBAAJ;;AACA,MAAI,OAAOD,aAAP,KAAyB,QAA7B,EAAuC;AACrCC,IAAAA,iBAAiB,GAAGjB,iBAAiB,CAACkB,QAAlB,CAA2BF,aAA3B,CAApB;AACD,GAFD,MAEO;AACLC,IAAAA,iBAAiB,GAAGD,aAApB;AACD;;AAED,MAAIG,sBAAsB,GAAGf,sBAAsB,CAACW,QAAQ,CAACK,IAAV,CAAnD;AACA,MAAIC,SAAS,GAAGT,YAAY,CAACG,QAAQ,CAACK,IAAV,CAA5B;AACA,SAAO;AACLD,IAAAA,sBAAsB,EAAEA,sBADnB;AAELE,IAAAA,SAAS,EAAEA,SAFN;AAGLC,IAAAA,qBAAqB,EAAE,+BAAUC,MAAV,EAAkBC,UAAlB,EAA8BC,MAA9B,EAAsC;AAC3D,aAAOzB,iBAAiB,CAACsB,qBAAlB,CACLL,iBADK,EAELM,MAFK,EAGLC,UAHK,EAILL,sBAAsB,GAAGM,MAJpB,CAAP;AAMD;AAVI,GAAP;AAYD;;AACD,eAAeX,iBAAf","sourcesContent":["import Cartesian2 from \"../Core/Cartesian2.js\";\nimport Cartesian3 from \"../Core/Cartesian3.js\";\nimport Cartesian4 from \"../Core/Cartesian4.js\";\nimport ComponentDatatype from \"../Core/ComponentDatatype.js\";\nimport Matrix2 from \"../Core/Matrix2.js\";\nimport Matrix3 from \"../Core/Matrix3.js\";\nimport Matrix4 from \"../Core/Matrix4.js\";\n\nvar ComponentsPerAttribute = {\n  SCALAR: 1,\n  VEC2: 2,\n  VEC3: 3,\n  VEC4: 4,\n  MAT2: 4,\n  MAT3: 9,\n  MAT4: 16,\n};\n\nvar ClassPerType = {\n  SCALAR: undefined,\n  VEC2: Cartesian2,\n  VEC3: Cartesian3,\n  VEC4: Cartesian4,\n  MAT2: Matrix2,\n  MAT3: Matrix3,\n  MAT4: Matrix4,\n};\n\n/**\n * @private\n */\nfunction getBinaryAccessor(accessor) {\n  var componentType = accessor.componentType;\n  var componentDatatype;\n  if (typeof componentType === \"string\") {\n    componentDatatype = ComponentDatatype.fromName(componentType);\n  } else {\n    componentDatatype = componentType;\n  }\n\n  var componentsPerAttribute = ComponentsPerAttribute[accessor.type];\n  var classType = ClassPerType[accessor.type];\n  return {\n    componentsPerAttribute: componentsPerAttribute,\n    classType: classType,\n    createArrayBufferView: function (buffer, byteOffset, length) {\n      return ComponentDatatype.createArrayBufferView(\n        componentDatatype,\n        buffer,\n        byteOffset,\n        componentsPerAttribute * length\n      );\n    },\n  };\n}\nexport default getBinaryAccessor;\n"]},"metadata":{},"sourceType":"module"}
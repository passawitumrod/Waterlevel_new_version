{"ast":null,"code":"import defined from \"../../Core/defined.js\";\nimport Event from \"../../Core/Event.js\";\nimport knockout from \"../../ThirdParty/knockout.js\";\nvar cameraEnabledPath = \"M 13.84375 7.03125 C 11.412798 7.03125 9.46875 8.975298 9.46875 11.40625 L 9.46875 11.59375 L 2.53125 7.21875 L 2.53125 24.0625 L 9.46875 19.6875 C 9.4853444 22.104033 11.423165 24.0625 13.84375 24.0625 L 25.875 24.0625 C 28.305952 24.0625 30.28125 22.087202 30.28125 19.65625 L 30.28125 11.40625 C 30.28125 8.975298 28.305952 7.03125 25.875 7.03125 L 13.84375 7.03125 z\";\nvar cameraDisabledPath = \"M 27.34375 1.65625 L 5.28125 27.9375 L 8.09375 30.3125 L 30.15625 4.03125 L 27.34375 1.65625 z M 13.84375 7.03125 C 11.412798 7.03125 9.46875 8.975298 9.46875 11.40625 L 9.46875 11.59375 L 2.53125 7.21875 L 2.53125 24.0625 L 9.46875 19.6875 C 9.4724893 20.232036 9.5676108 20.7379 9.75 21.21875 L 21.65625 7.03125 L 13.84375 7.03125 z M 28.21875 7.71875 L 14.53125 24.0625 L 25.875 24.0625 C 28.305952 24.0625 30.28125 22.087202 30.28125 19.65625 L 30.28125 11.40625 C 30.28125 9.8371439 29.456025 8.4902779 28.21875 7.71875 z\";\n/**\n * The view model for {@link InfoBox}.\n * @alias InfoBoxViewModel\n * @constructor\n */\n\nfunction InfoBoxViewModel() {\n  this._cameraClicked = new Event();\n  this._closeClicked = new Event();\n  /**\n   * Gets or sets the maximum height of the info box in pixels.  This property is observable.\n   * @type {Number}\n   */\n\n  this.maxHeight = 500;\n  /**\n   * Gets or sets whether the camera tracking icon is enabled.\n   * @type {Boolean}\n   */\n\n  this.enableCamera = false;\n  /**\n   * Gets or sets the status of current camera tracking of the selected object.\n   * @type {Boolean}\n   */\n\n  this.isCameraTracking = false;\n  /**\n   * Gets or sets the visibility of the info box.\n   * @type {Boolean}\n   */\n\n  this.showInfo = false;\n  /**\n   * Gets or sets the title text in the info box.\n   * @type {String}\n   */\n\n  this.titleText = \"\";\n  /**\n   * Gets or sets the description HTML for the info box.\n   * @type {String}\n   */\n\n  this.description = \"\";\n  knockout.track(this, [\"showInfo\", \"titleText\", \"description\", \"maxHeight\", \"enableCamera\", \"isCameraTracking\"]);\n  this._loadingIndicatorHtml = '<div class=\"cesium-infoBox-loadingContainer\"><span class=\"cesium-infoBox-loading\"></span></div>';\n  /**\n   * Gets the SVG path of the camera icon, which can change to be \"crossed out\" or not.\n   * @type {String}\n   */\n\n  this.cameraIconPath = undefined;\n  knockout.defineProperty(this, \"cameraIconPath\", {\n    get: function get() {\n      return !this.enableCamera || this.isCameraTracking ? cameraDisabledPath : cameraEnabledPath;\n    }\n  });\n  knockout.defineProperty(this, \"_bodyless\", {\n    get: function get() {\n      return !defined(this.description) || this.description.length === 0;\n    }\n  });\n}\n/**\n * Gets the maximum height of sections within the info box, minus an offset, in CSS-ready form.\n * @param {Number} offset The offset in pixels.\n * @returns {String}\n */\n\n\nInfoBoxViewModel.prototype.maxHeightOffset = function (offset) {\n  return this.maxHeight - offset + \"px\";\n};\n\nObject.defineProperties(InfoBoxViewModel.prototype, {\n  /**\n   * Gets an {@link Event} that is fired when the user clicks the camera icon.\n   * @memberof InfoBoxViewModel.prototype\n   * @type {Event}\n   */\n  cameraClicked: {\n    get: function get() {\n      return this._cameraClicked;\n    }\n  },\n\n  /**\n   * Gets an {@link Event} that is fired when the user closes the info box.\n   * @memberof InfoBoxViewModel.prototype\n   * @type {Event}\n   */\n  closeClicked: {\n    get: function get() {\n      return this._closeClicked;\n    }\n  }\n});\nexport default InfoBoxViewModel;","map":{"version":3,"sources":["C:/Users/passa/Desktop/WaterLevelReact/node_modules/cesium/Source/Widgets/InfoBox/InfoBoxViewModel.js"],"names":["defined","Event","knockout","cameraEnabledPath","cameraDisabledPath","InfoBoxViewModel","_cameraClicked","_closeClicked","maxHeight","enableCamera","isCameraTracking","showInfo","titleText","description","track","_loadingIndicatorHtml","cameraIconPath","undefined","defineProperty","get","length","prototype","maxHeightOffset","offset","Object","defineProperties","cameraClicked","closeClicked"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,uBAApB;AACA,OAAOC,KAAP,MAAkB,qBAAlB;AACA,OAAOC,QAAP,MAAqB,8BAArB;AAEA,IAAIC,iBAAiB,GACnB,oXADF;AAEA,IAAIC,kBAAkB,GACpB,ghBADF;AAGA;;;;;;AAKA,SAASC,gBAAT,GAA4B;AAC1B,OAAKC,cAAL,GAAsB,IAAIL,KAAJ,EAAtB;AACA,OAAKM,aAAL,GAAqB,IAAIN,KAAJ,EAArB;AAEA;;;;;AAIA,OAAKO,SAAL,GAAiB,GAAjB;AAEA;;;;;AAIA,OAAKC,YAAL,GAAoB,KAApB;AAEA;;;;;AAIA,OAAKC,gBAAL,GAAwB,KAAxB;AAEA;;;;;AAIA,OAAKC,QAAL,GAAgB,KAAhB;AAEA;;;;;AAIA,OAAKC,SAAL,GAAiB,EAAjB;AAEA;;;;;AAIA,OAAKC,WAAL,GAAmB,EAAnB;AAEAX,EAAAA,QAAQ,CAACY,KAAT,CAAe,IAAf,EAAqB,CACnB,UADmB,EAEnB,WAFmB,EAGnB,aAHmB,EAInB,WAJmB,EAKnB,cALmB,EAMnB,kBANmB,CAArB;AASA,OAAKC,qBAAL,GACE,iGADF;AAGA;;;;;AAIA,OAAKC,cAAL,GAAsBC,SAAtB;AACAf,EAAAA,QAAQ,CAACgB,cAAT,CAAwB,IAAxB,EAA8B,gBAA9B,EAAgD;AAC9CC,IAAAA,GAAG,EAAE,eAAY;AACf,aAAO,CAAC,KAAKV,YAAN,IAAsB,KAAKC,gBAA3B,GACHN,kBADG,GAEHD,iBAFJ;AAGD;AAL6C,GAAhD;AAQAD,EAAAA,QAAQ,CAACgB,cAAT,CAAwB,IAAxB,EAA8B,WAA9B,EAA2C;AACzCC,IAAAA,GAAG,EAAE,eAAY;AACf,aAAO,CAACnB,OAAO,CAAC,KAAKa,WAAN,CAAR,IAA8B,KAAKA,WAAL,CAAiBO,MAAjB,KAA4B,CAAjE;AACD;AAHwC,GAA3C;AAKD;AAED;;;;;;;AAKAf,gBAAgB,CAACgB,SAAjB,CAA2BC,eAA3B,GAA6C,UAAUC,MAAV,EAAkB;AAC7D,SAAO,KAAKf,SAAL,GAAiBe,MAAjB,GAA0B,IAAjC;AACD,CAFD;;AAIAC,MAAM,CAACC,gBAAP,CAAwBpB,gBAAgB,CAACgB,SAAzC,EAAoD;AAClD;;;;;AAKAK,EAAAA,aAAa,EAAE;AACbP,IAAAA,GAAG,EAAE,eAAY;AACf,aAAO,KAAKb,cAAZ;AACD;AAHY,GANmC;;AAWlD;;;;;AAKAqB,EAAAA,YAAY,EAAE;AACZR,IAAAA,GAAG,EAAE,eAAY;AACf,aAAO,KAAKZ,aAAZ;AACD;AAHW;AAhBoC,CAApD;AAsBA,eAAeF,gBAAf","sourcesContent":["import defined from \"../../Core/defined.js\";\nimport Event from \"../../Core/Event.js\";\nimport knockout from \"../../ThirdParty/knockout.js\";\n\nvar cameraEnabledPath =\n  \"M 13.84375 7.03125 C 11.412798 7.03125 9.46875 8.975298 9.46875 11.40625 L 9.46875 11.59375 L 2.53125 7.21875 L 2.53125 24.0625 L 9.46875 19.6875 C 9.4853444 22.104033 11.423165 24.0625 13.84375 24.0625 L 25.875 24.0625 C 28.305952 24.0625 30.28125 22.087202 30.28125 19.65625 L 30.28125 11.40625 C 30.28125 8.975298 28.305952 7.03125 25.875 7.03125 L 13.84375 7.03125 z\";\nvar cameraDisabledPath =\n  \"M 27.34375 1.65625 L 5.28125 27.9375 L 8.09375 30.3125 L 30.15625 4.03125 L 27.34375 1.65625 z M 13.84375 7.03125 C 11.412798 7.03125 9.46875 8.975298 9.46875 11.40625 L 9.46875 11.59375 L 2.53125 7.21875 L 2.53125 24.0625 L 9.46875 19.6875 C 9.4724893 20.232036 9.5676108 20.7379 9.75 21.21875 L 21.65625 7.03125 L 13.84375 7.03125 z M 28.21875 7.71875 L 14.53125 24.0625 L 25.875 24.0625 C 28.305952 24.0625 30.28125 22.087202 30.28125 19.65625 L 30.28125 11.40625 C 30.28125 9.8371439 29.456025 8.4902779 28.21875 7.71875 z\";\n\n/**\n * The view model for {@link InfoBox}.\n * @alias InfoBoxViewModel\n * @constructor\n */\nfunction InfoBoxViewModel() {\n  this._cameraClicked = new Event();\n  this._closeClicked = new Event();\n\n  /**\n   * Gets or sets the maximum height of the info box in pixels.  This property is observable.\n   * @type {Number}\n   */\n  this.maxHeight = 500;\n\n  /**\n   * Gets or sets whether the camera tracking icon is enabled.\n   * @type {Boolean}\n   */\n  this.enableCamera = false;\n\n  /**\n   * Gets or sets the status of current camera tracking of the selected object.\n   * @type {Boolean}\n   */\n  this.isCameraTracking = false;\n\n  /**\n   * Gets or sets the visibility of the info box.\n   * @type {Boolean}\n   */\n  this.showInfo = false;\n\n  /**\n   * Gets or sets the title text in the info box.\n   * @type {String}\n   */\n  this.titleText = \"\";\n\n  /**\n   * Gets or sets the description HTML for the info box.\n   * @type {String}\n   */\n  this.description = \"\";\n\n  knockout.track(this, [\n    \"showInfo\",\n    \"titleText\",\n    \"description\",\n    \"maxHeight\",\n    \"enableCamera\",\n    \"isCameraTracking\",\n  ]);\n\n  this._loadingIndicatorHtml =\n    '<div class=\"cesium-infoBox-loadingContainer\"><span class=\"cesium-infoBox-loading\"></span></div>';\n\n  /**\n   * Gets the SVG path of the camera icon, which can change to be \"crossed out\" or not.\n   * @type {String}\n   */\n  this.cameraIconPath = undefined;\n  knockout.defineProperty(this, \"cameraIconPath\", {\n    get: function () {\n      return !this.enableCamera || this.isCameraTracking\n        ? cameraDisabledPath\n        : cameraEnabledPath;\n    },\n  });\n\n  knockout.defineProperty(this, \"_bodyless\", {\n    get: function () {\n      return !defined(this.description) || this.description.length === 0;\n    },\n  });\n}\n\n/**\n * Gets the maximum height of sections within the info box, minus an offset, in CSS-ready form.\n * @param {Number} offset The offset in pixels.\n * @returns {String}\n */\nInfoBoxViewModel.prototype.maxHeightOffset = function (offset) {\n  return this.maxHeight - offset + \"px\";\n};\n\nObject.defineProperties(InfoBoxViewModel.prototype, {\n  /**\n   * Gets an {@link Event} that is fired when the user clicks the camera icon.\n   * @memberof InfoBoxViewModel.prototype\n   * @type {Event}\n   */\n  cameraClicked: {\n    get: function () {\n      return this._cameraClicked;\n    },\n  },\n  /**\n   * Gets an {@link Event} that is fired when the user closes the info box.\n   * @memberof InfoBoxViewModel.prototype\n   * @type {Event}\n   */\n  closeClicked: {\n    get: function () {\n      return this._closeClicked;\n    },\n  },\n});\nexport default InfoBoxViewModel;\n"]},"metadata":{},"sourceType":"module"}
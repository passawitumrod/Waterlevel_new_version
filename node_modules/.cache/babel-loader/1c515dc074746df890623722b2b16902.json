{"ast":null,"code":"import defaultValue from \"../Core/defaultValue.js\";\nimport defined from \"../Core/defined.js\";\nimport ConstantProperty from \"./ConstantProperty.js\";\n\nfunction createProperty(name, privateName, subscriptionName, configurable, createPropertyCallback) {\n  return {\n    configurable: configurable,\n    get: function get() {\n      return this[privateName];\n    },\n    set: function set(value) {\n      var oldValue = this[privateName];\n      var subscription = this[subscriptionName];\n\n      if (defined(subscription)) {\n        subscription();\n        this[subscriptionName] = undefined;\n      }\n\n      var hasValue = value !== undefined;\n\n      if (hasValue && (!defined(value) || !defined(value.getValue)) && defined(createPropertyCallback)) {\n        value = createPropertyCallback(value);\n      }\n\n      if (oldValue !== value) {\n        this[privateName] = value;\n\n        this._definitionChanged.raiseEvent(this, name, value, oldValue);\n      }\n\n      if (defined(value) && defined(value.definitionChanged)) {\n        this[subscriptionName] = value.definitionChanged.addEventListener(function () {\n          this._definitionChanged.raiseEvent(this, name, value, value);\n        }, this);\n      }\n    }\n  };\n}\n\nfunction createConstantProperty(value) {\n  return new ConstantProperty(value);\n}\n/**\n * Used to consistently define all DataSources graphics objects.\n * This is broken into two functions because the Chrome profiler does a better\n * job of optimizing lookups if it notices that the string is constant throughout the function.\n * @private\n */\n\n\nfunction createPropertyDescriptor(name, configurable, createPropertyCallback) {\n  //Safari 8.0.3 has a JavaScript bug that causes it to confuse two variables and treat them as the same.\n  //The two extra toString calls work around the issue.\n  return createProperty(name, \"_\" + name.toString(), \"_\" + name.toString() + \"Subscription\", defaultValue(configurable, false), defaultValue(createPropertyCallback, createConstantProperty));\n}\n\nexport default createPropertyDescriptor;","map":{"version":3,"sources":["C:/Users/passa/Desktop/WaterLevelReact/node_modules/cesium/Source/DataSources/createPropertyDescriptor.js"],"names":["defaultValue","defined","ConstantProperty","createProperty","name","privateName","subscriptionName","configurable","createPropertyCallback","get","set","value","oldValue","subscription","undefined","hasValue","getValue","_definitionChanged","raiseEvent","definitionChanged","addEventListener","createConstantProperty","createPropertyDescriptor","toString"],"mappings":"AAAA,OAAOA,YAAP,MAAyB,yBAAzB;AACA,OAAOC,OAAP,MAAoB,oBAApB;AACA,OAAOC,gBAAP,MAA6B,uBAA7B;;AAEA,SAASC,cAAT,CACEC,IADF,EAEEC,WAFF,EAGEC,gBAHF,EAIEC,YAJF,EAKEC,sBALF,EAME;AACA,SAAO;AACLD,IAAAA,YAAY,EAAEA,YADT;AAELE,IAAAA,GAAG,EAAE,eAAY;AACf,aAAO,KAAKJ,WAAL,CAAP;AACD,KAJI;AAKLK,IAAAA,GAAG,EAAE,aAAUC,KAAV,EAAiB;AACpB,UAAIC,QAAQ,GAAG,KAAKP,WAAL,CAAf;AACA,UAAIQ,YAAY,GAAG,KAAKP,gBAAL,CAAnB;;AACA,UAAIL,OAAO,CAACY,YAAD,CAAX,EAA2B;AACzBA,QAAAA,YAAY;AACZ,aAAKP,gBAAL,IAAyBQ,SAAzB;AACD;;AAED,UAAIC,QAAQ,GAAGJ,KAAK,KAAKG,SAAzB;;AACA,UACEC,QAAQ,KACP,CAACd,OAAO,CAACU,KAAD,CAAR,IAAmB,CAACV,OAAO,CAACU,KAAK,CAACK,QAAP,CADpB,CAAR,IAEAf,OAAO,CAACO,sBAAD,CAHT,EAIE;AACAG,QAAAA,KAAK,GAAGH,sBAAsB,CAACG,KAAD,CAA9B;AACD;;AAED,UAAIC,QAAQ,KAAKD,KAAjB,EAAwB;AACtB,aAAKN,WAAL,IAAoBM,KAApB;;AACA,aAAKM,kBAAL,CAAwBC,UAAxB,CAAmC,IAAnC,EAAyCd,IAAzC,EAA+CO,KAA/C,EAAsDC,QAAtD;AACD;;AAED,UAAIX,OAAO,CAACU,KAAD,CAAP,IAAkBV,OAAO,CAACU,KAAK,CAACQ,iBAAP,CAA7B,EAAwD;AACtD,aAAKb,gBAAL,IAAyBK,KAAK,CAACQ,iBAAN,CAAwBC,gBAAxB,CACvB,YAAY;AACV,eAAKH,kBAAL,CAAwBC,UAAxB,CAAmC,IAAnC,EAAyCd,IAAzC,EAA+CO,KAA/C,EAAsDA,KAAtD;AACD,SAHsB,EAIvB,IAJuB,CAAzB;AAMD;AACF;AAnCI,GAAP;AAqCD;;AAED,SAASU,sBAAT,CAAgCV,KAAhC,EAAuC;AACrC,SAAO,IAAIT,gBAAJ,CAAqBS,KAArB,CAAP;AACD;AAED;;;;;;;;AAMA,SAASW,wBAAT,CAAkClB,IAAlC,EAAwCG,YAAxC,EAAsDC,sBAAtD,EAA8E;AAC5E;AACA;AACA,SAAOL,cAAc,CACnBC,IADmB,EAEnB,MAAMA,IAAI,CAACmB,QAAL,EAFa,EAGnB,MAAMnB,IAAI,CAACmB,QAAL,EAAN,GAAwB,cAHL,EAInBvB,YAAY,CAACO,YAAD,EAAe,KAAf,CAJO,EAKnBP,YAAY,CAACQ,sBAAD,EAAyBa,sBAAzB,CALO,CAArB;AAOD;;AACD,eAAeC,wBAAf","sourcesContent":["import defaultValue from \"../Core/defaultValue.js\";\nimport defined from \"../Core/defined.js\";\nimport ConstantProperty from \"./ConstantProperty.js\";\n\nfunction createProperty(\n  name,\n  privateName,\n  subscriptionName,\n  configurable,\n  createPropertyCallback\n) {\n  return {\n    configurable: configurable,\n    get: function () {\n      return this[privateName];\n    },\n    set: function (value) {\n      var oldValue = this[privateName];\n      var subscription = this[subscriptionName];\n      if (defined(subscription)) {\n        subscription();\n        this[subscriptionName] = undefined;\n      }\n\n      var hasValue = value !== undefined;\n      if (\n        hasValue &&\n        (!defined(value) || !defined(value.getValue)) &&\n        defined(createPropertyCallback)\n      ) {\n        value = createPropertyCallback(value);\n      }\n\n      if (oldValue !== value) {\n        this[privateName] = value;\n        this._definitionChanged.raiseEvent(this, name, value, oldValue);\n      }\n\n      if (defined(value) && defined(value.definitionChanged)) {\n        this[subscriptionName] = value.definitionChanged.addEventListener(\n          function () {\n            this._definitionChanged.raiseEvent(this, name, value, value);\n          },\n          this\n        );\n      }\n    },\n  };\n}\n\nfunction createConstantProperty(value) {\n  return new ConstantProperty(value);\n}\n\n/**\n * Used to consistently define all DataSources graphics objects.\n * This is broken into two functions because the Chrome profiler does a better\n * job of optimizing lookups if it notices that the string is constant throughout the function.\n * @private\n */\nfunction createPropertyDescriptor(name, configurable, createPropertyCallback) {\n  //Safari 8.0.3 has a JavaScript bug that causes it to confuse two variables and treat them as the same.\n  //The two extra toString calls work around the issue.\n  return createProperty(\n    name,\n    \"_\" + name.toString(),\n    \"_\" + name.toString() + \"Subscription\",\n    defaultValue(configurable, false),\n    defaultValue(createPropertyCallback, createConstantProperty)\n  );\n}\nexport default createPropertyDescriptor;\n"]},"metadata":{},"sourceType":"module"}
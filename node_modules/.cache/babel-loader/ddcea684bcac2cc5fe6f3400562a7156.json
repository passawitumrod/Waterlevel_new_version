{"ast":null,"code":"import Color from \"../Core/Color.js\";\nimport defined from \"../Core/defined.js\";\nimport destroyObject from \"../Core/destroyObject.js\";\nimport PixelFormat from \"../Core/PixelFormat.js\";\nimport ClearCommand from \"../Renderer/ClearCommand.js\";\nimport Framebuffer from \"../Renderer/Framebuffer.js\";\nimport PixelDatatype from \"../Renderer/PixelDatatype.js\";\nimport Renderbuffer from \"../Renderer/Renderbuffer.js\";\nimport RenderbufferFormat from \"../Renderer/RenderbufferFormat.js\";\nimport Sampler from \"../Renderer/Sampler.js\";\nimport Texture from \"../Renderer/Texture.js\";\n/**\n * @private\n */\n\nfunction SceneFramebuffer() {\n  this._colorTexture = undefined;\n  this._idTexture = undefined;\n  this._depthStencilTexture = undefined;\n  this._depthStencilRenderbuffer = undefined;\n  this._framebuffer = undefined;\n  this._idFramebuffer = undefined;\n  this._idClearColor = new Color(0.0, 0.0, 0.0, 0.0);\n  this._useHdr = undefined;\n  this._clearCommand = new ClearCommand({\n    color: new Color(0.0, 0.0, 0.0, 0.0),\n    depth: 1.0,\n    owner: this\n  });\n}\n\nfunction destroyResources(post) {\n  post._framebuffer = post._framebuffer && post._framebuffer.destroy();\n  post._idFramebuffer = post._idFramebuffer && post._idFramebuffer.destroy();\n  post._colorTexture = post._colorTexture && post._colorTexture.destroy();\n  post._idTexture = post._idTexture && post._idTexture.destroy();\n  post._depthStencilTexture = post._depthStencilTexture && post._depthStencilTexture.destroy();\n  post._depthStencilRenderbuffer = post._depthStencilRenderbuffer && post._depthStencilRenderbuffer.destroy();\n  post._depthStencilIdTexture = post._depthStencilIdTexture && post._depthStencilIdTexture.destroy();\n  post._depthStencilIdRenderbuffer = post._depthStencilIdRenderbuffer && post._depthStencilIdRenderbuffer.destroy();\n  post._framebuffer = undefined;\n  post._idFramebuffer = undefined;\n  post._colorTexture = undefined;\n  post._idTexture = undefined;\n  post._depthStencilTexture = undefined;\n  post._depthStencilRenderbuffer = undefined;\n  post._depthStencilIdTexture = undefined;\n  post._depthStencilIdRenderbuffer = undefined;\n}\n\nSceneFramebuffer.prototype.update = function (context, viewport, hdr) {\n  var width = viewport.width;\n  var height = viewport.height;\n  var colorTexture = this._colorTexture;\n\n  if (defined(colorTexture) && colorTexture.width === width && colorTexture.height === height && hdr === this._useHdr) {\n    return;\n  }\n\n  destroyResources(this);\n  this._useHdr = hdr;\n  var pixelDatatype = hdr ? context.halfFloatingPointTexture ? PixelDatatype.HALF_FLOAT : PixelDatatype.FLOAT : PixelDatatype.UNSIGNED_BYTE;\n  this._colorTexture = new Texture({\n    context: context,\n    width: width,\n    height: height,\n    pixelFormat: PixelFormat.RGBA,\n    pixelDatatype: pixelDatatype,\n    sampler: Sampler.NEAREST\n  });\n  this._idTexture = new Texture({\n    context: context,\n    width: width,\n    height: height,\n    pixelFormat: PixelFormat.RGBA,\n    pixelDatatype: PixelDatatype.UNSIGNED_BYTE,\n    sampler: Sampler.NEAREST\n  });\n\n  if (context.depthTexture) {\n    this._depthStencilTexture = new Texture({\n      context: context,\n      width: width,\n      height: height,\n      pixelFormat: PixelFormat.DEPTH_STENCIL,\n      pixelDatatype: PixelDatatype.UNSIGNED_INT_24_8,\n      sampler: Sampler.NEAREST\n    });\n    this._depthStencilIdTexture = new Texture({\n      context: context,\n      width: width,\n      height: height,\n      pixelFormat: PixelFormat.DEPTH_STENCIL,\n      pixelDatatype: PixelDatatype.UNSIGNED_INT_24_8,\n      sampler: Sampler.NEAREST\n    });\n  } else {\n    this._depthStencilRenderbuffer = new Renderbuffer({\n      context: context,\n      width: width,\n      height: height,\n      format: RenderbufferFormat.DEPTH_STENCIL\n    });\n    this._depthStencilIdRenderbuffer = new Renderbuffer({\n      context: context,\n      width: width,\n      height: height,\n      format: RenderbufferFormat.DEPTH_STENCIL\n    });\n  }\n\n  this._framebuffer = new Framebuffer({\n    context: context,\n    colorTextures: [this._colorTexture],\n    depthStencilTexture: this._depthStencilTexture,\n    depthStencilRenderbuffer: this._depthStencilRenderbuffer,\n    destroyAttachments: false\n  });\n  this._idFramebuffer = new Framebuffer({\n    context: context,\n    colorTextures: [this._idTexture],\n    depthStencilTexture: this._depthStencilIdTexture,\n    depthStencilRenderbuffer: this._depthStencilIdRenderbuffer,\n    destroyAttachments: false\n  });\n};\n\nSceneFramebuffer.prototype.clear = function (context, passState, clearColor) {\n  var framebuffer = passState.framebuffer;\n  passState.framebuffer = this._framebuffer;\n  Color.clone(clearColor, this._clearCommand.color);\n\n  this._clearCommand.execute(context, passState);\n\n  passState.framebuffer = this._idFramebuffer;\n  Color.clone(this._idClearColor, this._clearCommand.color);\n\n  this._clearCommand.execute(context, passState);\n\n  passState.framebuffer = framebuffer;\n};\n\nSceneFramebuffer.prototype.getFramebuffer = function () {\n  return this._framebuffer;\n};\n\nSceneFramebuffer.prototype.getIdFramebuffer = function () {\n  return this._idFramebuffer;\n};\n\nSceneFramebuffer.prototype.isDestroyed = function () {\n  return false;\n};\n\nSceneFramebuffer.prototype.destroy = function () {\n  destroyResources(this);\n  return destroyObject(this);\n};\n\nexport default SceneFramebuffer;","map":{"version":3,"sources":["C:/Users/passa/Desktop/WaterLevelReact/node_modules/cesium/Source/Scene/SceneFramebuffer.js"],"names":["Color","defined","destroyObject","PixelFormat","ClearCommand","Framebuffer","PixelDatatype","Renderbuffer","RenderbufferFormat","Sampler","Texture","SceneFramebuffer","_colorTexture","undefined","_idTexture","_depthStencilTexture","_depthStencilRenderbuffer","_framebuffer","_idFramebuffer","_idClearColor","_useHdr","_clearCommand","color","depth","owner","destroyResources","post","destroy","_depthStencilIdTexture","_depthStencilIdRenderbuffer","prototype","update","context","viewport","hdr","width","height","colorTexture","pixelDatatype","halfFloatingPointTexture","HALF_FLOAT","FLOAT","UNSIGNED_BYTE","pixelFormat","RGBA","sampler","NEAREST","depthTexture","DEPTH_STENCIL","UNSIGNED_INT_24_8","format","colorTextures","depthStencilTexture","depthStencilRenderbuffer","destroyAttachments","clear","passState","clearColor","framebuffer","clone","execute","getFramebuffer","getIdFramebuffer","isDestroyed"],"mappings":"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","sourcesContent":["import Color from \"../Core/Color.js\";\nimport defined from \"../Core/defined.js\";\nimport destroyObject from \"../Core/destroyObject.js\";\nimport PixelFormat from \"../Core/PixelFormat.js\";\nimport ClearCommand from \"../Renderer/ClearCommand.js\";\nimport Framebuffer from \"../Renderer/Framebuffer.js\";\nimport PixelDatatype from \"../Renderer/PixelDatatype.js\";\nimport Renderbuffer from \"../Renderer/Renderbuffer.js\";\nimport RenderbufferFormat from \"../Renderer/RenderbufferFormat.js\";\nimport Sampler from \"../Renderer/Sampler.js\";\nimport Texture from \"../Renderer/Texture.js\";\n\n/**\n * @private\n */\nfunction SceneFramebuffer() {\n  this._colorTexture = undefined;\n  this._idTexture = undefined;\n  this._depthStencilTexture = undefined;\n  this._depthStencilRenderbuffer = undefined;\n  this._framebuffer = undefined;\n  this._idFramebuffer = undefined;\n\n  this._idClearColor = new Color(0.0, 0.0, 0.0, 0.0);\n\n  this._useHdr = undefined;\n\n  this._clearCommand = new ClearCommand({\n    color: new Color(0.0, 0.0, 0.0, 0.0),\n    depth: 1.0,\n    owner: this,\n  });\n}\n\nfunction destroyResources(post) {\n  post._framebuffer = post._framebuffer && post._framebuffer.destroy();\n  post._idFramebuffer = post._idFramebuffer && post._idFramebuffer.destroy();\n  post._colorTexture = post._colorTexture && post._colorTexture.destroy();\n  post._idTexture = post._idTexture && post._idTexture.destroy();\n  post._depthStencilTexture =\n    post._depthStencilTexture && post._depthStencilTexture.destroy();\n  post._depthStencilRenderbuffer =\n    post._depthStencilRenderbuffer && post._depthStencilRenderbuffer.destroy();\n  post._depthStencilIdTexture =\n    post._depthStencilIdTexture && post._depthStencilIdTexture.destroy();\n  post._depthStencilIdRenderbuffer =\n    post._depthStencilIdRenderbuffer &&\n    post._depthStencilIdRenderbuffer.destroy();\n\n  post._framebuffer = undefined;\n  post._idFramebuffer = undefined;\n  post._colorTexture = undefined;\n  post._idTexture = undefined;\n  post._depthStencilTexture = undefined;\n  post._depthStencilRenderbuffer = undefined;\n  post._depthStencilIdTexture = undefined;\n  post._depthStencilIdRenderbuffer = undefined;\n}\n\nSceneFramebuffer.prototype.update = function (context, viewport, hdr) {\n  var width = viewport.width;\n  var height = viewport.height;\n  var colorTexture = this._colorTexture;\n  if (\n    defined(colorTexture) &&\n    colorTexture.width === width &&\n    colorTexture.height === height &&\n    hdr === this._useHdr\n  ) {\n    return;\n  }\n\n  destroyResources(this);\n  this._useHdr = hdr;\n\n  var pixelDatatype = hdr\n    ? context.halfFloatingPointTexture\n      ? PixelDatatype.HALF_FLOAT\n      : PixelDatatype.FLOAT\n    : PixelDatatype.UNSIGNED_BYTE;\n  this._colorTexture = new Texture({\n    context: context,\n    width: width,\n    height: height,\n    pixelFormat: PixelFormat.RGBA,\n    pixelDatatype: pixelDatatype,\n    sampler: Sampler.NEAREST,\n  });\n\n  this._idTexture = new Texture({\n    context: context,\n    width: width,\n    height: height,\n    pixelFormat: PixelFormat.RGBA,\n    pixelDatatype: PixelDatatype.UNSIGNED_BYTE,\n    sampler: Sampler.NEAREST,\n  });\n\n  if (context.depthTexture) {\n    this._depthStencilTexture = new Texture({\n      context: context,\n      width: width,\n      height: height,\n      pixelFormat: PixelFormat.DEPTH_STENCIL,\n      pixelDatatype: PixelDatatype.UNSIGNED_INT_24_8,\n      sampler: Sampler.NEAREST,\n    });\n    this._depthStencilIdTexture = new Texture({\n      context: context,\n      width: width,\n      height: height,\n      pixelFormat: PixelFormat.DEPTH_STENCIL,\n      pixelDatatype: PixelDatatype.UNSIGNED_INT_24_8,\n      sampler: Sampler.NEAREST,\n    });\n  } else {\n    this._depthStencilRenderbuffer = new Renderbuffer({\n      context: context,\n      width: width,\n      height: height,\n      format: RenderbufferFormat.DEPTH_STENCIL,\n    });\n    this._depthStencilIdRenderbuffer = new Renderbuffer({\n      context: context,\n      width: width,\n      height: height,\n      format: RenderbufferFormat.DEPTH_STENCIL,\n    });\n  }\n\n  this._framebuffer = new Framebuffer({\n    context: context,\n    colorTextures: [this._colorTexture],\n    depthStencilTexture: this._depthStencilTexture,\n    depthStencilRenderbuffer: this._depthStencilRenderbuffer,\n    destroyAttachments: false,\n  });\n\n  this._idFramebuffer = new Framebuffer({\n    context: context,\n    colorTextures: [this._idTexture],\n    depthStencilTexture: this._depthStencilIdTexture,\n    depthStencilRenderbuffer: this._depthStencilIdRenderbuffer,\n    destroyAttachments: false,\n  });\n};\n\nSceneFramebuffer.prototype.clear = function (context, passState, clearColor) {\n  var framebuffer = passState.framebuffer;\n\n  passState.framebuffer = this._framebuffer;\n  Color.clone(clearColor, this._clearCommand.color);\n  this._clearCommand.execute(context, passState);\n\n  passState.framebuffer = this._idFramebuffer;\n  Color.clone(this._idClearColor, this._clearCommand.color);\n  this._clearCommand.execute(context, passState);\n\n  passState.framebuffer = framebuffer;\n};\n\nSceneFramebuffer.prototype.getFramebuffer = function () {\n  return this._framebuffer;\n};\n\nSceneFramebuffer.prototype.getIdFramebuffer = function () {\n  return this._idFramebuffer;\n};\n\nSceneFramebuffer.prototype.isDestroyed = function () {\n  return false;\n};\n\nSceneFramebuffer.prototype.destroy = function () {\n  destroyResources(this);\n  return destroyObject(this);\n};\nexport default SceneFramebuffer;\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import defaultValue from \"../Core/defaultValue.js\";\nimport defined from \"../Core/defined.js\";\nimport DeveloperError from \"../Core/DeveloperError.js\";\n/**\n * The interface for all properties, which represent a value that can optionally vary over time.\n * This type defines an interface and cannot be instantiated directly.\n *\n * @alias Property\n * @constructor\n * @abstract\n *\n * @see CompositeProperty\n * @see ConstantProperty\n * @see SampledProperty\n * @see TimeIntervalCollectionProperty\n * @see MaterialProperty\n * @see PositionProperty\n * @see ReferenceProperty\n */\n\nfunction Property() {\n  DeveloperError.throwInstantiationError();\n}\n\nObject.defineProperties(Property.prototype, {\n  /**\n   * Gets a value indicating if this property is constant.  A property is considered\n   * constant if getValue always returns the same result for the current definition.\n   * @memberof Property.prototype\n   *\n   * @type {Boolean}\n   * @readonly\n   */\n  isConstant: {\n    get: DeveloperError.throwInstantiationError\n  },\n\n  /**\n   * Gets the event that is raised whenever the definition of this property changes.\n   * The definition is considered to have changed if a call to getValue would return\n   * a different result for the same time.\n   * @memberof Property.prototype\n   *\n   * @type {Event}\n   * @readonly\n   */\n  definitionChanged: {\n    get: DeveloperError.throwInstantiationError\n  }\n});\n/**\n * Gets the value of the property at the provided time.\n * @function\n *\n * @param {JulianDate} time The time for which to retrieve the value.\n * @param {Object} [result] The object to store the value into, if omitted, a new instance is created and returned.\n * @returns {Object} The modified result parameter or a new instance if the result parameter was not supplied.\n */\n\nProperty.prototype.getValue = DeveloperError.throwInstantiationError;\n/**\n * Compares this property to the provided property and returns\n * <code>true</code> if they are equal, <code>false</code> otherwise.\n * @function\n *\n * @param {Property} [other] The other property.\n * @returns {Boolean} <code>true</code> if left and right are equal, <code>false</code> otherwise.\n */\n\nProperty.prototype.equals = DeveloperError.throwInstantiationError;\n/**\n * @private\n */\n\nProperty.equals = function (left, right) {\n  return left === right || defined(left) && left.equals(right);\n};\n/**\n * @private\n */\n\n\nProperty.arrayEquals = function (left, right) {\n  if (left === right) {\n    return true;\n  }\n\n  if (!defined(left) || !defined(right) || left.length !== right.length) {\n    return false;\n  }\n\n  var length = left.length;\n\n  for (var i = 0; i < length; i++) {\n    if (!Property.equals(left[i], right[i])) {\n      return false;\n    }\n  }\n\n  return true;\n};\n/**\n * @private\n */\n\n\nProperty.isConstant = function (property) {\n  return !defined(property) || property.isConstant;\n};\n/**\n * @private\n */\n\n\nProperty.getValueOrUndefined = function (property, time, result) {\n  return defined(property) ? property.getValue(time, result) : undefined;\n};\n/**\n * @private\n */\n\n\nProperty.getValueOrDefault = function (property, time, valueDefault, result) {\n  return defined(property) ? defaultValue(property.getValue(time, result), valueDefault) : valueDefault;\n};\n/**\n * @private\n */\n\n\nProperty.getValueOrClonedDefault = function (property, time, valueDefault, result) {\n  var value;\n\n  if (defined(property)) {\n    value = property.getValue(time, result);\n  }\n\n  if (!defined(value)) {\n    value = valueDefault.clone(value);\n  }\n\n  return value;\n};\n\nexport default Property;","map":{"version":3,"sources":["C:/Users/passa/Desktop/WaterLevelReact/node_modules/cesium/Source/DataSources/Property.js"],"names":["defaultValue","defined","DeveloperError","Property","throwInstantiationError","Object","defineProperties","prototype","isConstant","get","definitionChanged","getValue","equals","left","right","arrayEquals","length","i","property","getValueOrUndefined","time","result","undefined","getValueOrDefault","valueDefault","getValueOrClonedDefault","value","clone"],"mappings":"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","sourcesContent":["import defaultValue from \"../Core/defaultValue.js\";\nimport defined from \"../Core/defined.js\";\nimport DeveloperError from \"../Core/DeveloperError.js\";\n\n/**\n * The interface for all properties, which represent a value that can optionally vary over time.\n * This type defines an interface and cannot be instantiated directly.\n *\n * @alias Property\n * @constructor\n * @abstract\n *\n * @see CompositeProperty\n * @see ConstantProperty\n * @see SampledProperty\n * @see TimeIntervalCollectionProperty\n * @see MaterialProperty\n * @see PositionProperty\n * @see ReferenceProperty\n */\nfunction Property() {\n  DeveloperError.throwInstantiationError();\n}\n\nObject.defineProperties(Property.prototype, {\n  /**\n   * Gets a value indicating if this property is constant.  A property is considered\n   * constant if getValue always returns the same result for the current definition.\n   * @memberof Property.prototype\n   *\n   * @type {Boolean}\n   * @readonly\n   */\n  isConstant: {\n    get: DeveloperError.throwInstantiationError,\n  },\n  /**\n   * Gets the event that is raised whenever the definition of this property changes.\n   * The definition is considered to have changed if a call to getValue would return\n   * a different result for the same time.\n   * @memberof Property.prototype\n   *\n   * @type {Event}\n   * @readonly\n   */\n  definitionChanged: {\n    get: DeveloperError.throwInstantiationError,\n  },\n});\n\n/**\n * Gets the value of the property at the provided time.\n * @function\n *\n * @param {JulianDate} time The time for which to retrieve the value.\n * @param {Object} [result] The object to store the value into, if omitted, a new instance is created and returned.\n * @returns {Object} The modified result parameter or a new instance if the result parameter was not supplied.\n */\nProperty.prototype.getValue = DeveloperError.throwInstantiationError;\n\n/**\n * Compares this property to the provided property and returns\n * <code>true</code> if they are equal, <code>false</code> otherwise.\n * @function\n *\n * @param {Property} [other] The other property.\n * @returns {Boolean} <code>true</code> if left and right are equal, <code>false</code> otherwise.\n */\nProperty.prototype.equals = DeveloperError.throwInstantiationError;\n\n/**\n * @private\n */\nProperty.equals = function (left, right) {\n  return left === right || (defined(left) && left.equals(right));\n};\n\n/**\n * @private\n */\nProperty.arrayEquals = function (left, right) {\n  if (left === right) {\n    return true;\n  }\n  if (!defined(left) || !defined(right) || left.length !== right.length) {\n    return false;\n  }\n  var length = left.length;\n  for (var i = 0; i < length; i++) {\n    if (!Property.equals(left[i], right[i])) {\n      return false;\n    }\n  }\n  return true;\n};\n\n/**\n * @private\n */\nProperty.isConstant = function (property) {\n  return !defined(property) || property.isConstant;\n};\n\n/**\n * @private\n */\nProperty.getValueOrUndefined = function (property, time, result) {\n  return defined(property) ? property.getValue(time, result) : undefined;\n};\n\n/**\n * @private\n */\nProperty.getValueOrDefault = function (property, time, valueDefault, result) {\n  return defined(property)\n    ? defaultValue(property.getValue(time, result), valueDefault)\n    : valueDefault;\n};\n\n/**\n * @private\n */\nProperty.getValueOrClonedDefault = function (\n  property,\n  time,\n  valueDefault,\n  result\n) {\n  var value;\n  if (defined(property)) {\n    value = property.getValue(time, result);\n  }\n  if (!defined(value)) {\n    value = valueDefault.clone(value);\n  }\n  return value;\n};\nexport default Property;\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import defined from \"./defined.js\";\nimport DeveloperError from \"./DeveloperError.js\";\n/**\n * Parses a query string into an object, where the keys and values of the object are the\n * name/value pairs from the query string, decoded. If a name appears multiple times,\n * the value in the object will be an array of values.\n * @exports queryToObject\n *\n * @param {String} queryString The query string.\n * @returns {Object} An object containing the parameters parsed from the query string.\n *\n *\n * @example\n * var obj = Cesium.queryToObject('key1=some%20value&key2=a%2Fb&key3=x&key3=y');\n * // obj will be:\n * // {\n * //   key1 : 'some value',\n * //   key2 : 'a/b',\n * //   key3 : ['x', 'y']\n * // }\n *\n * @see objectToQuery\n */\n\nfunction queryToObject(queryString) {\n  //>>includeStart('debug', pragmas.debug);\n  if (!defined(queryString)) {\n    throw new DeveloperError(\"queryString is required.\");\n  } //>>includeEnd('debug');\n\n\n  var result = {};\n\n  if (queryString === \"\") {\n    return result;\n  }\n\n  var parts = queryString.replace(/\\+/g, \"%20\").split(/[&;]/);\n\n  for (var i = 0, len = parts.length; i < len; ++i) {\n    var subparts = parts[i].split(\"=\");\n    var name = decodeURIComponent(subparts[0]);\n    var value = subparts[1];\n\n    if (defined(value)) {\n      value = decodeURIComponent(value);\n    } else {\n      value = \"\";\n    }\n\n    var resultValue = result[name];\n\n    if (typeof resultValue === \"string\") {\n      // expand the single value to an array\n      result[name] = [resultValue, value];\n    } else if (Array.isArray(resultValue)) {\n      resultValue.push(value);\n    } else {\n      result[name] = value;\n    }\n  }\n\n  return result;\n}\n\nexport default queryToObject;","map":{"version":3,"sources":["C:/Users/passa/Desktop/WaterLevelReact/node_modules/cesium/Source/Core/queryToObject.js"],"names":["defined","DeveloperError","queryToObject","queryString","result","parts","replace","split","i","len","length","subparts","name","decodeURIComponent","value","resultValue","Array","isArray","push"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,cAApB;AACA,OAAOC,cAAP,MAA2B,qBAA3B;AAEA;;;;;;;;;;;;;;;;;;;;;;AAqBA,SAASC,aAAT,CAAuBC,WAAvB,EAAoC;AAClC;AACA,MAAI,CAACH,OAAO,CAACG,WAAD,CAAZ,EAA2B;AACzB,UAAM,IAAIF,cAAJ,CAAmB,0BAAnB,CAAN;AACD,GAJiC,CAKlC;;;AAEA,MAAIG,MAAM,GAAG,EAAb;;AACA,MAAID,WAAW,KAAK,EAApB,EAAwB;AACtB,WAAOC,MAAP;AACD;;AACD,MAAIC,KAAK,GAAGF,WAAW,CAACG,OAAZ,CAAoB,KAApB,EAA2B,KAA3B,EAAkCC,KAAlC,CAAwC,MAAxC,CAAZ;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAR,EAAWC,GAAG,GAAGJ,KAAK,CAACK,MAA5B,EAAoCF,CAAC,GAAGC,GAAxC,EAA6C,EAAED,CAA/C,EAAkD;AAChD,QAAIG,QAAQ,GAAGN,KAAK,CAACG,CAAD,CAAL,CAASD,KAAT,CAAe,GAAf,CAAf;AAEA,QAAIK,IAAI,GAAGC,kBAAkB,CAACF,QAAQ,CAAC,CAAD,CAAT,CAA7B;AACA,QAAIG,KAAK,GAAGH,QAAQ,CAAC,CAAD,CAApB;;AACA,QAAIX,OAAO,CAACc,KAAD,CAAX,EAAoB;AAClBA,MAAAA,KAAK,GAAGD,kBAAkB,CAACC,KAAD,CAA1B;AACD,KAFD,MAEO;AACLA,MAAAA,KAAK,GAAG,EAAR;AACD;;AAED,QAAIC,WAAW,GAAGX,MAAM,CAACQ,IAAD,CAAxB;;AACA,QAAI,OAAOG,WAAP,KAAuB,QAA3B,EAAqC;AACnC;AACAX,MAAAA,MAAM,CAACQ,IAAD,CAAN,GAAe,CAACG,WAAD,EAAcD,KAAd,CAAf;AACD,KAHD,MAGO,IAAIE,KAAK,CAACC,OAAN,CAAcF,WAAd,CAAJ,EAAgC;AACrCA,MAAAA,WAAW,CAACG,IAAZ,CAAiBJ,KAAjB;AACD,KAFM,MAEA;AACLV,MAAAA,MAAM,CAACQ,IAAD,CAAN,GAAeE,KAAf;AACD;AACF;;AACD,SAAOV,MAAP;AACD;;AACD,eAAeF,aAAf","sourcesContent":["import defined from \"./defined.js\";\nimport DeveloperError from \"./DeveloperError.js\";\n\n/**\n * Parses a query string into an object, where the keys and values of the object are the\n * name/value pairs from the query string, decoded. If a name appears multiple times,\n * the value in the object will be an array of values.\n * @exports queryToObject\n *\n * @param {String} queryString The query string.\n * @returns {Object} An object containing the parameters parsed from the query string.\n *\n *\n * @example\n * var obj = Cesium.queryToObject('key1=some%20value&key2=a%2Fb&key3=x&key3=y');\n * // obj will be:\n * // {\n * //   key1 : 'some value',\n * //   key2 : 'a/b',\n * //   key3 : ['x', 'y']\n * // }\n *\n * @see objectToQuery\n */\nfunction queryToObject(queryString) {\n  //>>includeStart('debug', pragmas.debug);\n  if (!defined(queryString)) {\n    throw new DeveloperError(\"queryString is required.\");\n  }\n  //>>includeEnd('debug');\n\n  var result = {};\n  if (queryString === \"\") {\n    return result;\n  }\n  var parts = queryString.replace(/\\+/g, \"%20\").split(/[&;]/);\n  for (var i = 0, len = parts.length; i < len; ++i) {\n    var subparts = parts[i].split(\"=\");\n\n    var name = decodeURIComponent(subparts[0]);\n    var value = subparts[1];\n    if (defined(value)) {\n      value = decodeURIComponent(value);\n    } else {\n      value = \"\";\n    }\n\n    var resultValue = result[name];\n    if (typeof resultValue === \"string\") {\n      // expand the single value to an array\n      result[name] = [resultValue, value];\n    } else if (Array.isArray(resultValue)) {\n      resultValue.push(value);\n    } else {\n      result[name] = value;\n    }\n  }\n  return result;\n}\nexport default queryToObject;\n"]},"metadata":{},"sourceType":"module"}
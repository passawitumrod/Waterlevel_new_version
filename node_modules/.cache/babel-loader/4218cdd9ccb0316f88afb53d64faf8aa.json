{"ast":null,"code":"/**\n * A tonemapping algorithm when rendering with high dynamic range.\n *\n * @exports Tonemapper\n * @private\n */\nvar Tonemapper = {\n  /**\n   * Use the Reinhard tonemapping operator.\n   *\n   * @type {Number}\n   * @constant\n   */\n  REINHARD: 0,\n\n  /**\n   * Use the modified Reinhard tonemapping operator.\n   *\n   * @type {Number}\n   * @constant\n   */\n  MODIFIED_REINHARD: 1,\n\n  /**\n   * Use the Filmic tonemapping operator.\n   *\n   * @type {Number}\n   * @constant\n   */\n  FILMIC: 2,\n\n  /**\n   * Use the ACES tonemapping operator.\n   *\n   * @type {Number}\n   * @constant\n   */\n  ACES: 3,\n\n  /**\n   * @private\n   */\n  validate: function (tonemapper) {\n    return tonemapper === Tonemapper.REINHARD || tonemapper === Tonemapper.MODIFIED_REINHARD || tonemapper === Tonemapper.FILMIC || tonemapper === Tonemapper.ACES;\n  }\n};\nexport default Object.freeze(Tonemapper);","map":{"version":3,"sources":["C:/Users/passa/Desktop/WaterDeployTrial/node_modules/cesium/Source/Scene/Tonemapper.js"],"names":["Tonemapper","REINHARD","MODIFIED_REINHARD","FILMIC","ACES","validate","tonemapper","Object","freeze"],"mappings":"AAAA;;;;;;AAMA,IAAIA,UAAU,GAAG;AACf;;;;;;AAMAC,EAAAA,QAAQ,EAAE,CAPK;;AASf;;;;;;AAMAC,EAAAA,iBAAiB,EAAE,CAfJ;;AAiBf;;;;;;AAMAC,EAAAA,MAAM,EAAE,CAvBO;;AAyBf;;;;;;AAMAC,EAAAA,IAAI,EAAE,CA/BS;;AAiCf;;;AAGAC,EAAAA,QAAQ,EAAE,UAAUC,UAAV,EAAsB;AAC9B,WACEA,UAAU,KAAKN,UAAU,CAACC,QAA1B,IACAK,UAAU,KAAKN,UAAU,CAACE,iBAD1B,IAEAI,UAAU,KAAKN,UAAU,CAACG,MAF1B,IAGAG,UAAU,KAAKN,UAAU,CAACI,IAJ5B;AAMD;AA3Cc,CAAjB;AA6CA,eAAeG,MAAM,CAACC,MAAP,CAAcR,UAAd,CAAf","sourcesContent":["/**\n * A tonemapping algorithm when rendering with high dynamic range.\n *\n * @exports Tonemapper\n * @private\n */\nvar Tonemapper = {\n  /**\n   * Use the Reinhard tonemapping operator.\n   *\n   * @type {Number}\n   * @constant\n   */\n  REINHARD: 0,\n\n  /**\n   * Use the modified Reinhard tonemapping operator.\n   *\n   * @type {Number}\n   * @constant\n   */\n  MODIFIED_REINHARD: 1,\n\n  /**\n   * Use the Filmic tonemapping operator.\n   *\n   * @type {Number}\n   * @constant\n   */\n  FILMIC: 2,\n\n  /**\n   * Use the ACES tonemapping operator.\n   *\n   * @type {Number}\n   * @constant\n   */\n  ACES: 3,\n\n  /**\n   * @private\n   */\n  validate: function (tonemapper) {\n    return (\n      tonemapper === Tonemapper.REINHARD ||\n      tonemapper === Tonemapper.MODIFIED_REINHARD ||\n      tonemapper === Tonemapper.FILMIC ||\n      tonemapper === Tonemapper.ACES\n    );\n  },\n};\nexport default Object.freeze(Tonemapper);\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import BoundingRectangle from \"../Core/BoundingRectangle.js\";\nimport Color from \"../Core/Color.js\";\nimport defaultValue from \"../Core/defaultValue.js\";\nimport defined from \"../Core/defined.js\";\nimport destroyObject from \"../Core/destroyObject.js\";\nimport Framebuffer from \"../Renderer/Framebuffer.js\";\nimport PassState from \"../Renderer/PassState.js\";\nimport Renderbuffer from \"../Renderer/Renderbuffer.js\";\nimport RenderbufferFormat from \"../Renderer/RenderbufferFormat.js\";\nimport Texture from \"../Renderer/Texture.js\";\n/**\n * @private\n */\n\nfunction PickFramebuffer(context) {\n  // Override per-command states\n  var passState = new PassState(context);\n  passState.blendingEnabled = false;\n  passState.scissorTest = {\n    enabled: true,\n    rectangle: new BoundingRectangle()\n  };\n  passState.viewport = new BoundingRectangle();\n  this._context = context;\n  this._fb = undefined;\n  this._passState = passState;\n  this._width = 0;\n  this._height = 0;\n}\n\nPickFramebuffer.prototype.begin = function (screenSpaceRectangle, viewport) {\n  var context = this._context;\n  var width = viewport.width;\n  var height = viewport.height;\n  BoundingRectangle.clone(screenSpaceRectangle, this._passState.scissorTest.rectangle); // Initially create or recreate renderbuffers and framebuffer used for picking\n\n  if (!defined(this._fb) || this._width !== width || this._height !== height) {\n    this._width = width;\n    this._height = height;\n    this._fb = this._fb && this._fb.destroy();\n    this._fb = new Framebuffer({\n      context: context,\n      colorTextures: [new Texture({\n        context: context,\n        width: width,\n        height: height\n      })],\n      depthStencilRenderbuffer: new Renderbuffer({\n        context: context,\n        width: width,\n        height: height,\n        format: RenderbufferFormat.DEPTH_STENCIL\n      })\n    });\n    this._passState.framebuffer = this._fb;\n  }\n\n  this._passState.viewport.width = width;\n  this._passState.viewport.height = height;\n  return this._passState;\n};\n\nvar colorScratch = new Color();\n\nPickFramebuffer.prototype.end = function (screenSpaceRectangle) {\n  var width = defaultValue(screenSpaceRectangle.width, 1.0);\n  var height = defaultValue(screenSpaceRectangle.height, 1.0);\n  var context = this._context;\n  var pixels = context.readPixels({\n    x: screenSpaceRectangle.x,\n    y: screenSpaceRectangle.y,\n    width: width,\n    height: height,\n    framebuffer: this._fb\n  });\n  var max = Math.max(width, height);\n  var length = max * max;\n  var halfWidth = Math.floor(width * 0.5);\n  var halfHeight = Math.floor(height * 0.5);\n  var x = 0;\n  var y = 0;\n  var dx = 0;\n  var dy = -1; // Spiral around the center pixel, this is a workaround until\n  // we can access the depth buffer on all browsers.\n  // The region does not have to square and the dimensions do not have to be odd, but\n  // loop iterations would be wasted. Prefer square regions where the size is odd.\n\n  for (var i = 0; i < length; ++i) {\n    if (-halfWidth <= x && x <= halfWidth && -halfHeight <= y && y <= halfHeight) {\n      var index = 4 * ((halfHeight - y) * width + x + halfWidth);\n      colorScratch.red = Color.byteToFloat(pixels[index]);\n      colorScratch.green = Color.byteToFloat(pixels[index + 1]);\n      colorScratch.blue = Color.byteToFloat(pixels[index + 2]);\n      colorScratch.alpha = Color.byteToFloat(pixels[index + 3]);\n      var object = context.getObjectByPickColor(colorScratch);\n\n      if (defined(object)) {\n        return object;\n      }\n    } // if (top right || bottom left corners) || (top left corner) || (bottom right corner + (1, 0))\n    // change spiral direction\n\n\n    if (x === y || x < 0 && -x === y || x > 0 && x === 1 - y) {\n      var temp = dx;\n      dx = -dy;\n      dy = temp;\n    }\n\n    x += dx;\n    y += dy;\n  }\n\n  return undefined;\n};\n\nPickFramebuffer.prototype.isDestroyed = function () {\n  return false;\n};\n\nPickFramebuffer.prototype.destroy = function () {\n  this._fb = this._fb && this._fb.destroy();\n  return destroyObject(this);\n};\n\nexport default PickFramebuffer;","map":{"version":3,"sources":["C:/Users/passa/Desktop/WaterLevelReact/node_modules/cesium/Source/Scene/PickFramebuffer.js"],"names":["BoundingRectangle","Color","defaultValue","defined","destroyObject","Framebuffer","PassState","Renderbuffer","RenderbufferFormat","Texture","PickFramebuffer","context","passState","blendingEnabled","scissorTest","enabled","rectangle","viewport","_context","_fb","undefined","_passState","_width","_height","prototype","begin","screenSpaceRectangle","width","height","clone","destroy","colorTextures","depthStencilRenderbuffer","format","DEPTH_STENCIL","framebuffer","colorScratch","end","pixels","readPixels","x","y","max","Math","length","halfWidth","floor","halfHeight","dx","dy","i","index","red","byteToFloat","green","blue","alpha","object","getObjectByPickColor","temp","isDestroyed"],"mappings":"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","sourcesContent":["import BoundingRectangle from \"../Core/BoundingRectangle.js\";\nimport Color from \"../Core/Color.js\";\nimport defaultValue from \"../Core/defaultValue.js\";\nimport defined from \"../Core/defined.js\";\nimport destroyObject from \"../Core/destroyObject.js\";\nimport Framebuffer from \"../Renderer/Framebuffer.js\";\nimport PassState from \"../Renderer/PassState.js\";\nimport Renderbuffer from \"../Renderer/Renderbuffer.js\";\nimport RenderbufferFormat from \"../Renderer/RenderbufferFormat.js\";\nimport Texture from \"../Renderer/Texture.js\";\n\n/**\n * @private\n */\nfunction PickFramebuffer(context) {\n  // Override per-command states\n  var passState = new PassState(context);\n  passState.blendingEnabled = false;\n  passState.scissorTest = {\n    enabled: true,\n    rectangle: new BoundingRectangle(),\n  };\n  passState.viewport = new BoundingRectangle();\n\n  this._context = context;\n  this._fb = undefined;\n  this._passState = passState;\n  this._width = 0;\n  this._height = 0;\n}\nPickFramebuffer.prototype.begin = function (screenSpaceRectangle, viewport) {\n  var context = this._context;\n  var width = viewport.width;\n  var height = viewport.height;\n\n  BoundingRectangle.clone(\n    screenSpaceRectangle,\n    this._passState.scissorTest.rectangle\n  );\n\n  // Initially create or recreate renderbuffers and framebuffer used for picking\n  if (!defined(this._fb) || this._width !== width || this._height !== height) {\n    this._width = width;\n    this._height = height;\n\n    this._fb = this._fb && this._fb.destroy();\n    this._fb = new Framebuffer({\n      context: context,\n      colorTextures: [\n        new Texture({\n          context: context,\n          width: width,\n          height: height,\n        }),\n      ],\n      depthStencilRenderbuffer: new Renderbuffer({\n        context: context,\n        width: width,\n        height: height,\n        format: RenderbufferFormat.DEPTH_STENCIL,\n      }),\n    });\n    this._passState.framebuffer = this._fb;\n  }\n\n  this._passState.viewport.width = width;\n  this._passState.viewport.height = height;\n\n  return this._passState;\n};\n\nvar colorScratch = new Color();\n\nPickFramebuffer.prototype.end = function (screenSpaceRectangle) {\n  var width = defaultValue(screenSpaceRectangle.width, 1.0);\n  var height = defaultValue(screenSpaceRectangle.height, 1.0);\n\n  var context = this._context;\n  var pixels = context.readPixels({\n    x: screenSpaceRectangle.x,\n    y: screenSpaceRectangle.y,\n    width: width,\n    height: height,\n    framebuffer: this._fb,\n  });\n\n  var max = Math.max(width, height);\n  var length = max * max;\n  var halfWidth = Math.floor(width * 0.5);\n  var halfHeight = Math.floor(height * 0.5);\n\n  var x = 0;\n  var y = 0;\n  var dx = 0;\n  var dy = -1;\n\n  // Spiral around the center pixel, this is a workaround until\n  // we can access the depth buffer on all browsers.\n\n  // The region does not have to square and the dimensions do not have to be odd, but\n  // loop iterations would be wasted. Prefer square regions where the size is odd.\n  for (var i = 0; i < length; ++i) {\n    if (\n      -halfWidth <= x &&\n      x <= halfWidth &&\n      -halfHeight <= y &&\n      y <= halfHeight\n    ) {\n      var index = 4 * ((halfHeight - y) * width + x + halfWidth);\n\n      colorScratch.red = Color.byteToFloat(pixels[index]);\n      colorScratch.green = Color.byteToFloat(pixels[index + 1]);\n      colorScratch.blue = Color.byteToFloat(pixels[index + 2]);\n      colorScratch.alpha = Color.byteToFloat(pixels[index + 3]);\n\n      var object = context.getObjectByPickColor(colorScratch);\n      if (defined(object)) {\n        return object;\n      }\n    }\n\n    // if (top right || bottom left corners) || (top left corner) || (bottom right corner + (1, 0))\n    // change spiral direction\n    if (x === y || (x < 0 && -x === y) || (x > 0 && x === 1 - y)) {\n      var temp = dx;\n      dx = -dy;\n      dy = temp;\n    }\n\n    x += dx;\n    y += dy;\n  }\n\n  return undefined;\n};\n\nPickFramebuffer.prototype.isDestroyed = function () {\n  return false;\n};\n\nPickFramebuffer.prototype.destroy = function () {\n  this._fb = this._fb && this._fb.destroy();\n  return destroyObject(this);\n};\nexport default PickFramebuffer;\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import defined from \"../../Core/defined.js\";\nimport destroyObject from \"../../Core/destroyObject.js\";\nimport DeveloperError from \"../../Core/DeveloperError.js\";\nimport FeatureDetection from \"../../Core/FeatureDetection.js\";\nimport knockout from \"../../ThirdParty/knockout.js\";\nimport getElement from \"../getElement.js\";\nimport BaseLayerPickerViewModel from \"./BaseLayerPickerViewModel.js\";\n/**\n * <span style=\"display: block; text-align: center;\">\n * <img src=\"Images/BaseLayerPicker.png\" width=\"264\" height=\"287\" alt=\"\" />\n * <br />BaseLayerPicker with its drop-panel open.\n * </span>\n * <br /><br />\n * The BaseLayerPicker is a single button widget that displays a panel of available imagery and\n * terrain providers.  When imagery is selected, the corresponding imagery layer is created and inserted\n * as the base layer of the imagery collection; removing the existing base.  When terrain is selected,\n * it replaces the current terrain provider.  Each item in the available providers list contains a name,\n * a representative icon, and a tooltip to display more information when hovered. The list is initially\n * empty, and must be configured before use, as illustrated in the below example.\n *\n * @alias BaseLayerPicker\n * @constructor\n *\n * @param {Element|String} container The parent HTML container node or ID for this widget.\n * @param {Object} options Object with the following properties:\n * @param {Globe} options.globe The Globe to use.\n * @param {ProviderViewModel[]} [options.imageryProviderViewModels=[]] The array of ProviderViewModel instances to use for imagery.\n * @param {ProviderViewModel} [options.selectedImageryProviderViewModel] The view model for the current base imagery layer, if not supplied the first available imagery layer is used.\n * @param {ProviderViewModel[]} [options.terrainProviderViewModels=[]] The array of ProviderViewModel instances to use for terrain.\n * @param {ProviderViewModel} [options.selectedTerrainProviderViewModel] The view model for the current base terrain layer, if not supplied the first available terrain layer is used.\n *\n * @exception {DeveloperError} Element with id \"container\" does not exist in the document.\n *\n *\n * @example\n * // In HTML head, include a link to the BaseLayerPicker.css stylesheet,\n * // and in the body, include: <div id=\"baseLayerPickerContainer\"\n * //   style=\"position:absolute;top:24px;right:24px;width:38px;height:38px;\"></div>\n *\n * //Create the list of available providers we would like the user to select from.\n * //This example uses 3, OpenStreetMap, The Black Marble, and a single, non-streaming world image.\n * var imageryViewModels = [];\n * imageryViewModels.push(new Cesium.ProviderViewModel({\n *      name : 'Open\\u00adStreet\\u00adMap',\n *      iconUrl : Cesium.buildModuleUrl('Widgets/Images/ImageryProviders/openStreetMap.png'),\n *      tooltip : 'OpenStreetMap (OSM) is a collaborative project to create a free editable \\\n * map of the world.\\nhttp://www.openstreetmap.org',\n *      creationFunction : function() {\n *          return new Cesium.OpenStreetMapImageryProvider({\n *              url : 'https://a.tile.openstreetmap.org/'\n *          });\n *      }\n *  }));\n *\n *  imageryViewModels.push(new Cesium.ProviderViewModel({\n *      name : 'Earth at Night',\n *      iconUrl : Cesium.buildModuleUrl('Widgets/Images/ImageryProviders/blackMarble.png'),\n *      tooltip : 'The lights of cities and villages trace the outlines of civilization \\\n * in this global view of the Earth at night as seen by NASA/NOAA\\'s Suomi NPP satellite.',\n *      creationFunction : function() {\n *          return new Cesium.IonImageryProvider({ assetId: 3812 });\n *      }\n *  }));\n *\n *  imageryViewModels.push(new Cesium.ProviderViewModel({\n *      name : 'Natural Earth\\u00a0II',\n *      iconUrl : Cesium.buildModuleUrl('Widgets/Images/ImageryProviders/naturalEarthII.png'),\n *      tooltip : 'Natural Earth II, darkened for contrast.\\nhttp://www.naturalearthdata.com/',\n *      creationFunction : function() {\n *          return new Cesium.TileMapServiceImageryProvider({\n *              url : Cesium.buildModuleUrl('Assets/Textures/NaturalEarthII')\n *          });\n *      }\n *  }));\n *\n * //Create a CesiumWidget without imagery, if you haven't already done so.\n * var cesiumWidget = new Cesium.CesiumWidget('cesiumContainer', { imageryProvider: false });\n *\n * //Finally, create the baseLayerPicker widget using our view models.\n * var layers = cesiumWidget.imageryLayers;\n * var baseLayerPicker = new Cesium.BaseLayerPicker('baseLayerPickerContainer', {\n *     globe : cesiumWidget.scene.globe,\n *     imageryProviderViewModels : imageryViewModels\n * });\n *\n * @see TerrainProvider\n * @see ImageryProvider\n * @see ImageryLayerCollection\n */\n\nfunction BaseLayerPicker(container, options) {\n  //>>includeStart('debug', pragmas.debug);\n  if (!defined(container)) {\n    throw new DeveloperError(\"container is required.\");\n  } //>>includeEnd('debug');\n\n\n  container = getElement(container);\n  var viewModel = new BaseLayerPickerViewModel(options);\n  var element = document.createElement(\"button\");\n  element.type = \"button\";\n  element.className = \"cesium-button cesium-toolbar-button\";\n  element.setAttribute(\"data-bind\", \"\\\nattr: { title: buttonTooltip },\\\nclick: toggleDropDown\");\n  container.appendChild(element);\n  var imgElement = document.createElement(\"img\");\n  imgElement.setAttribute(\"draggable\", \"false\");\n  imgElement.className = \"cesium-baseLayerPicker-selected\";\n  imgElement.setAttribute(\"data-bind\", \"\\\nattr: { src: buttonImageUrl }, visible: !!buttonImageUrl\");\n  element.appendChild(imgElement);\n  var dropPanel = document.createElement(\"div\");\n  dropPanel.className = \"cesium-baseLayerPicker-dropDown\";\n  dropPanel.setAttribute(\"data-bind\", '\\\ncss: { \"cesium-baseLayerPicker-dropDown-visible\" : dropDownVisible }');\n  container.appendChild(dropPanel);\n  var imageryTitle = document.createElement(\"div\");\n  imageryTitle.className = \"cesium-baseLayerPicker-sectionTitle\";\n  imageryTitle.setAttribute(\"data-bind\", \"visible: imageryProviderViewModels.length > 0\");\n  imageryTitle.innerHTML = \"Imagery\";\n  dropPanel.appendChild(imageryTitle);\n  var imagerySection = document.createElement(\"div\");\n  imagerySection.className = \"cesium-baseLayerPicker-section\";\n  imagerySection.setAttribute(\"data-bind\", \"foreach: _imageryProviders\");\n  dropPanel.appendChild(imagerySection);\n  var imageryCategories = document.createElement(\"div\");\n  imageryCategories.className = \"cesium-baseLayerPicker-category\";\n  imagerySection.appendChild(imageryCategories);\n  var categoryTitle = document.createElement(\"div\");\n  categoryTitle.className = \"cesium-baseLayerPicker-categoryTitle\";\n  categoryTitle.setAttribute(\"data-bind\", \"text: name\");\n  imageryCategories.appendChild(categoryTitle);\n  var imageryChoices = document.createElement(\"div\");\n  imageryChoices.className = \"cesium-baseLayerPicker-choices\";\n  imageryChoices.setAttribute(\"data-bind\", \"foreach: providers\");\n  imageryCategories.appendChild(imageryChoices);\n  var imageryProvider = document.createElement(\"div\");\n  imageryProvider.className = \"cesium-baseLayerPicker-item\";\n  imageryProvider.setAttribute(\"data-bind\", '\\\ncss: { \"cesium-baseLayerPicker-selectedItem\" : $data === $parents[1].selectedImagery },\\\nattr: { title: tooltip },\\\nvisible: creationCommand.canExecute,\\\nclick: function($data) { $parents[1].selectedImagery = $data; }');\n  imageryChoices.appendChild(imageryProvider);\n  var providerIcon = document.createElement(\"img\");\n  providerIcon.className = \"cesium-baseLayerPicker-itemIcon\";\n  providerIcon.setAttribute(\"data-bind\", \"attr: { src: iconUrl }\");\n  providerIcon.setAttribute(\"draggable\", \"false\");\n  imageryProvider.appendChild(providerIcon);\n  var providerLabel = document.createElement(\"div\");\n  providerLabel.className = \"cesium-baseLayerPicker-itemLabel\";\n  providerLabel.setAttribute(\"data-bind\", \"text: name\");\n  imageryProvider.appendChild(providerLabel);\n  var terrainTitle = document.createElement(\"div\");\n  terrainTitle.className = \"cesium-baseLayerPicker-sectionTitle\";\n  terrainTitle.setAttribute(\"data-bind\", \"visible: terrainProviderViewModels.length > 0\");\n  terrainTitle.innerHTML = \"Terrain\";\n  dropPanel.appendChild(terrainTitle);\n  var terrainSection = document.createElement(\"div\");\n  terrainSection.className = \"cesium-baseLayerPicker-section\";\n  terrainSection.setAttribute(\"data-bind\", \"foreach: _terrainProviders\");\n  dropPanel.appendChild(terrainSection);\n  var terrainCategories = document.createElement(\"div\");\n  terrainCategories.className = \"cesium-baseLayerPicker-category\";\n  terrainSection.appendChild(terrainCategories);\n  var terrainCategoryTitle = document.createElement(\"div\");\n  terrainCategoryTitle.className = \"cesium-baseLayerPicker-categoryTitle\";\n  terrainCategoryTitle.setAttribute(\"data-bind\", \"text: name\");\n  terrainCategories.appendChild(terrainCategoryTitle);\n  var terrainChoices = document.createElement(\"div\");\n  terrainChoices.className = \"cesium-baseLayerPicker-choices\";\n  terrainChoices.setAttribute(\"data-bind\", \"foreach: providers\");\n  terrainCategories.appendChild(terrainChoices);\n  var terrainProvider = document.createElement(\"div\");\n  terrainProvider.className = \"cesium-baseLayerPicker-item\";\n  terrainProvider.setAttribute(\"data-bind\", '\\\ncss: { \"cesium-baseLayerPicker-selectedItem\" : $data === $parents[1].selectedTerrain },\\\nattr: { title: tooltip },\\\nvisible: creationCommand.canExecute,\\\nclick: function($data) { $parents[1].selectedTerrain = $data; }');\n  terrainChoices.appendChild(terrainProvider);\n  var terrainProviderIcon = document.createElement(\"img\");\n  terrainProviderIcon.className = \"cesium-baseLayerPicker-itemIcon\";\n  terrainProviderIcon.setAttribute(\"data-bind\", \"attr: { src: iconUrl }\");\n  terrainProviderIcon.setAttribute(\"draggable\", \"false\");\n  terrainProvider.appendChild(terrainProviderIcon);\n  var terrainProviderLabel = document.createElement(\"div\");\n  terrainProviderLabel.className = \"cesium-baseLayerPicker-itemLabel\";\n  terrainProviderLabel.setAttribute(\"data-bind\", \"text: name\");\n  terrainProvider.appendChild(terrainProviderLabel);\n  knockout.applyBindings(viewModel, element);\n  knockout.applyBindings(viewModel, dropPanel);\n  this._viewModel = viewModel;\n  this._container = container;\n  this._element = element;\n  this._dropPanel = dropPanel;\n\n  this._closeDropDown = function (e) {\n    if (!(element.contains(e.target) || dropPanel.contains(e.target))) {\n      viewModel.dropDownVisible = false;\n    }\n  };\n\n  if (FeatureDetection.supportsPointerEvents()) {\n    document.addEventListener(\"pointerdown\", this._closeDropDown, true);\n  } else {\n    document.addEventListener(\"mousedown\", this._closeDropDown, true);\n    document.addEventListener(\"touchstart\", this._closeDropDown, true);\n  }\n}\n\nObject.defineProperties(BaseLayerPicker.prototype, {\n  /**\n   * Gets the parent container.\n   * @memberof BaseLayerPicker.prototype\n   *\n   * @type {Element}\n   */\n  container: {\n    get: function () {\n      return this._container;\n    }\n  },\n\n  /**\n   * Gets the view model.\n   * @memberof BaseLayerPicker.prototype\n   *\n   * @type {BaseLayerPickerViewModel}\n   */\n  viewModel: {\n    get: function () {\n      return this._viewModel;\n    }\n  }\n});\n/**\n * @returns {Boolean} true if the object has been destroyed, false otherwise.\n */\n\nBaseLayerPicker.prototype.isDestroyed = function () {\n  return false;\n};\n/**\n * Destroys the widget.  Should be called if permanently\n * removing the widget from layout.\n */\n\n\nBaseLayerPicker.prototype.destroy = function () {\n  if (FeatureDetection.supportsPointerEvents()) {\n    document.removeEventListener(\"pointerdown\", this._closeDropDown, true);\n  } else {\n    document.removeEventListener(\"mousedown\", this._closeDropDown, true);\n    document.removeEventListener(\"touchstart\", this._closeDropDown, true);\n  }\n\n  knockout.cleanNode(this._element);\n  knockout.cleanNode(this._dropPanel);\n\n  this._container.removeChild(this._element);\n\n  this._container.removeChild(this._dropPanel);\n\n  return destroyObject(this);\n};\n\nexport default BaseLayerPicker;","map":{"version":3,"sources":["C:/Users/passa/Desktop/WaterDeployTrial/node_modules/cesium/Source/Widgets/BaseLayerPicker/BaseLayerPicker.js"],"names":["defined","destroyObject","DeveloperError","FeatureDetection","knockout","getElement","BaseLayerPickerViewModel","BaseLayerPicker","container","options","viewModel","element","document","createElement","type","className","setAttribute","appendChild","imgElement","dropPanel","imageryTitle","innerHTML","imagerySection","imageryCategories","categoryTitle","imageryChoices","imageryProvider","providerIcon","providerLabel","terrainTitle","terrainSection","terrainCategories","terrainCategoryTitle","terrainChoices","terrainProvider","terrainProviderIcon","terrainProviderLabel","applyBindings","_viewModel","_container","_element","_dropPanel","_closeDropDown","e","contains","target","dropDownVisible","supportsPointerEvents","addEventListener","Object","defineProperties","prototype","get","isDestroyed","destroy","removeEventListener","cleanNode","removeChild"],"mappings":"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","sourcesContent":["import defined from \"../../Core/defined.js\";\nimport destroyObject from \"../../Core/destroyObject.js\";\nimport DeveloperError from \"../../Core/DeveloperError.js\";\nimport FeatureDetection from \"../../Core/FeatureDetection.js\";\nimport knockout from \"../../ThirdParty/knockout.js\";\nimport getElement from \"../getElement.js\";\nimport BaseLayerPickerViewModel from \"./BaseLayerPickerViewModel.js\";\n\n/**\n * <span style=\"display: block; text-align: center;\">\n * <img src=\"Images/BaseLayerPicker.png\" width=\"264\" height=\"287\" alt=\"\" />\n * <br />BaseLayerPicker with its drop-panel open.\n * </span>\n * <br /><br />\n * The BaseLayerPicker is a single button widget that displays a panel of available imagery and\n * terrain providers.  When imagery is selected, the corresponding imagery layer is created and inserted\n * as the base layer of the imagery collection; removing the existing base.  When terrain is selected,\n * it replaces the current terrain provider.  Each item in the available providers list contains a name,\n * a representative icon, and a tooltip to display more information when hovered. The list is initially\n * empty, and must be configured before use, as illustrated in the below example.\n *\n * @alias BaseLayerPicker\n * @constructor\n *\n * @param {Element|String} container The parent HTML container node or ID for this widget.\n * @param {Object} options Object with the following properties:\n * @param {Globe} options.globe The Globe to use.\n * @param {ProviderViewModel[]} [options.imageryProviderViewModels=[]] The array of ProviderViewModel instances to use for imagery.\n * @param {ProviderViewModel} [options.selectedImageryProviderViewModel] The view model for the current base imagery layer, if not supplied the first available imagery layer is used.\n * @param {ProviderViewModel[]} [options.terrainProviderViewModels=[]] The array of ProviderViewModel instances to use for terrain.\n * @param {ProviderViewModel} [options.selectedTerrainProviderViewModel] The view model for the current base terrain layer, if not supplied the first available terrain layer is used.\n *\n * @exception {DeveloperError} Element with id \"container\" does not exist in the document.\n *\n *\n * @example\n * // In HTML head, include a link to the BaseLayerPicker.css stylesheet,\n * // and in the body, include: <div id=\"baseLayerPickerContainer\"\n * //   style=\"position:absolute;top:24px;right:24px;width:38px;height:38px;\"></div>\n *\n * //Create the list of available providers we would like the user to select from.\n * //This example uses 3, OpenStreetMap, The Black Marble, and a single, non-streaming world image.\n * var imageryViewModels = [];\n * imageryViewModels.push(new Cesium.ProviderViewModel({\n *      name : 'Open\\u00adStreet\\u00adMap',\n *      iconUrl : Cesium.buildModuleUrl('Widgets/Images/ImageryProviders/openStreetMap.png'),\n *      tooltip : 'OpenStreetMap (OSM) is a collaborative project to create a free editable \\\n * map of the world.\\nhttp://www.openstreetmap.org',\n *      creationFunction : function() {\n *          return new Cesium.OpenStreetMapImageryProvider({\n *              url : 'https://a.tile.openstreetmap.org/'\n *          });\n *      }\n *  }));\n *\n *  imageryViewModels.push(new Cesium.ProviderViewModel({\n *      name : 'Earth at Night',\n *      iconUrl : Cesium.buildModuleUrl('Widgets/Images/ImageryProviders/blackMarble.png'),\n *      tooltip : 'The lights of cities and villages trace the outlines of civilization \\\n * in this global view of the Earth at night as seen by NASA/NOAA\\'s Suomi NPP satellite.',\n *      creationFunction : function() {\n *          return new Cesium.IonImageryProvider({ assetId: 3812 });\n *      }\n *  }));\n *\n *  imageryViewModels.push(new Cesium.ProviderViewModel({\n *      name : 'Natural Earth\\u00a0II',\n *      iconUrl : Cesium.buildModuleUrl('Widgets/Images/ImageryProviders/naturalEarthII.png'),\n *      tooltip : 'Natural Earth II, darkened for contrast.\\nhttp://www.naturalearthdata.com/',\n *      creationFunction : function() {\n *          return new Cesium.TileMapServiceImageryProvider({\n *              url : Cesium.buildModuleUrl('Assets/Textures/NaturalEarthII')\n *          });\n *      }\n *  }));\n *\n * //Create a CesiumWidget without imagery, if you haven't already done so.\n * var cesiumWidget = new Cesium.CesiumWidget('cesiumContainer', { imageryProvider: false });\n *\n * //Finally, create the baseLayerPicker widget using our view models.\n * var layers = cesiumWidget.imageryLayers;\n * var baseLayerPicker = new Cesium.BaseLayerPicker('baseLayerPickerContainer', {\n *     globe : cesiumWidget.scene.globe,\n *     imageryProviderViewModels : imageryViewModels\n * });\n *\n * @see TerrainProvider\n * @see ImageryProvider\n * @see ImageryLayerCollection\n */\nfunction BaseLayerPicker(container, options) {\n  //>>includeStart('debug', pragmas.debug);\n  if (!defined(container)) {\n    throw new DeveloperError(\"container is required.\");\n  }\n  //>>includeEnd('debug');\n\n  container = getElement(container);\n\n  var viewModel = new BaseLayerPickerViewModel(options);\n\n  var element = document.createElement(\"button\");\n  element.type = \"button\";\n  element.className = \"cesium-button cesium-toolbar-button\";\n  element.setAttribute(\n    \"data-bind\",\n    \"\\\nattr: { title: buttonTooltip },\\\nclick: toggleDropDown\"\n  );\n  container.appendChild(element);\n\n  var imgElement = document.createElement(\"img\");\n  imgElement.setAttribute(\"draggable\", \"false\");\n  imgElement.className = \"cesium-baseLayerPicker-selected\";\n  imgElement.setAttribute(\n    \"data-bind\",\n    \"\\\nattr: { src: buttonImageUrl }, visible: !!buttonImageUrl\"\n  );\n  element.appendChild(imgElement);\n\n  var dropPanel = document.createElement(\"div\");\n  dropPanel.className = \"cesium-baseLayerPicker-dropDown\";\n  dropPanel.setAttribute(\n    \"data-bind\",\n    '\\\ncss: { \"cesium-baseLayerPicker-dropDown-visible\" : dropDownVisible }'\n  );\n  container.appendChild(dropPanel);\n\n  var imageryTitle = document.createElement(\"div\");\n  imageryTitle.className = \"cesium-baseLayerPicker-sectionTitle\";\n  imageryTitle.setAttribute(\n    \"data-bind\",\n    \"visible: imageryProviderViewModels.length > 0\"\n  );\n  imageryTitle.innerHTML = \"Imagery\";\n  dropPanel.appendChild(imageryTitle);\n\n  var imagerySection = document.createElement(\"div\");\n  imagerySection.className = \"cesium-baseLayerPicker-section\";\n  imagerySection.setAttribute(\"data-bind\", \"foreach: _imageryProviders\");\n  dropPanel.appendChild(imagerySection);\n\n  var imageryCategories = document.createElement(\"div\");\n  imageryCategories.className = \"cesium-baseLayerPicker-category\";\n  imagerySection.appendChild(imageryCategories);\n\n  var categoryTitle = document.createElement(\"div\");\n  categoryTitle.className = \"cesium-baseLayerPicker-categoryTitle\";\n  categoryTitle.setAttribute(\"data-bind\", \"text: name\");\n  imageryCategories.appendChild(categoryTitle);\n\n  var imageryChoices = document.createElement(\"div\");\n  imageryChoices.className = \"cesium-baseLayerPicker-choices\";\n  imageryChoices.setAttribute(\"data-bind\", \"foreach: providers\");\n  imageryCategories.appendChild(imageryChoices);\n\n  var imageryProvider = document.createElement(\"div\");\n  imageryProvider.className = \"cesium-baseLayerPicker-item\";\n  imageryProvider.setAttribute(\n    \"data-bind\",\n    '\\\ncss: { \"cesium-baseLayerPicker-selectedItem\" : $data === $parents[1].selectedImagery },\\\nattr: { title: tooltip },\\\nvisible: creationCommand.canExecute,\\\nclick: function($data) { $parents[1].selectedImagery = $data; }'\n  );\n  imageryChoices.appendChild(imageryProvider);\n\n  var providerIcon = document.createElement(\"img\");\n  providerIcon.className = \"cesium-baseLayerPicker-itemIcon\";\n  providerIcon.setAttribute(\"data-bind\", \"attr: { src: iconUrl }\");\n  providerIcon.setAttribute(\"draggable\", \"false\");\n  imageryProvider.appendChild(providerIcon);\n\n  var providerLabel = document.createElement(\"div\");\n  providerLabel.className = \"cesium-baseLayerPicker-itemLabel\";\n  providerLabel.setAttribute(\"data-bind\", \"text: name\");\n  imageryProvider.appendChild(providerLabel);\n\n  var terrainTitle = document.createElement(\"div\");\n  terrainTitle.className = \"cesium-baseLayerPicker-sectionTitle\";\n  terrainTitle.setAttribute(\n    \"data-bind\",\n    \"visible: terrainProviderViewModels.length > 0\"\n  );\n  terrainTitle.innerHTML = \"Terrain\";\n  dropPanel.appendChild(terrainTitle);\n\n  var terrainSection = document.createElement(\"div\");\n  terrainSection.className = \"cesium-baseLayerPicker-section\";\n  terrainSection.setAttribute(\"data-bind\", \"foreach: _terrainProviders\");\n  dropPanel.appendChild(terrainSection);\n\n  var terrainCategories = document.createElement(\"div\");\n  terrainCategories.className = \"cesium-baseLayerPicker-category\";\n  terrainSection.appendChild(terrainCategories);\n\n  var terrainCategoryTitle = document.createElement(\"div\");\n  terrainCategoryTitle.className = \"cesium-baseLayerPicker-categoryTitle\";\n  terrainCategoryTitle.setAttribute(\"data-bind\", \"text: name\");\n  terrainCategories.appendChild(terrainCategoryTitle);\n\n  var terrainChoices = document.createElement(\"div\");\n  terrainChoices.className = \"cesium-baseLayerPicker-choices\";\n  terrainChoices.setAttribute(\"data-bind\", \"foreach: providers\");\n  terrainCategories.appendChild(terrainChoices);\n\n  var terrainProvider = document.createElement(\"div\");\n  terrainProvider.className = \"cesium-baseLayerPicker-item\";\n  terrainProvider.setAttribute(\n    \"data-bind\",\n    '\\\ncss: { \"cesium-baseLayerPicker-selectedItem\" : $data === $parents[1].selectedTerrain },\\\nattr: { title: tooltip },\\\nvisible: creationCommand.canExecute,\\\nclick: function($data) { $parents[1].selectedTerrain = $data; }'\n  );\n  terrainChoices.appendChild(terrainProvider);\n\n  var terrainProviderIcon = document.createElement(\"img\");\n  terrainProviderIcon.className = \"cesium-baseLayerPicker-itemIcon\";\n  terrainProviderIcon.setAttribute(\"data-bind\", \"attr: { src: iconUrl }\");\n  terrainProviderIcon.setAttribute(\"draggable\", \"false\");\n  terrainProvider.appendChild(terrainProviderIcon);\n\n  var terrainProviderLabel = document.createElement(\"div\");\n  terrainProviderLabel.className = \"cesium-baseLayerPicker-itemLabel\";\n  terrainProviderLabel.setAttribute(\"data-bind\", \"text: name\");\n  terrainProvider.appendChild(terrainProviderLabel);\n\n  knockout.applyBindings(viewModel, element);\n  knockout.applyBindings(viewModel, dropPanel);\n\n  this._viewModel = viewModel;\n  this._container = container;\n  this._element = element;\n  this._dropPanel = dropPanel;\n\n  this._closeDropDown = function (e) {\n    if (!(element.contains(e.target) || dropPanel.contains(e.target))) {\n      viewModel.dropDownVisible = false;\n    }\n  };\n\n  if (FeatureDetection.supportsPointerEvents()) {\n    document.addEventListener(\"pointerdown\", this._closeDropDown, true);\n  } else {\n    document.addEventListener(\"mousedown\", this._closeDropDown, true);\n    document.addEventListener(\"touchstart\", this._closeDropDown, true);\n  }\n}\n\nObject.defineProperties(BaseLayerPicker.prototype, {\n  /**\n   * Gets the parent container.\n   * @memberof BaseLayerPicker.prototype\n   *\n   * @type {Element}\n   */\n  container: {\n    get: function () {\n      return this._container;\n    },\n  },\n\n  /**\n   * Gets the view model.\n   * @memberof BaseLayerPicker.prototype\n   *\n   * @type {BaseLayerPickerViewModel}\n   */\n  viewModel: {\n    get: function () {\n      return this._viewModel;\n    },\n  },\n});\n\n/**\n * @returns {Boolean} true if the object has been destroyed, false otherwise.\n */\nBaseLayerPicker.prototype.isDestroyed = function () {\n  return false;\n};\n\n/**\n * Destroys the widget.  Should be called if permanently\n * removing the widget from layout.\n */\nBaseLayerPicker.prototype.destroy = function () {\n  if (FeatureDetection.supportsPointerEvents()) {\n    document.removeEventListener(\"pointerdown\", this._closeDropDown, true);\n  } else {\n    document.removeEventListener(\"mousedown\", this._closeDropDown, true);\n    document.removeEventListener(\"touchstart\", this._closeDropDown, true);\n  }\n\n  knockout.cleanNode(this._element);\n  knockout.cleanNode(this._dropPanel);\n  this._container.removeChild(this._element);\n  this._container.removeChild(this._dropPanel);\n  return destroyObject(this);\n};\nexport default BaseLayerPicker;\n"]},"metadata":{},"sourceType":"module"}
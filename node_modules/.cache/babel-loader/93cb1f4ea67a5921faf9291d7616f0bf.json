{"ast":null,"code":"import Check from \"../Core/Check.js\";\n/**\n * The state for a 3D Tiles update pass.\n *\n * @private\n * @constructor\n */\n\nfunction Cesium3DTilePassState(options) {\n  //>>includeStart('debug', pragmas.debug);\n  Check.typeOf.object(\"options\", options);\n  Check.typeOf.number(\"options.pass\", options.pass); //>>includeEnd('debug');\n\n  /**\n   * The pass.\n   *\n   * @type {Cesium3DTilePass}\n   */\n\n  this.pass = options.pass;\n  /**\n   * An array of rendering commands to use instead of {@link FrameState.commandList} for the current pass.\n   *\n   * @type {DrawCommand[]}\n   */\n\n  this.commandList = options.commandList;\n  /**\n   * A camera to use instead of {@link FrameState.camera} for the current pass.\n   *\n   * @type {Camera}\n   */\n\n  this.camera = options.camera;\n  /**\n   * A culling volume to use instead of {@link FrameState.cullingVolume} for the current pass.\n   *\n   * @type {CullingVolume}\n   */\n\n  this.cullingVolume = options.cullingVolume;\n  /**\n   * A read-only property that indicates whether the pass is ready, i.e. all tiles needed by the pass are loaded.\n   *\n   * @type {Boolean}\n   * @readonly\n   * @default false\n   */\n\n  this.ready = false;\n}\n\nexport default Cesium3DTilePassState;","map":{"version":3,"sources":["C:/Users/passa/Desktop/WaterLevelReact/node_modules/cesium/Source/Scene/Cesium3DTilePassState.js"],"names":["Check","Cesium3DTilePassState","options","typeOf","object","number","pass","commandList","camera","cullingVolume","ready"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,kBAAlB;AAEA;;;;;;;AAMA,SAASC,qBAAT,CAA+BC,OAA/B,EAAwC;AACtC;AACAF,EAAAA,KAAK,CAACG,MAAN,CAAaC,MAAb,CAAoB,SAApB,EAA+BF,OAA/B;AACAF,EAAAA,KAAK,CAACG,MAAN,CAAaE,MAAb,CAAoB,cAApB,EAAoCH,OAAO,CAACI,IAA5C,EAHsC,CAItC;;AAEA;;;;;;AAKA,OAAKA,IAAL,GAAYJ,OAAO,CAACI,IAApB;AAEA;;;;;;AAKA,OAAKC,WAAL,GAAmBL,OAAO,CAACK,WAA3B;AAEA;;;;;;AAKA,OAAKC,MAAL,GAAcN,OAAO,CAACM,MAAtB;AAEA;;;;;;AAKA,OAAKC,aAAL,GAAqBP,OAAO,CAACO,aAA7B;AAEA;;;;;;;;AAOA,OAAKC,KAAL,GAAa,KAAb;AACD;;AACD,eAAeT,qBAAf","sourcesContent":["import Check from \"../Core/Check.js\";\n\n/**\n * The state for a 3D Tiles update pass.\n *\n * @private\n * @constructor\n */\nfunction Cesium3DTilePassState(options) {\n  //>>includeStart('debug', pragmas.debug);\n  Check.typeOf.object(\"options\", options);\n  Check.typeOf.number(\"options.pass\", options.pass);\n  //>>includeEnd('debug');\n\n  /**\n   * The pass.\n   *\n   * @type {Cesium3DTilePass}\n   */\n  this.pass = options.pass;\n\n  /**\n   * An array of rendering commands to use instead of {@link FrameState.commandList} for the current pass.\n   *\n   * @type {DrawCommand[]}\n   */\n  this.commandList = options.commandList;\n\n  /**\n   * A camera to use instead of {@link FrameState.camera} for the current pass.\n   *\n   * @type {Camera}\n   */\n  this.camera = options.camera;\n\n  /**\n   * A culling volume to use instead of {@link FrameState.cullingVolume} for the current pass.\n   *\n   * @type {CullingVolume}\n   */\n  this.cullingVolume = options.cullingVolume;\n\n  /**\n   * A read-only property that indicates whether the pass is ready, i.e. all tiles needed by the pass are loaded.\n   *\n   * @type {Boolean}\n   * @readonly\n   * @default false\n   */\n  this.ready = false;\n}\nexport default Cesium3DTilePassState;\n"]},"metadata":{},"sourceType":"module"}
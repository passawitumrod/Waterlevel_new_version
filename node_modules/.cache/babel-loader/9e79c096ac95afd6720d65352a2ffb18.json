{"ast":null,"code":"import destroyObject from \"../Core/destroyObject.js\";\n/**\n * Represents empty content for tiles in a\n * {@link https://github.com/CesiumGS/3d-tiles/tree/master/specification|3D Tiles} tileset that\n * do not have content, e.g., because they are used to optimize hierarchical culling.\n * <p>\n * Implements the {@link Cesium3DTileContent} interface.\n * </p>\n *\n * @alias Empty3DTileContent\n * @constructor\n *\n * @private\n */\n\nfunction Empty3DTileContent(tileset, tile) {\n  this._tileset = tileset;\n  this._tile = tile;\n  this.featurePropertiesDirty = false;\n}\n\nObject.defineProperties(Empty3DTileContent.prototype, {\n  featuresLength: {\n    get: function () {\n      return 0;\n    }\n  },\n  pointsLength: {\n    get: function () {\n      return 0;\n    }\n  },\n  trianglesLength: {\n    get: function () {\n      return 0;\n    }\n  },\n  geometryByteLength: {\n    get: function () {\n      return 0;\n    }\n  },\n  texturesByteLength: {\n    get: function () {\n      return 0;\n    }\n  },\n  batchTableByteLength: {\n    get: function () {\n      return 0;\n    }\n  },\n  innerContents: {\n    get: function () {\n      return undefined;\n    }\n  },\n  readyPromise: {\n    get: function () {\n      return undefined;\n    }\n  },\n  tileset: {\n    get: function () {\n      return this._tileset;\n    }\n  },\n  tile: {\n    get: function () {\n      return this._tile;\n    }\n  },\n  url: {\n    get: function () {\n      return undefined;\n    }\n  },\n  batchTable: {\n    get: function () {\n      return undefined;\n    }\n  }\n});\n/**\n * Part of the {@link Cesium3DTileContent} interface.  <code>Empty3DTileContent</code>\n * always returns <code>false</code> since a tile of this type does not have any features.\n */\n\nEmpty3DTileContent.prototype.hasProperty = function (batchId, name) {\n  return false;\n};\n/**\n * Part of the {@link Cesium3DTileContent} interface.  <code>Empty3DTileContent</code>\n * always returns <code>undefined</code> since a tile of this type does not have any features.\n */\n\n\nEmpty3DTileContent.prototype.getFeature = function (batchId) {\n  return undefined;\n};\n\nEmpty3DTileContent.prototype.applyDebugSettings = function (enabled, color) {};\n\nEmpty3DTileContent.prototype.applyStyle = function (style) {};\n\nEmpty3DTileContent.prototype.update = function (tileset, frameState) {};\n\nEmpty3DTileContent.prototype.isDestroyed = function () {\n  return false;\n};\n\nEmpty3DTileContent.prototype.destroy = function () {\n  return destroyObject(this);\n};\n\nexport default Empty3DTileContent;","map":{"version":3,"sources":["C:/Users/passa/Desktop/WaterDeployTrial/node_modules/cesium/Source/Scene/Empty3DTileContent.js"],"names":["destroyObject","Empty3DTileContent","tileset","tile","_tileset","_tile","featurePropertiesDirty","Object","defineProperties","prototype","featuresLength","get","pointsLength","trianglesLength","geometryByteLength","texturesByteLength","batchTableByteLength","innerContents","undefined","readyPromise","url","batchTable","hasProperty","batchId","name","getFeature","applyDebugSettings","enabled","color","applyStyle","style","update","frameState","isDestroyed","destroy"],"mappings":"AAAA,OAAOA,aAAP,MAA0B,0BAA1B;AAEA;;;;;;;;;;;;;;AAaA,SAASC,kBAAT,CAA4BC,OAA5B,EAAqCC,IAArC,EAA2C;AACzC,OAAKC,QAAL,GAAgBF,OAAhB;AACA,OAAKG,KAAL,GAAaF,IAAb;AAEA,OAAKG,sBAAL,GAA8B,KAA9B;AACD;;AAEDC,MAAM,CAACC,gBAAP,CAAwBP,kBAAkB,CAACQ,SAA3C,EAAsD;AACpDC,EAAAA,cAAc,EAAE;AACdC,IAAAA,GAAG,EAAE,YAAY;AACf,aAAO,CAAP;AACD;AAHa,GADoC;AAOpDC,EAAAA,YAAY,EAAE;AACZD,IAAAA,GAAG,EAAE,YAAY;AACf,aAAO,CAAP;AACD;AAHW,GAPsC;AAapDE,EAAAA,eAAe,EAAE;AACfF,IAAAA,GAAG,EAAE,YAAY;AACf,aAAO,CAAP;AACD;AAHc,GAbmC;AAmBpDG,EAAAA,kBAAkB,EAAE;AAClBH,IAAAA,GAAG,EAAE,YAAY;AACf,aAAO,CAAP;AACD;AAHiB,GAnBgC;AAyBpDI,EAAAA,kBAAkB,EAAE;AAClBJ,IAAAA,GAAG,EAAE,YAAY;AACf,aAAO,CAAP;AACD;AAHiB,GAzBgC;AA+BpDK,EAAAA,oBAAoB,EAAE;AACpBL,IAAAA,GAAG,EAAE,YAAY;AACf,aAAO,CAAP;AACD;AAHmB,GA/B8B;AAqCpDM,EAAAA,aAAa,EAAE;AACbN,IAAAA,GAAG,EAAE,YAAY;AACf,aAAOO,SAAP;AACD;AAHY,GArCqC;AA2CpDC,EAAAA,YAAY,EAAE;AACZR,IAAAA,GAAG,EAAE,YAAY;AACf,aAAOO,SAAP;AACD;AAHW,GA3CsC;AAiDpDhB,EAAAA,OAAO,EAAE;AACPS,IAAAA,GAAG,EAAE,YAAY;AACf,aAAO,KAAKP,QAAZ;AACD;AAHM,GAjD2C;AAuDpDD,EAAAA,IAAI,EAAE;AACJQ,IAAAA,GAAG,EAAE,YAAY;AACf,aAAO,KAAKN,KAAZ;AACD;AAHG,GAvD8C;AA6DpDe,EAAAA,GAAG,EAAE;AACHT,IAAAA,GAAG,EAAE,YAAY;AACf,aAAOO,SAAP;AACD;AAHE,GA7D+C;AAmEpDG,EAAAA,UAAU,EAAE;AACVV,IAAAA,GAAG,EAAE,YAAY;AACf,aAAOO,SAAP;AACD;AAHS;AAnEwC,CAAtD;AA0EA;;;;;AAIAjB,kBAAkB,CAACQ,SAAnB,CAA6Ba,WAA7B,GAA2C,UAAUC,OAAV,EAAmBC,IAAnB,EAAyB;AAClE,SAAO,KAAP;AACD,CAFD;AAIA;;;;;;AAIAvB,kBAAkB,CAACQ,SAAnB,CAA6BgB,UAA7B,GAA0C,UAAUF,OAAV,EAAmB;AAC3D,SAAOL,SAAP;AACD,CAFD;;AAIAjB,kBAAkB,CAACQ,SAAnB,CAA6BiB,kBAA7B,GAAkD,UAAUC,OAAV,EAAmBC,KAAnB,EAA0B,CAAE,CAA9E;;AAEA3B,kBAAkB,CAACQ,SAAnB,CAA6BoB,UAA7B,GAA0C,UAAUC,KAAV,EAAiB,CAAE,CAA7D;;AAEA7B,kBAAkB,CAACQ,SAAnB,CAA6BsB,MAA7B,GAAsC,UAAU7B,OAAV,EAAmB8B,UAAnB,EAA+B,CAAE,CAAvE;;AAEA/B,kBAAkB,CAACQ,SAAnB,CAA6BwB,WAA7B,GAA2C,YAAY;AACrD,SAAO,KAAP;AACD,CAFD;;AAIAhC,kBAAkB,CAACQ,SAAnB,CAA6ByB,OAA7B,GAAuC,YAAY;AACjD,SAAOlC,aAAa,CAAC,IAAD,CAApB;AACD,CAFD;;AAGA,eAAeC,kBAAf","sourcesContent":["import destroyObject from \"../Core/destroyObject.js\";\n\n/**\n * Represents empty content for tiles in a\n * {@link https://github.com/CesiumGS/3d-tiles/tree/master/specification|3D Tiles} tileset that\n * do not have content, e.g., because they are used to optimize hierarchical culling.\n * <p>\n * Implements the {@link Cesium3DTileContent} interface.\n * </p>\n *\n * @alias Empty3DTileContent\n * @constructor\n *\n * @private\n */\nfunction Empty3DTileContent(tileset, tile) {\n  this._tileset = tileset;\n  this._tile = tile;\n\n  this.featurePropertiesDirty = false;\n}\n\nObject.defineProperties(Empty3DTileContent.prototype, {\n  featuresLength: {\n    get: function () {\n      return 0;\n    },\n  },\n\n  pointsLength: {\n    get: function () {\n      return 0;\n    },\n  },\n\n  trianglesLength: {\n    get: function () {\n      return 0;\n    },\n  },\n\n  geometryByteLength: {\n    get: function () {\n      return 0;\n    },\n  },\n\n  texturesByteLength: {\n    get: function () {\n      return 0;\n    },\n  },\n\n  batchTableByteLength: {\n    get: function () {\n      return 0;\n    },\n  },\n\n  innerContents: {\n    get: function () {\n      return undefined;\n    },\n  },\n\n  readyPromise: {\n    get: function () {\n      return undefined;\n    },\n  },\n\n  tileset: {\n    get: function () {\n      return this._tileset;\n    },\n  },\n\n  tile: {\n    get: function () {\n      return this._tile;\n    },\n  },\n\n  url: {\n    get: function () {\n      return undefined;\n    },\n  },\n\n  batchTable: {\n    get: function () {\n      return undefined;\n    },\n  },\n});\n\n/**\n * Part of the {@link Cesium3DTileContent} interface.  <code>Empty3DTileContent</code>\n * always returns <code>false</code> since a tile of this type does not have any features.\n */\nEmpty3DTileContent.prototype.hasProperty = function (batchId, name) {\n  return false;\n};\n\n/**\n * Part of the {@link Cesium3DTileContent} interface.  <code>Empty3DTileContent</code>\n * always returns <code>undefined</code> since a tile of this type does not have any features.\n */\nEmpty3DTileContent.prototype.getFeature = function (batchId) {\n  return undefined;\n};\n\nEmpty3DTileContent.prototype.applyDebugSettings = function (enabled, color) {};\n\nEmpty3DTileContent.prototype.applyStyle = function (style) {};\n\nEmpty3DTileContent.prototype.update = function (tileset, frameState) {};\n\nEmpty3DTileContent.prototype.isDestroyed = function () {\n  return false;\n};\n\nEmpty3DTileContent.prototype.destroy = function () {\n  return destroyObject(this);\n};\nexport default Empty3DTileContent;\n"]},"metadata":{},"sourceType":"module"}
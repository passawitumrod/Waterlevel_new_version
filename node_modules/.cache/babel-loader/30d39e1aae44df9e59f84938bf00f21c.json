{"ast":null,"code":"import DeveloperError from \"./DeveloperError.js\";\n/**\n * Static interface for {@link Packable} types which are interpolated in a\n * different representation than their packed value.  These methods and\n * properties are expected to be defined on a constructor function.\n *\n * @exports PackableForInterpolation\n *\n * @see Packable\n */\n\nvar PackableForInterpolation = {\n  /**\n   * The number of elements used to store the object into an array in its interpolatable form.\n   * @type {Number}\n   */\n  packedInterpolationLength: undefined,\n\n  /**\n   * Converts a packed array into a form suitable for interpolation.\n   * @function\n   *\n   * @param {Number[]} packedArray The packed array.\n   * @param {Number} [startingIndex=0] The index of the first element to be converted.\n   * @param {Number} [lastIndex=packedArray.length] The index of the last element to be converted.\n   * @param {Number[]} result The object into which to store the result.\n   */\n  convertPackedArrayForInterpolation: DeveloperError.throwInstantiationError,\n\n  /**\n   * Retrieves an instance from a packed array converted with {@link PackableForInterpolation.convertPackedArrayForInterpolation}.\n   * @function\n   *\n   * @param {Number[]} array The array previously packed for interpolation.\n   * @param {Number[]} sourceArray The original packed array.\n   * @param {Number} [startingIndex=0] The startingIndex used to convert the array.\n   * @param {Number} [lastIndex=packedArray.length] The lastIndex used to convert the array.\n   * @param {Object} [result] The object into which to store the result.\n   * @returns {Object} The modified result parameter or a new Object instance if one was not provided.\n   */\n  unpackInterpolationResult: DeveloperError.throwInstantiationError\n};\nexport default PackableForInterpolation;","map":{"version":3,"sources":["C:/Users/passa/Desktop/WaterLevelReact/node_modules/cesium/Source/Core/PackableForInterpolation.js"],"names":["DeveloperError","PackableForInterpolation","packedInterpolationLength","undefined","convertPackedArrayForInterpolation","throwInstantiationError","unpackInterpolationResult"],"mappings":"AAAA,OAAOA,cAAP,MAA2B,qBAA3B;AAEA;;;;;;;;;;AASA,IAAIC,wBAAwB,GAAG;AAC7B;;;;AAIAC,EAAAA,yBAAyB,EAAEC,SALE;;AAO7B;;;;;;;;;AASAC,EAAAA,kCAAkC,EAAEJ,cAAc,CAACK,uBAhBtB;;AAkB7B;;;;;;;;;;;AAWAC,EAAAA,yBAAyB,EAAEN,cAAc,CAACK;AA7Bb,CAA/B;AA+BA,eAAeJ,wBAAf","sourcesContent":["import DeveloperError from \"./DeveloperError.js\";\n\n/**\n * Static interface for {@link Packable} types which are interpolated in a\n * different representation than their packed value.  These methods and\n * properties are expected to be defined on a constructor function.\n *\n * @exports PackableForInterpolation\n *\n * @see Packable\n */\nvar PackableForInterpolation = {\n  /**\n   * The number of elements used to store the object into an array in its interpolatable form.\n   * @type {Number}\n   */\n  packedInterpolationLength: undefined,\n\n  /**\n   * Converts a packed array into a form suitable for interpolation.\n   * @function\n   *\n   * @param {Number[]} packedArray The packed array.\n   * @param {Number} [startingIndex=0] The index of the first element to be converted.\n   * @param {Number} [lastIndex=packedArray.length] The index of the last element to be converted.\n   * @param {Number[]} result The object into which to store the result.\n   */\n  convertPackedArrayForInterpolation: DeveloperError.throwInstantiationError,\n\n  /**\n   * Retrieves an instance from a packed array converted with {@link PackableForInterpolation.convertPackedArrayForInterpolation}.\n   * @function\n   *\n   * @param {Number[]} array The array previously packed for interpolation.\n   * @param {Number[]} sourceArray The original packed array.\n   * @param {Number} [startingIndex=0] The startingIndex used to convert the array.\n   * @param {Number} [lastIndex=packedArray.length] The lastIndex used to convert the array.\n   * @param {Object} [result] The object into which to store the result.\n   * @returns {Object} The modified result parameter or a new Object instance if one was not provided.\n   */\n  unpackInterpolationResult: DeveloperError.throwInstantiationError,\n};\nexport default PackableForInterpolation;\n"]},"metadata":{},"sourceType":"module"}
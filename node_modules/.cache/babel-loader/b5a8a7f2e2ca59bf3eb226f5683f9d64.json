{"ast":null,"code":"import arraySlice from \"../Core/arraySlice.js\";\nimport Cartesian2 from \"../Core/Cartesian2.js\";\nimport Cartesian3 from \"../Core/Cartesian3.js\";\nimport Color from \"../Core/Color.js\";\nimport defined from \"../Core/defined.js\";\nimport destroyObject from \"../Core/destroyObject.js\";\nimport DistanceDisplayCondition from \"../Core/DistanceDisplayCondition.js\";\nimport Ellipsoid from \"../Core/Ellipsoid.js\";\nimport NearFarScalar from \"../Core/NearFarScalar.js\";\nimport Rectangle from \"../Core/Rectangle.js\";\nimport TaskProcessor from \"../Core/TaskProcessor.js\";\nimport when from \"../ThirdParty/when.js\";\nimport BillboardCollection from \"./BillboardCollection.js\";\nimport Cesium3DTilePointFeature from \"./Cesium3DTilePointFeature.js\";\nimport HorizontalOrigin from \"./HorizontalOrigin.js\";\nimport LabelCollection from \"./LabelCollection.js\";\nimport LabelStyle from \"./LabelStyle.js\";\nimport PolylineCollection from \"./PolylineCollection.js\";\nimport VerticalOrigin from \"./VerticalOrigin.js\";\n/**\n * Creates a batch of points or billboards and labels.\n *\n * @alias Vector3DTilePoints\n * @constructor\n *\n * @param {Object} options An object with following properties:\n * @param {Uint16Array} options.positions The positions of the polygons.\n * @param {Number} options.minimumHeight The minimum height of the terrain covered by the tile.\n * @param {Number} options.maximumHeight The maximum height of the terrain covered by the tile.\n * @param {Rectangle} options.rectangle The rectangle containing the tile.\n * @param {Cesium3DTileBatchTable} options.batchTable The batch table for the tile containing the batched polygons.\n * @param {Uint16Array} options.batchIds The batch ids for each polygon.\n *\n * @private\n */\n\nfunction Vector3DTilePoints(options) {\n  // released after the first update\n  this._positions = options.positions;\n  this._batchTable = options.batchTable;\n  this._batchIds = options.batchIds;\n  this._rectangle = options.rectangle;\n  this._minHeight = options.minimumHeight;\n  this._maxHeight = options.maximumHeight;\n  this._billboardCollection = undefined;\n  this._labelCollection = undefined;\n  this._polylineCollection = undefined;\n  this._verticesPromise = undefined;\n  this._packedBuffer = undefined;\n  this._ready = false;\n  this._readyPromise = when.defer();\n  this._resolvedPromise = false;\n}\n\nObject.defineProperties(Vector3DTilePoints.prototype, {\n  /**\n   * Gets the number of points.\n   *\n   * @memberof Vector3DTilePoints.prototype\n   *\n   * @type {Number}\n   * @readonly\n   */\n  pointsLength: {\n    get: function () {\n      return this._billboardCollection.length;\n    }\n  },\n\n  /**\n   * Gets the texture atlas memory in bytes.\n   *\n   * @memberof Vector3DTilePoints.prototype\n   *\n   * @type {Number}\n   * @readonly\n   */\n  texturesByteLength: {\n    get: function () {\n      var billboardSize = this._billboardCollection.textureAtlas.texture.sizeInBytes;\n      var labelSize = this._labelCollection._textureAtlas.texture.sizeInBytes;\n      return billboardSize + labelSize;\n    }\n  },\n\n  /**\n   * Gets a promise that resolves when the primitive is ready to render.\n   * @memberof Vector3DTilePoints.prototype\n   * @type {Promise}\n   * @readonly\n   */\n  readyPromise: {\n    get: function () {\n      return this._readyPromise.promise;\n    }\n  }\n});\n\nfunction packBuffer(points, ellipsoid) {\n  var rectangle = points._rectangle;\n  var minimumHeight = points._minHeight;\n  var maximumHeight = points._maxHeight;\n  var packedLength = 2 + Rectangle.packedLength + Ellipsoid.packedLength;\n  var packedBuffer = new Float64Array(packedLength);\n  var offset = 0;\n  packedBuffer[offset++] = minimumHeight;\n  packedBuffer[offset++] = maximumHeight;\n  Rectangle.pack(rectangle, packedBuffer, offset);\n  offset += Rectangle.packedLength;\n  Ellipsoid.pack(ellipsoid, packedBuffer, offset);\n  return packedBuffer;\n}\n\nvar createVerticesTaskProcessor = new TaskProcessor(\"createVectorTilePoints\");\nvar scratchPosition = new Cartesian3();\n\nfunction createPoints(points, ellipsoid) {\n  if (defined(points._billboardCollection)) {\n    return;\n  }\n\n  var positions;\n\n  if (!defined(points._verticesPromise)) {\n    positions = points._positions;\n    var packedBuffer = points._packedBuffer;\n\n    if (!defined(packedBuffer)) {\n      // Copy because they may be the views on the same buffer.\n      positions = points._positions = arraySlice(positions);\n      points._batchIds = arraySlice(points._batchIds);\n      packedBuffer = points._packedBuffer = packBuffer(points, ellipsoid);\n    }\n\n    var transferrableObjects = [positions.buffer, packedBuffer.buffer];\n    var parameters = {\n      positions: positions.buffer,\n      packedBuffer: packedBuffer.buffer\n    };\n    var verticesPromise = points._verticesPromise = createVerticesTaskProcessor.scheduleTask(parameters, transferrableObjects);\n\n    if (!defined(verticesPromise)) {\n      // Postponed\n      return;\n    }\n\n    verticesPromise.then(function (result) {\n      points._positions = new Float64Array(result.positions);\n      points._ready = true;\n    });\n  }\n\n  if (points._ready && !defined(points._billboardCollection)) {\n    positions = points._positions;\n    var batchTable = points._batchTable;\n    var batchIds = points._batchIds;\n    var billboardCollection = points._billboardCollection = new BillboardCollection({\n      batchTable: batchTable\n    });\n    var labelCollection = points._labelCollection = new LabelCollection({\n      batchTable: batchTable\n    });\n    var polylineCollection = points._polylineCollection = new PolylineCollection();\n    polylineCollection._useHighlightColor = true;\n    var numberOfPoints = positions.length / 3;\n\n    for (var i = 0; i < numberOfPoints; ++i) {\n      var id = batchIds[i];\n      var position = Cartesian3.unpack(positions, i * 3, scratchPosition);\n      var b = billboardCollection.add();\n      b.position = position;\n      b._batchIndex = id;\n      var l = labelCollection.add();\n      l.text = \" \";\n      l.position = position;\n      l._batchIndex = id;\n      var p = polylineCollection.add();\n      p.positions = [Cartesian3.clone(position), Cartesian3.clone(position)];\n    }\n\n    points._positions = undefined;\n    points._packedBuffer = undefined;\n  }\n}\n/**\n * Creates features for each point and places it at the batch id index of features.\n *\n * @param {Vector3DTileContent} content The vector tile content.\n * @param {Cesium3DTileFeature[]} features An array of features where the point features will be placed.\n */\n\n\nVector3DTilePoints.prototype.createFeatures = function (content, features) {\n  var billboardCollection = this._billboardCollection;\n  var labelCollection = this._labelCollection;\n  var polylineCollection = this._polylineCollection;\n  var batchIds = this._batchIds;\n  var length = batchIds.length;\n\n  for (var i = 0; i < length; ++i) {\n    var batchId = batchIds[i];\n    var billboard = billboardCollection.get(i);\n    var label = labelCollection.get(i);\n    var polyline = polylineCollection.get(i);\n    features[batchId] = new Cesium3DTilePointFeature(content, batchId, billboard, label, polyline);\n  }\n};\n/**\n * Colors the entire tile when enabled is true. The resulting color will be (batch table color * color).\n *\n * @param {Boolean} enabled Whether to enable debug coloring.\n * @param {Color} color The debug color.\n */\n\n\nVector3DTilePoints.prototype.applyDebugSettings = function (enabled, color) {\n  if (enabled) {\n    Color.clone(color, this._billboardCollection._highlightColor);\n    Color.clone(color, this._labelCollection._highlightColor);\n    Color.clone(color, this._polylineCollection._highlightColor);\n  } else {\n    Color.clone(Color.WHITE, this._billboardCollection._highlightColor);\n    Color.clone(Color.WHITE, this._labelCollection._highlightColor);\n    Color.clone(Color.WHITE, this._polylineCollection._highlightColor);\n  }\n};\n\nfunction clearStyle(polygons, features) {\n  var batchIds = polygons._batchIds;\n  var length = batchIds.length;\n\n  for (var i = 0; i < length; ++i) {\n    var batchId = batchIds[i];\n    var feature = features[batchId];\n    feature.show = true;\n    feature.pointSize = Cesium3DTilePointFeature.defaultPointSize;\n    feature.color = Cesium3DTilePointFeature.defaultColor;\n    feature.pointOutlineColor = Cesium3DTilePointFeature.defaultPointOutlineColor;\n    feature.pointOutlineWidth = Cesium3DTilePointFeature.defaultPointOutlineWidth;\n    feature.labelColor = Color.WHITE;\n    feature.labelOutlineColor = Color.WHITE;\n    feature.labelOutlineWidth = 1.0;\n    feature.font = \"30px sans-serif\";\n    feature.labelStyle = LabelStyle.FILL;\n    feature.labelText = undefined;\n    feature.backgroundColor = new Color(0.165, 0.165, 0.165, 0.8);\n    feature.backgroundPadding = new Cartesian2(7, 5);\n    feature.backgroundEnabled = false;\n    feature.scaleByDistance = undefined;\n    feature.translucencyByDistance = undefined;\n    feature.distanceDisplayCondition = undefined;\n    feature.heightOffset = 0.0;\n    feature.anchorLineEnabled = false;\n    feature.anchorLineColor = Color.WHITE;\n    feature.image = undefined;\n    feature.disableDepthTestDistance = 0.0;\n    feature.horizontalOrigin = HorizontalOrigin.CENTER;\n    feature.verticalOrigin = VerticalOrigin.CENTER;\n    feature.labelHorizontalOrigin = HorizontalOrigin.RIGHT;\n    feature.labelVerticalOrigin = VerticalOrigin.BASELINE;\n  }\n}\n\nvar scratchColor = new Color();\nvar scratchColor2 = new Color();\nvar scratchColor3 = new Color();\nvar scratchColor4 = new Color();\nvar scratchColor5 = new Color();\nvar scratchColor6 = new Color();\nvar scratchScaleByDistance = new NearFarScalar();\nvar scratchTranslucencyByDistance = new NearFarScalar();\nvar scratchDistanceDisplayCondition = new DistanceDisplayCondition();\n/**\n * Apply a style to the content.\n *\n * @param {Cesium3DTileStyle} style The style.\n * @param {Cesium3DTileFeature[]} features The array of features.\n */\n\nVector3DTilePoints.prototype.applyStyle = function (style, features) {\n  if (!defined(style)) {\n    clearStyle(this, features);\n    return;\n  }\n\n  var batchIds = this._batchIds;\n  var length = batchIds.length;\n\n  for (var i = 0; i < length; ++i) {\n    var batchId = batchIds[i];\n    var feature = features[batchId];\n\n    if (defined(style.show)) {\n      feature.show = style.show.evaluate(feature);\n    }\n\n    if (defined(style.pointSize)) {\n      feature.pointSize = style.pointSize.evaluate(feature);\n    }\n\n    if (defined(style.color)) {\n      feature.color = style.color.evaluateColor(feature, scratchColor);\n    }\n\n    if (defined(style.pointOutlineColor)) {\n      feature.pointOutlineColor = style.pointOutlineColor.evaluateColor(feature, scratchColor2);\n    }\n\n    if (defined(style.pointOutlineWidth)) {\n      feature.pointOutlineWidth = style.pointOutlineWidth.evaluate(feature);\n    }\n\n    if (defined(style.labelColor)) {\n      feature.labelColor = style.labelColor.evaluateColor(feature, scratchColor3);\n    }\n\n    if (defined(style.labelOutlineColor)) {\n      feature.labelOutlineColor = style.labelOutlineColor.evaluateColor(feature, scratchColor4);\n    }\n\n    if (defined(style.labelOutlineWidth)) {\n      feature.labelOutlineWidth = style.labelOutlineWidth.evaluate(feature);\n    }\n\n    if (defined(style.font)) {\n      feature.font = style.font.evaluate(feature);\n    }\n\n    if (defined(style.labelStyle)) {\n      feature.labelStyle = style.labelStyle.evaluate(feature);\n    }\n\n    if (defined(style.labelText)) {\n      feature.labelText = style.labelText.evaluate(feature);\n    } else {\n      feature.labelText = undefined;\n    }\n\n    if (defined(style.backgroundColor)) {\n      feature.backgroundColor = style.backgroundColor.evaluateColor(feature, scratchColor5);\n    }\n\n    if (defined(style.backgroundPadding)) {\n      feature.backgroundPadding = style.backgroundPadding.evaluate(feature);\n    }\n\n    if (defined(style.backgroundEnabled)) {\n      feature.backgroundEnabled = style.backgroundEnabled.evaluate(feature);\n    }\n\n    if (defined(style.scaleByDistance)) {\n      var scaleByDistanceCart4 = style.scaleByDistance.evaluate(feature);\n      scratchScaleByDistance.near = scaleByDistanceCart4.x;\n      scratchScaleByDistance.nearValue = scaleByDistanceCart4.y;\n      scratchScaleByDistance.far = scaleByDistanceCart4.z;\n      scratchScaleByDistance.farValue = scaleByDistanceCart4.w;\n      feature.scaleByDistance = scratchScaleByDistance;\n    } else {\n      feature.scaleByDistance = undefined;\n    }\n\n    if (defined(style.translucencyByDistance)) {\n      var translucencyByDistanceCart4 = style.translucencyByDistance.evaluate(feature);\n      scratchTranslucencyByDistance.near = translucencyByDistanceCart4.x;\n      scratchTranslucencyByDistance.nearValue = translucencyByDistanceCart4.y;\n      scratchTranslucencyByDistance.far = translucencyByDistanceCart4.z;\n      scratchTranslucencyByDistance.farValue = translucencyByDistanceCart4.w;\n      feature.translucencyByDistance = scratchTranslucencyByDistance;\n    } else {\n      feature.translucencyByDistance = undefined;\n    }\n\n    if (defined(style.distanceDisplayCondition)) {\n      var distanceDisplayConditionCart2 = style.distanceDisplayCondition.evaluate(feature);\n      scratchDistanceDisplayCondition.near = distanceDisplayConditionCart2.x;\n      scratchDistanceDisplayCondition.far = distanceDisplayConditionCart2.y;\n      feature.distanceDisplayCondition = scratchDistanceDisplayCondition;\n    } else {\n      feature.distanceDisplayCondition = undefined;\n    }\n\n    if (defined(style.heightOffset)) {\n      feature.heightOffset = style.heightOffset.evaluate(feature);\n    }\n\n    if (defined(style.anchorLineEnabled)) {\n      feature.anchorLineEnabled = style.anchorLineEnabled.evaluate(feature);\n    }\n\n    if (defined(style.anchorLineColor)) {\n      feature.anchorLineColor = style.anchorLineColor.evaluateColor(feature, scratchColor6);\n    }\n\n    if (defined(style.image)) {\n      feature.image = style.image.evaluate(feature);\n    } else {\n      feature.image = undefined;\n    }\n\n    if (defined(style.disableDepthTestDistance)) {\n      feature.disableDepthTestDistance = style.disableDepthTestDistance.evaluate(feature);\n    }\n\n    if (defined(style.horizontalOrigin)) {\n      feature.horizontalOrigin = style.horizontalOrigin.evaluate(feature);\n    }\n\n    if (defined(style.verticalOrigin)) {\n      feature.verticalOrigin = style.verticalOrigin.evaluate(feature);\n    }\n\n    if (defined(style.labelHorizontalOrigin)) {\n      feature.labelHorizontalOrigin = style.labelHorizontalOrigin.evaluate(feature);\n    }\n\n    if (defined(style.labelVerticalOrigin)) {\n      feature.labelVerticalOrigin = style.labelVerticalOrigin.evaluate(feature);\n    }\n  }\n};\n/**\n * @private\n */\n\n\nVector3DTilePoints.prototype.update = function (frameState) {\n  createPoints(this, frameState.mapProjection.ellipsoid);\n\n  if (!this._ready) {\n    return;\n  }\n\n  this._polylineCollection.update(frameState);\n\n  this._billboardCollection.update(frameState);\n\n  this._labelCollection.update(frameState);\n\n  if (!this._resolvedPromise) {\n    this._readyPromise.resolve();\n\n    this._resolvedPromise = true;\n  }\n};\n/**\n * Returns true if this object was destroyed; otherwise, false.\n * <p>\n * If this object was destroyed, it should not be used; calling any function other than\n * <code>isDestroyed</code> will result in a {@link DeveloperError} exception.\n * </p>\n *\n * @returns {Boolean} <code>true</code> if this object was destroyed; otherwise, <code>false</code>.\n */\n\n\nVector3DTilePoints.prototype.isDestroyed = function () {\n  return false;\n};\n/**\n * Destroys the WebGL resources held by this object.  Destroying an object allows for deterministic\n * release of WebGL resources, instead of relying on the garbage collector to destroy this object.\n * <p>\n * Once an object is destroyed, it should not be used; calling any function other than\n * <code>isDestroyed</code> will result in a {@link DeveloperError} exception.  Therefore,\n * assign the return value (<code>undefined</code>) to the object as done in the example.\n * </p>\n *\n * @exception {DeveloperError} This object was destroyed, i.e., destroy() was called.\n */\n\n\nVector3DTilePoints.prototype.destroy = function () {\n  this._billboardCollection = this._billboardCollection && this._billboardCollection.destroy();\n  this._labelCollection = this._labelCollection && this._labelCollection.destroy();\n  this._polylineCollection = this._polylineCollection && this._polylineCollection.destroy();\n  return destroyObject(this);\n};\n\nexport default Vector3DTilePoints;","map":{"version":3,"sources":["C:/Users/passa/Desktop/WaterLevelReact/node_modules/cesium/Source/Scene/Vector3DTilePoints.js"],"names":["arraySlice","Cartesian2","Cartesian3","Color","defined","destroyObject","DistanceDisplayCondition","Ellipsoid","NearFarScalar","Rectangle","TaskProcessor","when","BillboardCollection","Cesium3DTilePointFeature","HorizontalOrigin","LabelCollection","LabelStyle","PolylineCollection","VerticalOrigin","Vector3DTilePoints","options","_positions","positions","_batchTable","batchTable","_batchIds","batchIds","_rectangle","rectangle","_minHeight","minimumHeight","_maxHeight","maximumHeight","_billboardCollection","undefined","_labelCollection","_polylineCollection","_verticesPromise","_packedBuffer","_ready","_readyPromise","defer","_resolvedPromise","Object","defineProperties","prototype","pointsLength","get","length","texturesByteLength","billboardSize","textureAtlas","texture","sizeInBytes","labelSize","_textureAtlas","readyPromise","promise","packBuffer","points","ellipsoid","packedLength","packedBuffer","Float64Array","offset","pack","createVerticesTaskProcessor","scratchPosition","createPoints","transferrableObjects","buffer","parameters","verticesPromise","scheduleTask","then","result","billboardCollection","labelCollection","polylineCollection","_useHighlightColor","numberOfPoints","i","id","position","unpack","b","add","_batchIndex","l","text","p","clone","createFeatures","content","features","batchId","billboard","label","polyline","applyDebugSettings","enabled","color","_highlightColor","WHITE","clearStyle","polygons","feature","show","pointSize","defaultPointSize","defaultColor","pointOutlineColor","defaultPointOutlineColor","pointOutlineWidth","defaultPointOutlineWidth","labelColor","labelOutlineColor","labelOutlineWidth","font","labelStyle","FILL","labelText","backgroundColor","backgroundPadding","backgroundEnabled","scaleByDistance","translucencyByDistance","distanceDisplayCondition","heightOffset","anchorLineEnabled","anchorLineColor","image","disableDepthTestDistance","horizontalOrigin","CENTER","verticalOrigin","labelHorizontalOrigin","RIGHT","labelVerticalOrigin","BASELINE","scratchColor","scratchColor2","scratchColor3","scratchColor4","scratchColor5","scratchColor6","scratchScaleByDistance","scratchTranslucencyByDistance","scratchDistanceDisplayCondition","applyStyle","style","evaluate","evaluateColor","scaleByDistanceCart4","near","x","nearValue","y","far","z","farValue","w","translucencyByDistanceCart4","distanceDisplayConditionCart2","update","frameState","mapProjection","resolve","isDestroyed","destroy"],"mappings":"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","sourcesContent":["import arraySlice from \"../Core/arraySlice.js\";\nimport Cartesian2 from \"../Core/Cartesian2.js\";\nimport Cartesian3 from \"../Core/Cartesian3.js\";\nimport Color from \"../Core/Color.js\";\nimport defined from \"../Core/defined.js\";\nimport destroyObject from \"../Core/destroyObject.js\";\nimport DistanceDisplayCondition from \"../Core/DistanceDisplayCondition.js\";\nimport Ellipsoid from \"../Core/Ellipsoid.js\";\nimport NearFarScalar from \"../Core/NearFarScalar.js\";\nimport Rectangle from \"../Core/Rectangle.js\";\nimport TaskProcessor from \"../Core/TaskProcessor.js\";\nimport when from \"../ThirdParty/when.js\";\nimport BillboardCollection from \"./BillboardCollection.js\";\nimport Cesium3DTilePointFeature from \"./Cesium3DTilePointFeature.js\";\nimport HorizontalOrigin from \"./HorizontalOrigin.js\";\nimport LabelCollection from \"./LabelCollection.js\";\nimport LabelStyle from \"./LabelStyle.js\";\nimport PolylineCollection from \"./PolylineCollection.js\";\nimport VerticalOrigin from \"./VerticalOrigin.js\";\n\n/**\n * Creates a batch of points or billboards and labels.\n *\n * @alias Vector3DTilePoints\n * @constructor\n *\n * @param {Object} options An object with following properties:\n * @param {Uint16Array} options.positions The positions of the polygons.\n * @param {Number} options.minimumHeight The minimum height of the terrain covered by the tile.\n * @param {Number} options.maximumHeight The maximum height of the terrain covered by the tile.\n * @param {Rectangle} options.rectangle The rectangle containing the tile.\n * @param {Cesium3DTileBatchTable} options.batchTable The batch table for the tile containing the batched polygons.\n * @param {Uint16Array} options.batchIds The batch ids for each polygon.\n *\n * @private\n */\nfunction Vector3DTilePoints(options) {\n  // released after the first update\n  this._positions = options.positions;\n\n  this._batchTable = options.batchTable;\n  this._batchIds = options.batchIds;\n\n  this._rectangle = options.rectangle;\n  this._minHeight = options.minimumHeight;\n  this._maxHeight = options.maximumHeight;\n\n  this._billboardCollection = undefined;\n  this._labelCollection = undefined;\n  this._polylineCollection = undefined;\n\n  this._verticesPromise = undefined;\n  this._packedBuffer = undefined;\n\n  this._ready = false;\n  this._readyPromise = when.defer();\n  this._resolvedPromise = false;\n}\n\nObject.defineProperties(Vector3DTilePoints.prototype, {\n  /**\n   * Gets the number of points.\n   *\n   * @memberof Vector3DTilePoints.prototype\n   *\n   * @type {Number}\n   * @readonly\n   */\n  pointsLength: {\n    get: function () {\n      return this._billboardCollection.length;\n    },\n  },\n\n  /**\n   * Gets the texture atlas memory in bytes.\n   *\n   * @memberof Vector3DTilePoints.prototype\n   *\n   * @type {Number}\n   * @readonly\n   */\n  texturesByteLength: {\n    get: function () {\n      var billboardSize = this._billboardCollection.textureAtlas.texture\n        .sizeInBytes;\n      var labelSize = this._labelCollection._textureAtlas.texture.sizeInBytes;\n      return billboardSize + labelSize;\n    },\n  },\n\n  /**\n   * Gets a promise that resolves when the primitive is ready to render.\n   * @memberof Vector3DTilePoints.prototype\n   * @type {Promise}\n   * @readonly\n   */\n  readyPromise: {\n    get: function () {\n      return this._readyPromise.promise;\n    },\n  },\n});\n\nfunction packBuffer(points, ellipsoid) {\n  var rectangle = points._rectangle;\n  var minimumHeight = points._minHeight;\n  var maximumHeight = points._maxHeight;\n\n  var packedLength = 2 + Rectangle.packedLength + Ellipsoid.packedLength;\n  var packedBuffer = new Float64Array(packedLength);\n\n  var offset = 0;\n  packedBuffer[offset++] = minimumHeight;\n  packedBuffer[offset++] = maximumHeight;\n\n  Rectangle.pack(rectangle, packedBuffer, offset);\n  offset += Rectangle.packedLength;\n\n  Ellipsoid.pack(ellipsoid, packedBuffer, offset);\n\n  return packedBuffer;\n}\n\nvar createVerticesTaskProcessor = new TaskProcessor(\"createVectorTilePoints\");\nvar scratchPosition = new Cartesian3();\n\nfunction createPoints(points, ellipsoid) {\n  if (defined(points._billboardCollection)) {\n    return;\n  }\n\n  var positions;\n  if (!defined(points._verticesPromise)) {\n    positions = points._positions;\n    var packedBuffer = points._packedBuffer;\n\n    if (!defined(packedBuffer)) {\n      // Copy because they may be the views on the same buffer.\n      positions = points._positions = arraySlice(positions);\n      points._batchIds = arraySlice(points._batchIds);\n\n      packedBuffer = points._packedBuffer = packBuffer(points, ellipsoid);\n    }\n\n    var transferrableObjects = [positions.buffer, packedBuffer.buffer];\n    var parameters = {\n      positions: positions.buffer,\n      packedBuffer: packedBuffer.buffer,\n    };\n\n    var verticesPromise = (points._verticesPromise = createVerticesTaskProcessor.scheduleTask(\n      parameters,\n      transferrableObjects\n    ));\n    if (!defined(verticesPromise)) {\n      // Postponed\n      return;\n    }\n\n    verticesPromise.then(function (result) {\n      points._positions = new Float64Array(result.positions);\n      points._ready = true;\n    });\n  }\n\n  if (points._ready && !defined(points._billboardCollection)) {\n    positions = points._positions;\n    var batchTable = points._batchTable;\n    var batchIds = points._batchIds;\n\n    var billboardCollection = (points._billboardCollection = new BillboardCollection(\n      { batchTable: batchTable }\n    ));\n    var labelCollection = (points._labelCollection = new LabelCollection({\n      batchTable: batchTable,\n    }));\n    var polylineCollection = (points._polylineCollection = new PolylineCollection());\n    polylineCollection._useHighlightColor = true;\n\n    var numberOfPoints = positions.length / 3;\n    for (var i = 0; i < numberOfPoints; ++i) {\n      var id = batchIds[i];\n\n      var position = Cartesian3.unpack(positions, i * 3, scratchPosition);\n\n      var b = billboardCollection.add();\n      b.position = position;\n      b._batchIndex = id;\n\n      var l = labelCollection.add();\n      l.text = \" \";\n      l.position = position;\n      l._batchIndex = id;\n\n      var p = polylineCollection.add();\n      p.positions = [Cartesian3.clone(position), Cartesian3.clone(position)];\n    }\n\n    points._positions = undefined;\n    points._packedBuffer = undefined;\n  }\n}\n\n/**\n * Creates features for each point and places it at the batch id index of features.\n *\n * @param {Vector3DTileContent} content The vector tile content.\n * @param {Cesium3DTileFeature[]} features An array of features where the point features will be placed.\n */\nVector3DTilePoints.prototype.createFeatures = function (content, features) {\n  var billboardCollection = this._billboardCollection;\n  var labelCollection = this._labelCollection;\n  var polylineCollection = this._polylineCollection;\n\n  var batchIds = this._batchIds;\n  var length = batchIds.length;\n  for (var i = 0; i < length; ++i) {\n    var batchId = batchIds[i];\n\n    var billboard = billboardCollection.get(i);\n    var label = labelCollection.get(i);\n    var polyline = polylineCollection.get(i);\n\n    features[batchId] = new Cesium3DTilePointFeature(\n      content,\n      batchId,\n      billboard,\n      label,\n      polyline\n    );\n  }\n};\n\n/**\n * Colors the entire tile when enabled is true. The resulting color will be (batch table color * color).\n *\n * @param {Boolean} enabled Whether to enable debug coloring.\n * @param {Color} color The debug color.\n */\nVector3DTilePoints.prototype.applyDebugSettings = function (enabled, color) {\n  if (enabled) {\n    Color.clone(color, this._billboardCollection._highlightColor);\n    Color.clone(color, this._labelCollection._highlightColor);\n    Color.clone(color, this._polylineCollection._highlightColor);\n  } else {\n    Color.clone(Color.WHITE, this._billboardCollection._highlightColor);\n    Color.clone(Color.WHITE, this._labelCollection._highlightColor);\n    Color.clone(Color.WHITE, this._polylineCollection._highlightColor);\n  }\n};\n\nfunction clearStyle(polygons, features) {\n  var batchIds = polygons._batchIds;\n  var length = batchIds.length;\n  for (var i = 0; i < length; ++i) {\n    var batchId = batchIds[i];\n    var feature = features[batchId];\n\n    feature.show = true;\n    feature.pointSize = Cesium3DTilePointFeature.defaultPointSize;\n    feature.color = Cesium3DTilePointFeature.defaultColor;\n    feature.pointOutlineColor =\n      Cesium3DTilePointFeature.defaultPointOutlineColor;\n    feature.pointOutlineWidth =\n      Cesium3DTilePointFeature.defaultPointOutlineWidth;\n    feature.labelColor = Color.WHITE;\n    feature.labelOutlineColor = Color.WHITE;\n    feature.labelOutlineWidth = 1.0;\n    feature.font = \"30px sans-serif\";\n    feature.labelStyle = LabelStyle.FILL;\n    feature.labelText = undefined;\n    feature.backgroundColor = new Color(0.165, 0.165, 0.165, 0.8);\n    feature.backgroundPadding = new Cartesian2(7, 5);\n    feature.backgroundEnabled = false;\n    feature.scaleByDistance = undefined;\n    feature.translucencyByDistance = undefined;\n    feature.distanceDisplayCondition = undefined;\n    feature.heightOffset = 0.0;\n    feature.anchorLineEnabled = false;\n    feature.anchorLineColor = Color.WHITE;\n    feature.image = undefined;\n    feature.disableDepthTestDistance = 0.0;\n    feature.horizontalOrigin = HorizontalOrigin.CENTER;\n    feature.verticalOrigin = VerticalOrigin.CENTER;\n    feature.labelHorizontalOrigin = HorizontalOrigin.RIGHT;\n    feature.labelVerticalOrigin = VerticalOrigin.BASELINE;\n  }\n}\n\nvar scratchColor = new Color();\nvar scratchColor2 = new Color();\nvar scratchColor3 = new Color();\nvar scratchColor4 = new Color();\nvar scratchColor5 = new Color();\nvar scratchColor6 = new Color();\nvar scratchScaleByDistance = new NearFarScalar();\nvar scratchTranslucencyByDistance = new NearFarScalar();\nvar scratchDistanceDisplayCondition = new DistanceDisplayCondition();\n\n/**\n * Apply a style to the content.\n *\n * @param {Cesium3DTileStyle} style The style.\n * @param {Cesium3DTileFeature[]} features The array of features.\n */\nVector3DTilePoints.prototype.applyStyle = function (style, features) {\n  if (!defined(style)) {\n    clearStyle(this, features);\n    return;\n  }\n\n  var batchIds = this._batchIds;\n  var length = batchIds.length;\n  for (var i = 0; i < length; ++i) {\n    var batchId = batchIds[i];\n    var feature = features[batchId];\n\n    if (defined(style.show)) {\n      feature.show = style.show.evaluate(feature);\n    }\n\n    if (defined(style.pointSize)) {\n      feature.pointSize = style.pointSize.evaluate(feature);\n    }\n\n    if (defined(style.color)) {\n      feature.color = style.color.evaluateColor(feature, scratchColor);\n    }\n\n    if (defined(style.pointOutlineColor)) {\n      feature.pointOutlineColor = style.pointOutlineColor.evaluateColor(\n        feature,\n        scratchColor2\n      );\n    }\n\n    if (defined(style.pointOutlineWidth)) {\n      feature.pointOutlineWidth = style.pointOutlineWidth.evaluate(feature);\n    }\n\n    if (defined(style.labelColor)) {\n      feature.labelColor = style.labelColor.evaluateColor(\n        feature,\n        scratchColor3\n      );\n    }\n\n    if (defined(style.labelOutlineColor)) {\n      feature.labelOutlineColor = style.labelOutlineColor.evaluateColor(\n        feature,\n        scratchColor4\n      );\n    }\n\n    if (defined(style.labelOutlineWidth)) {\n      feature.labelOutlineWidth = style.labelOutlineWidth.evaluate(feature);\n    }\n\n    if (defined(style.font)) {\n      feature.font = style.font.evaluate(feature);\n    }\n\n    if (defined(style.labelStyle)) {\n      feature.labelStyle = style.labelStyle.evaluate(feature);\n    }\n\n    if (defined(style.labelText)) {\n      feature.labelText = style.labelText.evaluate(feature);\n    } else {\n      feature.labelText = undefined;\n    }\n\n    if (defined(style.backgroundColor)) {\n      feature.backgroundColor = style.backgroundColor.evaluateColor(\n        feature,\n        scratchColor5\n      );\n    }\n\n    if (defined(style.backgroundPadding)) {\n      feature.backgroundPadding = style.backgroundPadding.evaluate(feature);\n    }\n\n    if (defined(style.backgroundEnabled)) {\n      feature.backgroundEnabled = style.backgroundEnabled.evaluate(feature);\n    }\n\n    if (defined(style.scaleByDistance)) {\n      var scaleByDistanceCart4 = style.scaleByDistance.evaluate(feature);\n      scratchScaleByDistance.near = scaleByDistanceCart4.x;\n      scratchScaleByDistance.nearValue = scaleByDistanceCart4.y;\n      scratchScaleByDistance.far = scaleByDistanceCart4.z;\n      scratchScaleByDistance.farValue = scaleByDistanceCart4.w;\n      feature.scaleByDistance = scratchScaleByDistance;\n    } else {\n      feature.scaleByDistance = undefined;\n    }\n\n    if (defined(style.translucencyByDistance)) {\n      var translucencyByDistanceCart4 = style.translucencyByDistance.evaluate(\n        feature\n      );\n      scratchTranslucencyByDistance.near = translucencyByDistanceCart4.x;\n      scratchTranslucencyByDistance.nearValue = translucencyByDistanceCart4.y;\n      scratchTranslucencyByDistance.far = translucencyByDistanceCart4.z;\n      scratchTranslucencyByDistance.farValue = translucencyByDistanceCart4.w;\n      feature.translucencyByDistance = scratchTranslucencyByDistance;\n    } else {\n      feature.translucencyByDistance = undefined;\n    }\n\n    if (defined(style.distanceDisplayCondition)) {\n      var distanceDisplayConditionCart2 = style.distanceDisplayCondition.evaluate(\n        feature\n      );\n      scratchDistanceDisplayCondition.near = distanceDisplayConditionCart2.x;\n      scratchDistanceDisplayCondition.far = distanceDisplayConditionCart2.y;\n      feature.distanceDisplayCondition = scratchDistanceDisplayCondition;\n    } else {\n      feature.distanceDisplayCondition = undefined;\n    }\n\n    if (defined(style.heightOffset)) {\n      feature.heightOffset = style.heightOffset.evaluate(feature);\n    }\n\n    if (defined(style.anchorLineEnabled)) {\n      feature.anchorLineEnabled = style.anchorLineEnabled.evaluate(feature);\n    }\n\n    if (defined(style.anchorLineColor)) {\n      feature.anchorLineColor = style.anchorLineColor.evaluateColor(\n        feature,\n        scratchColor6\n      );\n    }\n\n    if (defined(style.image)) {\n      feature.image = style.image.evaluate(feature);\n    } else {\n      feature.image = undefined;\n    }\n\n    if (defined(style.disableDepthTestDistance)) {\n      feature.disableDepthTestDistance = style.disableDepthTestDistance.evaluate(\n        feature\n      );\n    }\n\n    if (defined(style.horizontalOrigin)) {\n      feature.horizontalOrigin = style.horizontalOrigin.evaluate(feature);\n    }\n\n    if (defined(style.verticalOrigin)) {\n      feature.verticalOrigin = style.verticalOrigin.evaluate(feature);\n    }\n\n    if (defined(style.labelHorizontalOrigin)) {\n      feature.labelHorizontalOrigin = style.labelHorizontalOrigin.evaluate(\n        feature\n      );\n    }\n\n    if (defined(style.labelVerticalOrigin)) {\n      feature.labelVerticalOrigin = style.labelVerticalOrigin.evaluate(feature);\n    }\n  }\n};\n\n/**\n * @private\n */\nVector3DTilePoints.prototype.update = function (frameState) {\n  createPoints(this, frameState.mapProjection.ellipsoid);\n\n  if (!this._ready) {\n    return;\n  }\n\n  this._polylineCollection.update(frameState);\n  this._billboardCollection.update(frameState);\n  this._labelCollection.update(frameState);\n\n  if (!this._resolvedPromise) {\n    this._readyPromise.resolve();\n    this._resolvedPromise = true;\n  }\n};\n\n/**\n * Returns true if this object was destroyed; otherwise, false.\n * <p>\n * If this object was destroyed, it should not be used; calling any function other than\n * <code>isDestroyed</code> will result in a {@link DeveloperError} exception.\n * </p>\n *\n * @returns {Boolean} <code>true</code> if this object was destroyed; otherwise, <code>false</code>.\n */\nVector3DTilePoints.prototype.isDestroyed = function () {\n  return false;\n};\n\n/**\n * Destroys the WebGL resources held by this object.  Destroying an object allows for deterministic\n * release of WebGL resources, instead of relying on the garbage collector to destroy this object.\n * <p>\n * Once an object is destroyed, it should not be used; calling any function other than\n * <code>isDestroyed</code> will result in a {@link DeveloperError} exception.  Therefore,\n * assign the return value (<code>undefined</code>) to the object as done in the example.\n * </p>\n *\n * @exception {DeveloperError} This object was destroyed, i.e., destroy() was called.\n */\nVector3DTilePoints.prototype.destroy = function () {\n  this._billboardCollection =\n    this._billboardCollection && this._billboardCollection.destroy();\n  this._labelCollection =\n    this._labelCollection && this._labelCollection.destroy();\n  this._polylineCollection =\n    this._polylineCollection && this._polylineCollection.destroy();\n  return destroyObject(this);\n};\nexport default Vector3DTilePoints;\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import defaultValue from \"../../Core/defaultValue.js\";\nimport defined from \"../../Core/defined.js\";\nimport DeveloperError from \"../../Core/DeveloperError.js\";\nimport Event from \"../../Core/Event.js\";\nimport wrapFunction from \"../../Core/wrapFunction.js\";\nimport CzmlDataSource from \"../../DataSources/CzmlDataSource.js\";\nimport GeoJsonDataSource from \"../../DataSources/GeoJsonDataSource.js\";\nimport KmlDataSource from \"../../DataSources/KmlDataSource.js\";\nimport getElement from \"../getElement.js\";\n/**\n * A mixin which adds default drag and drop support for CZML files to the Viewer widget.\n * Rather than being called directly, this function is normally passed as\n * a parameter to {@link Viewer#extend}, as shown in the example below.\n * @exports viewerDragDropMixin\n * @namespace\n * @param {Viewer} viewer The viewer instance.\n * @param {Object} [options] Object with the following properties:\n * @param {Element|String} [options.dropTarget=viewer.container] The DOM element which will serve as the drop target.\n * @param {Boolean} [options.clearOnDrop=true] When true, dropping files will clear all existing data sources first, when false, new data sources will be loaded after the existing ones.\n * @param {Boolean} [options.flyToOnDrop=true] When true, dropping files will fly to the data source once it is loaded.\n * @param {Boolean} [options.clampToGround=true] When true, datasources are clamped to the ground.\n * @param {DefaultProxy} [options.proxy] The proxy to be used for KML network links.\n *\n * @exception {DeveloperError} Element with id <options.dropTarget> does not exist in the document.\n * @exception {DeveloperError} dropTarget is already defined by another mixin.\n * @exception {DeveloperError} dropEnabled is already defined by another mixin.\n * @exception {DeveloperError} dropError is already defined by another mixin.\n * @exception {DeveloperError} clearOnDrop is already defined by another mixin.\n *\n * @example\n * // Add basic drag and drop support and pop up an alert window on error.\n * var viewer = new Cesium.Viewer('cesiumContainer');\n * viewer.extend(Cesium.viewerDragDropMixin);\n * viewer.dropError.addEventListener(function(viewerArg, source, error) {\n *     window.alert('Error processing ' + source + ':' + error);\n * });\n */\n\nfunction viewerDragDropMixin(viewer, options) {\n  //>>includeStart('debug', pragmas.debug);\n  if (!defined(viewer)) {\n    throw new DeveloperError(\"viewer is required.\");\n  }\n\n  if (viewer.hasOwnProperty(\"dropTarget\")) {\n    throw new DeveloperError(\"dropTarget is already defined by another mixin.\");\n  }\n\n  if (viewer.hasOwnProperty(\"dropEnabled\")) {\n    throw new DeveloperError(\"dropEnabled is already defined by another mixin.\");\n  }\n\n  if (viewer.hasOwnProperty(\"dropError\")) {\n    throw new DeveloperError(\"dropError is already defined by another mixin.\");\n  }\n\n  if (viewer.hasOwnProperty(\"clearOnDrop\")) {\n    throw new DeveloperError(\"clearOnDrop is already defined by another mixin.\");\n  }\n\n  if (viewer.hasOwnProperty(\"flyToOnDrop\")) {\n    throw new DeveloperError(\"flyToOnDrop is already defined by another mixin.\");\n  } //>>includeEnd('debug');\n\n\n  options = defaultValue(options, defaultValue.EMPTY_OBJECT); //Local variables to be closed over by defineProperties.\n\n  var dropEnabled = true;\n  var flyToOnDrop = defaultValue(options.flyToOnDrop, true);\n  var dropError = new Event();\n  var clearOnDrop = defaultValue(options.clearOnDrop, true);\n  var dropTarget = defaultValue(options.dropTarget, viewer.container);\n  var clampToGround = defaultValue(options.clampToGround, true);\n  var proxy = options.proxy;\n  dropTarget = getElement(dropTarget);\n  Object.defineProperties(viewer, {\n    /**\n     * Gets or sets the element to serve as the drop target.\n     * @memberof viewerDragDropMixin.prototype\n     * @type {Element}\n     */\n    dropTarget: {\n      //TODO See https://github.com/CesiumGS/cesium/issues/832\n      get: function () {\n        return dropTarget;\n      },\n      set: function (value) {\n        //>>includeStart('debug', pragmas.debug);\n        if (!defined(value)) {\n          throw new DeveloperError(\"value is required.\");\n        } //>>includeEnd('debug');\n\n\n        unsubscribe(dropTarget, handleDrop);\n        dropTarget = value;\n        subscribe(dropTarget, handleDrop);\n      }\n    },\n\n    /**\n     * Gets or sets a value indicating if drag and drop support is enabled.\n     * @memberof viewerDragDropMixin.prototype\n     * @type {Element}\n     */\n    dropEnabled: {\n      get: function () {\n        return dropEnabled;\n      },\n      set: function (value) {\n        if (value !== dropEnabled) {\n          if (value) {\n            subscribe(dropTarget, handleDrop);\n          } else {\n            unsubscribe(dropTarget, handleDrop);\n          }\n\n          dropEnabled = value;\n        }\n      }\n    },\n\n    /**\n     * Gets the event that will be raised when an error is encountered during drop processing.\n     * @memberof viewerDragDropMixin.prototype\n     * @type {Event}\n     */\n    dropError: {\n      get: function () {\n        return dropError;\n      }\n    },\n\n    /**\n     * Gets or sets a value indicating if existing data sources should be cleared before adding the newly dropped sources.\n     * @memberof viewerDragDropMixin.prototype\n     * @type {Boolean}\n     */\n    clearOnDrop: {\n      get: function () {\n        return clearOnDrop;\n      },\n      set: function (value) {\n        clearOnDrop = value;\n      }\n    },\n\n    /**\n     * Gets or sets a value indicating if the camera should fly to the data source after it is loaded.\n     * @memberof viewerDragDropMixin.prototype\n     * @type {Boolean}\n     */\n    flyToOnDrop: {\n      get: function () {\n        return flyToOnDrop;\n      },\n      set: function (value) {\n        flyToOnDrop = value;\n      }\n    },\n\n    /**\n     * Gets or sets the proxy to be used for KML.\n     * @memberof viewerDragDropMixin.prototype\n     * @type {DefaultProxy}\n     */\n    proxy: {\n      get: function () {\n        return proxy;\n      },\n      set: function (value) {\n        proxy = value;\n      }\n    },\n\n    /**\n     * Gets or sets a value indicating if the datasources should be clamped to the ground\n     * @memberof viewerDragDropMixin.prototype\n     * @type {Boolean}\n     */\n    clampToGround: {\n      get: function () {\n        return clampToGround;\n      },\n      set: function (value) {\n        clampToGround = value;\n      }\n    }\n  });\n\n  function handleDrop(event) {\n    stop(event);\n\n    if (clearOnDrop) {\n      viewer.entities.removeAll();\n      viewer.dataSources.removeAll();\n    }\n\n    var files = event.dataTransfer.files;\n    var length = files.length;\n\n    for (var i = 0; i < length; i++) {\n      var file = files[i];\n      var reader = new FileReader();\n      reader.onload = createOnLoadCallback(viewer, file, proxy, clampToGround);\n      reader.onerror = createDropErrorCallback(viewer, file);\n      reader.readAsText(file);\n    }\n  } //Enable drop by default;\n\n\n  subscribe(dropTarget, handleDrop); //Wrap the destroy function to make sure all events are unsubscribed from\n\n  viewer.destroy = wrapFunction(viewer, viewer.destroy, function () {\n    viewer.dropEnabled = false;\n  }); //Specs need access to handleDrop\n\n  viewer._handleDrop = handleDrop;\n}\n\nfunction stop(event) {\n  event.stopPropagation();\n  event.preventDefault();\n}\n\nfunction unsubscribe(dropTarget, handleDrop) {\n  var currentTarget = dropTarget;\n\n  if (defined(currentTarget)) {\n    currentTarget.removeEventListener(\"drop\", handleDrop, false);\n    currentTarget.removeEventListener(\"dragenter\", stop, false);\n    currentTarget.removeEventListener(\"dragover\", stop, false);\n    currentTarget.removeEventListener(\"dragexit\", stop, false);\n  }\n}\n\nfunction subscribe(dropTarget, handleDrop) {\n  dropTarget.addEventListener(\"drop\", handleDrop, false);\n  dropTarget.addEventListener(\"dragenter\", stop, false);\n  dropTarget.addEventListener(\"dragover\", stop, false);\n  dropTarget.addEventListener(\"dragexit\", stop, false);\n}\n\nfunction createOnLoadCallback(viewer, file, proxy, clampToGround) {\n  var scene = viewer.scene;\n  return function (evt) {\n    var fileName = file.name;\n\n    try {\n      var loadPromise;\n\n      if (/\\.czml$/i.test(fileName)) {\n        loadPromise = CzmlDataSource.load(JSON.parse(evt.target.result), {\n          sourceUri: fileName\n        });\n      } else if (/\\.geojson$/i.test(fileName) || /\\.json$/i.test(fileName) || /\\.topojson$/i.test(fileName)) {\n        loadPromise = GeoJsonDataSource.load(JSON.parse(evt.target.result), {\n          sourceUri: fileName,\n          clampToGround: clampToGround\n        });\n      } else if (/\\.(kml|kmz)$/i.test(fileName)) {\n        loadPromise = KmlDataSource.load(file, {\n          sourceUri: fileName,\n          proxy: proxy,\n          camera: scene.camera,\n          canvas: scene.canvas,\n          clampToGround: clampToGround\n        });\n      } else {\n        viewer.dropError.raiseEvent(viewer, fileName, \"Unrecognized file: \" + fileName);\n        return;\n      }\n\n      if (defined(loadPromise)) {\n        viewer.dataSources.add(loadPromise).then(function (dataSource) {\n          if (viewer.flyToOnDrop) {\n            viewer.flyTo(dataSource);\n          }\n        }).otherwise(function (error) {\n          viewer.dropError.raiseEvent(viewer, fileName, error);\n        });\n      }\n    } catch (error) {\n      viewer.dropError.raiseEvent(viewer, fileName, error);\n    }\n  };\n}\n\nfunction createDropErrorCallback(viewer, file) {\n  return function (evt) {\n    viewer.dropError.raiseEvent(viewer, file.name, evt.target.error);\n  };\n}\n\nexport default viewerDragDropMixin;","map":{"version":3,"sources":["C:/Users/passa/Desktop/WaterDeployTrial/node_modules/cesium/Source/Widgets/Viewer/viewerDragDropMixin.js"],"names":["defaultValue","defined","DeveloperError","Event","wrapFunction","CzmlDataSource","GeoJsonDataSource","KmlDataSource","getElement","viewerDragDropMixin","viewer","options","hasOwnProperty","EMPTY_OBJECT","dropEnabled","flyToOnDrop","dropError","clearOnDrop","dropTarget","container","clampToGround","proxy","Object","defineProperties","get","set","value","unsubscribe","handleDrop","subscribe","event","stop","entities","removeAll","dataSources","files","dataTransfer","length","i","file","reader","FileReader","onload","createOnLoadCallback","onerror","createDropErrorCallback","readAsText","destroy","_handleDrop","stopPropagation","preventDefault","currentTarget","removeEventListener","addEventListener","scene","evt","fileName","name","loadPromise","test","load","JSON","parse","target","result","sourceUri","camera","canvas","raiseEvent","add","then","dataSource","flyTo","otherwise","error"],"mappings":"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","sourcesContent":["import defaultValue from \"../../Core/defaultValue.js\";\nimport defined from \"../../Core/defined.js\";\nimport DeveloperError from \"../../Core/DeveloperError.js\";\nimport Event from \"../../Core/Event.js\";\nimport wrapFunction from \"../../Core/wrapFunction.js\";\nimport CzmlDataSource from \"../../DataSources/CzmlDataSource.js\";\nimport GeoJsonDataSource from \"../../DataSources/GeoJsonDataSource.js\";\nimport KmlDataSource from \"../../DataSources/KmlDataSource.js\";\nimport getElement from \"../getElement.js\";\n\n/**\n * A mixin which adds default drag and drop support for CZML files to the Viewer widget.\n * Rather than being called directly, this function is normally passed as\n * a parameter to {@link Viewer#extend}, as shown in the example below.\n * @exports viewerDragDropMixin\n * @namespace\n * @param {Viewer} viewer The viewer instance.\n * @param {Object} [options] Object with the following properties:\n * @param {Element|String} [options.dropTarget=viewer.container] The DOM element which will serve as the drop target.\n * @param {Boolean} [options.clearOnDrop=true] When true, dropping files will clear all existing data sources first, when false, new data sources will be loaded after the existing ones.\n * @param {Boolean} [options.flyToOnDrop=true] When true, dropping files will fly to the data source once it is loaded.\n * @param {Boolean} [options.clampToGround=true] When true, datasources are clamped to the ground.\n * @param {DefaultProxy} [options.proxy] The proxy to be used for KML network links.\n *\n * @exception {DeveloperError} Element with id <options.dropTarget> does not exist in the document.\n * @exception {DeveloperError} dropTarget is already defined by another mixin.\n * @exception {DeveloperError} dropEnabled is already defined by another mixin.\n * @exception {DeveloperError} dropError is already defined by another mixin.\n * @exception {DeveloperError} clearOnDrop is already defined by another mixin.\n *\n * @example\n * // Add basic drag and drop support and pop up an alert window on error.\n * var viewer = new Cesium.Viewer('cesiumContainer');\n * viewer.extend(Cesium.viewerDragDropMixin);\n * viewer.dropError.addEventListener(function(viewerArg, source, error) {\n *     window.alert('Error processing ' + source + ':' + error);\n * });\n */\nfunction viewerDragDropMixin(viewer, options) {\n  //>>includeStart('debug', pragmas.debug);\n  if (!defined(viewer)) {\n    throw new DeveloperError(\"viewer is required.\");\n  }\n  if (viewer.hasOwnProperty(\"dropTarget\")) {\n    throw new DeveloperError(\"dropTarget is already defined by another mixin.\");\n  }\n  if (viewer.hasOwnProperty(\"dropEnabled\")) {\n    throw new DeveloperError(\n      \"dropEnabled is already defined by another mixin.\"\n    );\n  }\n  if (viewer.hasOwnProperty(\"dropError\")) {\n    throw new DeveloperError(\"dropError is already defined by another mixin.\");\n  }\n  if (viewer.hasOwnProperty(\"clearOnDrop\")) {\n    throw new DeveloperError(\n      \"clearOnDrop is already defined by another mixin.\"\n    );\n  }\n  if (viewer.hasOwnProperty(\"flyToOnDrop\")) {\n    throw new DeveloperError(\n      \"flyToOnDrop is already defined by another mixin.\"\n    );\n  }\n  //>>includeEnd('debug');\n\n  options = defaultValue(options, defaultValue.EMPTY_OBJECT);\n\n  //Local variables to be closed over by defineProperties.\n  var dropEnabled = true;\n  var flyToOnDrop = defaultValue(options.flyToOnDrop, true);\n  var dropError = new Event();\n  var clearOnDrop = defaultValue(options.clearOnDrop, true);\n  var dropTarget = defaultValue(options.dropTarget, viewer.container);\n  var clampToGround = defaultValue(options.clampToGround, true);\n  var proxy = options.proxy;\n\n  dropTarget = getElement(dropTarget);\n\n  Object.defineProperties(viewer, {\n    /**\n     * Gets or sets the element to serve as the drop target.\n     * @memberof viewerDragDropMixin.prototype\n     * @type {Element}\n     */\n    dropTarget: {\n      //TODO See https://github.com/CesiumGS/cesium/issues/832\n      get: function () {\n        return dropTarget;\n      },\n      set: function (value) {\n        //>>includeStart('debug', pragmas.debug);\n        if (!defined(value)) {\n          throw new DeveloperError(\"value is required.\");\n        }\n        //>>includeEnd('debug');\n\n        unsubscribe(dropTarget, handleDrop);\n        dropTarget = value;\n        subscribe(dropTarget, handleDrop);\n      },\n    },\n\n    /**\n     * Gets or sets a value indicating if drag and drop support is enabled.\n     * @memberof viewerDragDropMixin.prototype\n     * @type {Element}\n     */\n    dropEnabled: {\n      get: function () {\n        return dropEnabled;\n      },\n      set: function (value) {\n        if (value !== dropEnabled) {\n          if (value) {\n            subscribe(dropTarget, handleDrop);\n          } else {\n            unsubscribe(dropTarget, handleDrop);\n          }\n          dropEnabled = value;\n        }\n      },\n    },\n\n    /**\n     * Gets the event that will be raised when an error is encountered during drop processing.\n     * @memberof viewerDragDropMixin.prototype\n     * @type {Event}\n     */\n    dropError: {\n      get: function () {\n        return dropError;\n      },\n    },\n\n    /**\n     * Gets or sets a value indicating if existing data sources should be cleared before adding the newly dropped sources.\n     * @memberof viewerDragDropMixin.prototype\n     * @type {Boolean}\n     */\n    clearOnDrop: {\n      get: function () {\n        return clearOnDrop;\n      },\n      set: function (value) {\n        clearOnDrop = value;\n      },\n    },\n\n    /**\n     * Gets or sets a value indicating if the camera should fly to the data source after it is loaded.\n     * @memberof viewerDragDropMixin.prototype\n     * @type {Boolean}\n     */\n    flyToOnDrop: {\n      get: function () {\n        return flyToOnDrop;\n      },\n      set: function (value) {\n        flyToOnDrop = value;\n      },\n    },\n\n    /**\n     * Gets or sets the proxy to be used for KML.\n     * @memberof viewerDragDropMixin.prototype\n     * @type {DefaultProxy}\n     */\n    proxy: {\n      get: function () {\n        return proxy;\n      },\n      set: function (value) {\n        proxy = value;\n      },\n    },\n\n    /**\n     * Gets or sets a value indicating if the datasources should be clamped to the ground\n     * @memberof viewerDragDropMixin.prototype\n     * @type {Boolean}\n     */\n    clampToGround: {\n      get: function () {\n        return clampToGround;\n      },\n      set: function (value) {\n        clampToGround = value;\n      },\n    },\n  });\n\n  function handleDrop(event) {\n    stop(event);\n\n    if (clearOnDrop) {\n      viewer.entities.removeAll();\n      viewer.dataSources.removeAll();\n    }\n\n    var files = event.dataTransfer.files;\n    var length = files.length;\n    for (var i = 0; i < length; i++) {\n      var file = files[i];\n      var reader = new FileReader();\n      reader.onload = createOnLoadCallback(viewer, file, proxy, clampToGround);\n      reader.onerror = createDropErrorCallback(viewer, file);\n      reader.readAsText(file);\n    }\n  }\n\n  //Enable drop by default;\n  subscribe(dropTarget, handleDrop);\n\n  //Wrap the destroy function to make sure all events are unsubscribed from\n  viewer.destroy = wrapFunction(viewer, viewer.destroy, function () {\n    viewer.dropEnabled = false;\n  });\n\n  //Specs need access to handleDrop\n  viewer._handleDrop = handleDrop;\n}\n\nfunction stop(event) {\n  event.stopPropagation();\n  event.preventDefault();\n}\n\nfunction unsubscribe(dropTarget, handleDrop) {\n  var currentTarget = dropTarget;\n  if (defined(currentTarget)) {\n    currentTarget.removeEventListener(\"drop\", handleDrop, false);\n    currentTarget.removeEventListener(\"dragenter\", stop, false);\n    currentTarget.removeEventListener(\"dragover\", stop, false);\n    currentTarget.removeEventListener(\"dragexit\", stop, false);\n  }\n}\n\nfunction subscribe(dropTarget, handleDrop) {\n  dropTarget.addEventListener(\"drop\", handleDrop, false);\n  dropTarget.addEventListener(\"dragenter\", stop, false);\n  dropTarget.addEventListener(\"dragover\", stop, false);\n  dropTarget.addEventListener(\"dragexit\", stop, false);\n}\n\nfunction createOnLoadCallback(viewer, file, proxy, clampToGround) {\n  var scene = viewer.scene;\n  return function (evt) {\n    var fileName = file.name;\n    try {\n      var loadPromise;\n\n      if (/\\.czml$/i.test(fileName)) {\n        loadPromise = CzmlDataSource.load(JSON.parse(evt.target.result), {\n          sourceUri: fileName,\n        });\n      } else if (\n        /\\.geojson$/i.test(fileName) ||\n        /\\.json$/i.test(fileName) ||\n        /\\.topojson$/i.test(fileName)\n      ) {\n        loadPromise = GeoJsonDataSource.load(JSON.parse(evt.target.result), {\n          sourceUri: fileName,\n          clampToGround: clampToGround,\n        });\n      } else if (/\\.(kml|kmz)$/i.test(fileName)) {\n        loadPromise = KmlDataSource.load(file, {\n          sourceUri: fileName,\n          proxy: proxy,\n          camera: scene.camera,\n          canvas: scene.canvas,\n          clampToGround: clampToGround,\n        });\n      } else {\n        viewer.dropError.raiseEvent(\n          viewer,\n          fileName,\n          \"Unrecognized file: \" + fileName\n        );\n        return;\n      }\n\n      if (defined(loadPromise)) {\n        viewer.dataSources\n          .add(loadPromise)\n          .then(function (dataSource) {\n            if (viewer.flyToOnDrop) {\n              viewer.flyTo(dataSource);\n            }\n          })\n          .otherwise(function (error) {\n            viewer.dropError.raiseEvent(viewer, fileName, error);\n          });\n      }\n    } catch (error) {\n      viewer.dropError.raiseEvent(viewer, fileName, error);\n    }\n  };\n}\n\nfunction createDropErrorCallback(viewer, file) {\n  return function (evt) {\n    viewer.dropError.raiseEvent(viewer, file.name, evt.target.error);\n  };\n}\nexport default viewerDragDropMixin;\n"]},"metadata":{},"sourceType":"module"}
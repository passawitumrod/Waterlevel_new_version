{"ast":null,"code":"import Check from \"../Core/Check.js\";\nimport clone from \"../Core/clone.js\";\nimport Color from \"../Core/Color.js\";\nimport ComponentDatatype from \"../Core/ComponentDatatype.js\";\nimport createGuid from \"../Core/createGuid.js\";\nimport defaultValue from \"../Core/defaultValue.js\";\nimport defined from \"../Core/defined.js\";\nimport destroyObject from \"../Core/destroyObject.js\";\nimport DeveloperError from \"../Core/DeveloperError.js\";\nimport Geometry from \"../Core/Geometry.js\";\nimport GeometryAttribute from \"../Core/GeometryAttribute.js\";\nimport Matrix4 from \"../Core/Matrix4.js\";\nimport PixelFormat from \"../Core/PixelFormat.js\";\nimport PrimitiveType from \"../Core/PrimitiveType.js\";\nimport RuntimeError from \"../Core/RuntimeError.js\";\nimport WebGLConstants from \"../Core/WebGLConstants.js\";\nimport ViewportQuadVS from \"../Shaders/ViewportQuadVS.js\";\nimport BufferUsage from \"./BufferUsage.js\";\nimport ClearCommand from \"./ClearCommand.js\";\nimport ContextLimits from \"./ContextLimits.js\";\nimport CubeMap from \"./CubeMap.js\";\nimport DrawCommand from \"./DrawCommand.js\";\nimport PassState from \"./PassState.js\";\nimport PixelDatatype from \"./PixelDatatype.js\";\nimport RenderState from \"./RenderState.js\";\nimport ShaderCache from \"./ShaderCache.js\";\nimport ShaderProgram from \"./ShaderProgram.js\";\nimport Texture from \"./Texture.js\";\nimport TextureCache from \"./TextureCache.js\";\nimport UniformState from \"./UniformState.js\";\nimport VertexArray from \"./VertexArray.js\";\n\nfunction errorToString(gl, error) {\n  var message = \"WebGL Error:  \";\n\n  switch (error) {\n    case gl.INVALID_ENUM:\n      message += \"INVALID_ENUM\";\n      break;\n\n    case gl.INVALID_VALUE:\n      message += \"INVALID_VALUE\";\n      break;\n\n    case gl.INVALID_OPERATION:\n      message += \"INVALID_OPERATION\";\n      break;\n\n    case gl.OUT_OF_MEMORY:\n      message += \"OUT_OF_MEMORY\";\n      break;\n\n    case gl.CONTEXT_LOST_WEBGL:\n      message += \"CONTEXT_LOST_WEBGL lost\";\n      break;\n\n    default:\n      message += \"Unknown (\" + error + \")\";\n  }\n\n  return message;\n}\n\nfunction createErrorMessage(gl, glFunc, glFuncArguments, error) {\n  var message = errorToString(gl, error) + \": \" + glFunc.name + \"(\";\n\n  for (var i = 0; i < glFuncArguments.length; ++i) {\n    if (i !== 0) {\n      message += \", \";\n    }\n\n    message += glFuncArguments[i];\n  }\n\n  message += \");\";\n  return message;\n}\n\nfunction throwOnError(gl, glFunc, glFuncArguments) {\n  var error = gl.getError();\n\n  if (error !== gl.NO_ERROR) {\n    throw new RuntimeError(createErrorMessage(gl, glFunc, glFuncArguments, error));\n  }\n}\n\nfunction makeGetterSetter(gl, propertyName, logFunction) {\n  return {\n    get: function () {\n      var value = gl[propertyName];\n      logFunction(gl, \"get: \" + propertyName, value);\n      return gl[propertyName];\n    },\n    set: function (value) {\n      gl[propertyName] = value;\n      logFunction(gl, \"set: \" + propertyName, value);\n    }\n  };\n}\n\nfunction wrapGL(gl, logFunction) {\n  if (!defined(logFunction)) {\n    return gl;\n  }\n\n  function wrapFunction(property) {\n    return function () {\n      var result = property.apply(gl, arguments);\n      logFunction(gl, property, arguments);\n      return result;\n    };\n  }\n\n  var glWrapper = {}; // JavaScript linters normally demand that a for..in loop must directly contain an if,\n  // but in our loop below, we actually intend to iterate all properties, including\n  // those in the prototype.\n\n  /*eslint-disable guard-for-in*/\n\n  for (var propertyName in gl) {\n    var property = gl[propertyName]; // wrap any functions we encounter, otherwise just copy the property to the wrapper.\n\n    if (property instanceof Function) {\n      glWrapper[propertyName] = wrapFunction(property);\n    } else {\n      Object.defineProperty(glWrapper, propertyName, makeGetterSetter(gl, propertyName, logFunction));\n    }\n  }\n  /*eslint-enable guard-for-in*/\n\n\n  return glWrapper;\n}\n\nfunction getExtension(gl, names) {\n  var length = names.length;\n\n  for (var i = 0; i < length; ++i) {\n    var extension = gl.getExtension(names[i]);\n\n    if (extension) {\n      return extension;\n    }\n  }\n\n  return undefined;\n}\n/**\n * @private\n * @constructor\n */\n\n\nfunction Context(canvas, options) {\n  // this check must use typeof, not defined, because defined doesn't work with undeclared variables.\n  if (typeof WebGLRenderingContext === \"undefined\") {\n    throw new RuntimeError(\"The browser does not support WebGL.  Visit http://get.webgl.org.\");\n  } //>>includeStart('debug', pragmas.debug);\n\n\n  Check.defined(\"canvas\", canvas); //>>includeEnd('debug');\n\n  this._canvas = canvas;\n  options = clone(options, true); // Don't use defaultValue.EMPTY_OBJECT here because the options object gets modified in the next line.\n\n  options = defaultValue(options, {});\n  options.allowTextureFilterAnisotropic = defaultValue(options.allowTextureFilterAnisotropic, true);\n  var webglOptions = defaultValue(options.webgl, {}); // Override select WebGL defaults\n\n  webglOptions.alpha = defaultValue(webglOptions.alpha, false); // WebGL default is true\n\n  webglOptions.stencil = defaultValue(webglOptions.stencil, true); // WebGL default is false\n\n  var requestWebgl2 = defaultValue(options.requestWebgl2, false) && typeof WebGL2RenderingContext !== \"undefined\";\n  var webgl2 = false;\n  var glContext;\n  var getWebGLStub = options.getWebGLStub;\n\n  if (!defined(getWebGLStub)) {\n    if (requestWebgl2) {\n      glContext = canvas.getContext(\"webgl2\", webglOptions) || canvas.getContext(\"experimental-webgl2\", webglOptions) || undefined;\n\n      if (defined(glContext)) {\n        webgl2 = true;\n      }\n    }\n\n    if (!defined(glContext)) {\n      glContext = canvas.getContext(\"webgl\", webglOptions) || canvas.getContext(\"experimental-webgl\", webglOptions) || undefined;\n    }\n\n    if (!defined(glContext)) {\n      throw new RuntimeError(\"The browser supports WebGL, but initialization failed.\");\n    }\n  } else {\n    // Use WebGL stub when requested for unit tests\n    glContext = getWebGLStub(canvas, webglOptions);\n  }\n\n  this._originalGLContext = glContext;\n  this._gl = glContext;\n  this._webgl2 = webgl2;\n  this._id = createGuid(); // Validation and logging disabled by default for speed.\n\n  this.validateFramebuffer = false;\n  this.validateShaderProgram = false;\n  this.logShaderCompilation = false;\n  this._throwOnWebGLError = false;\n  this._shaderCache = new ShaderCache(this);\n  this._textureCache = new TextureCache();\n  var gl = glContext;\n  this._stencilBits = gl.getParameter(gl.STENCIL_BITS);\n  ContextLimits._maximumCombinedTextureImageUnits = gl.getParameter(gl.MAX_COMBINED_TEXTURE_IMAGE_UNITS); // min: 8\n\n  ContextLimits._maximumCubeMapSize = gl.getParameter(gl.MAX_CUBE_MAP_TEXTURE_SIZE); // min: 16\n\n  ContextLimits._maximumFragmentUniformVectors = gl.getParameter(gl.MAX_FRAGMENT_UNIFORM_VECTORS); // min: 16\n\n  ContextLimits._maximumTextureImageUnits = gl.getParameter(gl.MAX_TEXTURE_IMAGE_UNITS); // min: 8\n\n  ContextLimits._maximumRenderbufferSize = gl.getParameter(gl.MAX_RENDERBUFFER_SIZE); // min: 1\n\n  ContextLimits._maximumTextureSize = gl.getParameter(gl.MAX_TEXTURE_SIZE); // min: 64\n\n  ContextLimits._maximumVaryingVectors = gl.getParameter(gl.MAX_VARYING_VECTORS); // min: 8\n\n  ContextLimits._maximumVertexAttributes = gl.getParameter(gl.MAX_VERTEX_ATTRIBS); // min: 8\n\n  ContextLimits._maximumVertexTextureImageUnits = gl.getParameter(gl.MAX_VERTEX_TEXTURE_IMAGE_UNITS); // min: 0\n\n  ContextLimits._maximumVertexUniformVectors = gl.getParameter(gl.MAX_VERTEX_UNIFORM_VECTORS); // min: 128\n\n  var aliasedLineWidthRange = gl.getParameter(gl.ALIASED_LINE_WIDTH_RANGE); // must include 1\n\n  ContextLimits._minimumAliasedLineWidth = aliasedLineWidthRange[0];\n  ContextLimits._maximumAliasedLineWidth = aliasedLineWidthRange[1];\n  var aliasedPointSizeRange = gl.getParameter(gl.ALIASED_POINT_SIZE_RANGE); // must include 1\n\n  ContextLimits._minimumAliasedPointSize = aliasedPointSizeRange[0];\n  ContextLimits._maximumAliasedPointSize = aliasedPointSizeRange[1];\n  var maximumViewportDimensions = gl.getParameter(gl.MAX_VIEWPORT_DIMS);\n  ContextLimits._maximumViewportWidth = maximumViewportDimensions[0];\n  ContextLimits._maximumViewportHeight = maximumViewportDimensions[1];\n  var highpFloat = gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.HIGH_FLOAT);\n  ContextLimits._highpFloatSupported = highpFloat.precision !== 0;\n  var highpInt = gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.HIGH_INT);\n  ContextLimits._highpIntSupported = highpInt.rangeMax !== 0;\n  this._antialias = gl.getContextAttributes().antialias; // Query and initialize extensions\n\n  this._standardDerivatives = !!getExtension(gl, [\"OES_standard_derivatives\"]);\n  this._blendMinmax = !!getExtension(gl, [\"EXT_blend_minmax\"]);\n  this._elementIndexUint = !!getExtension(gl, [\"OES_element_index_uint\"]);\n  this._depthTexture = !!getExtension(gl, [\"WEBGL_depth_texture\", \"WEBKIT_WEBGL_depth_texture\"]);\n  this._fragDepth = !!getExtension(gl, [\"EXT_frag_depth\"]);\n  this._debugShaders = getExtension(gl, [\"WEBGL_debug_shaders\"]);\n  this._textureFloat = !!getExtension(gl, [\"OES_texture_float\"]);\n  this._textureHalfFloat = !!getExtension(gl, [\"OES_texture_half_float\"]);\n  this._textureFloatLinear = !!getExtension(gl, [\"OES_texture_float_linear\"]);\n  this._textureHalfFloatLinear = !!getExtension(gl, [\"OES_texture_half_float_linear\"]);\n  this._colorBufferFloat = !!getExtension(gl, [\"EXT_color_buffer_float\", \"WEBGL_color_buffer_float\"]);\n  this._floatBlend = !!getExtension(gl, [\"EXT_float_blend\"]);\n  this._colorBufferHalfFloat = !!getExtension(gl, [\"EXT_color_buffer_half_float\"]);\n  this._s3tc = !!getExtension(gl, [\"WEBGL_compressed_texture_s3tc\", \"MOZ_WEBGL_compressed_texture_s3tc\", \"WEBKIT_WEBGL_compressed_texture_s3tc\"]);\n  this._pvrtc = !!getExtension(gl, [\"WEBGL_compressed_texture_pvrtc\", \"WEBKIT_WEBGL_compressed_texture_pvrtc\"]);\n  this._etc1 = !!getExtension(gl, [\"WEBGL_compressed_texture_etc1\"]);\n  var textureFilterAnisotropic = options.allowTextureFilterAnisotropic ? getExtension(gl, [\"EXT_texture_filter_anisotropic\", \"WEBKIT_EXT_texture_filter_anisotropic\"]) : undefined;\n  this._textureFilterAnisotropic = textureFilterAnisotropic;\n  ContextLimits._maximumTextureFilterAnisotropy = defined(textureFilterAnisotropic) ? gl.getParameter(textureFilterAnisotropic.MAX_TEXTURE_MAX_ANISOTROPY_EXT) : 1.0;\n  var glCreateVertexArray;\n  var glBindVertexArray;\n  var glDeleteVertexArray;\n  var glDrawElementsInstanced;\n  var glDrawArraysInstanced;\n  var glVertexAttribDivisor;\n  var glDrawBuffers;\n  var vertexArrayObject;\n  var instancedArrays;\n  var drawBuffers;\n\n  if (webgl2) {\n    var that = this;\n\n    glCreateVertexArray = function () {\n      return that._gl.createVertexArray();\n    };\n\n    glBindVertexArray = function (vao) {\n      that._gl.bindVertexArray(vao);\n    };\n\n    glDeleteVertexArray = function (vao) {\n      that._gl.deleteVertexArray(vao);\n    };\n\n    glDrawElementsInstanced = function (mode, count, type, offset, instanceCount) {\n      gl.drawElementsInstanced(mode, count, type, offset, instanceCount);\n    };\n\n    glDrawArraysInstanced = function (mode, first, count, instanceCount) {\n      gl.drawArraysInstanced(mode, first, count, instanceCount);\n    };\n\n    glVertexAttribDivisor = function (index, divisor) {\n      gl.vertexAttribDivisor(index, divisor);\n    };\n\n    glDrawBuffers = function (buffers) {\n      gl.drawBuffers(buffers);\n    };\n  } else {\n    vertexArrayObject = getExtension(gl, [\"OES_vertex_array_object\"]);\n\n    if (defined(vertexArrayObject)) {\n      glCreateVertexArray = function () {\n        return vertexArrayObject.createVertexArrayOES();\n      };\n\n      glBindVertexArray = function (vertexArray) {\n        vertexArrayObject.bindVertexArrayOES(vertexArray);\n      };\n\n      glDeleteVertexArray = function (vertexArray) {\n        vertexArrayObject.deleteVertexArrayOES(vertexArray);\n      };\n    }\n\n    instancedArrays = getExtension(gl, [\"ANGLE_instanced_arrays\"]);\n\n    if (defined(instancedArrays)) {\n      glDrawElementsInstanced = function (mode, count, type, offset, instanceCount) {\n        instancedArrays.drawElementsInstancedANGLE(mode, count, type, offset, instanceCount);\n      };\n\n      glDrawArraysInstanced = function (mode, first, count, instanceCount) {\n        instancedArrays.drawArraysInstancedANGLE(mode, first, count, instanceCount);\n      };\n\n      glVertexAttribDivisor = function (index, divisor) {\n        instancedArrays.vertexAttribDivisorANGLE(index, divisor);\n      };\n    }\n\n    drawBuffers = getExtension(gl, [\"WEBGL_draw_buffers\"]);\n\n    if (defined(drawBuffers)) {\n      glDrawBuffers = function (buffers) {\n        drawBuffers.drawBuffersWEBGL(buffers);\n      };\n    }\n  }\n\n  this.glCreateVertexArray = glCreateVertexArray;\n  this.glBindVertexArray = glBindVertexArray;\n  this.glDeleteVertexArray = glDeleteVertexArray;\n  this.glDrawElementsInstanced = glDrawElementsInstanced;\n  this.glDrawArraysInstanced = glDrawArraysInstanced;\n  this.glVertexAttribDivisor = glVertexAttribDivisor;\n  this.glDrawBuffers = glDrawBuffers;\n  this._vertexArrayObject = !!vertexArrayObject;\n  this._instancedArrays = !!instancedArrays;\n  this._drawBuffers = !!drawBuffers;\n  ContextLimits._maximumDrawBuffers = this.drawBuffers ? gl.getParameter(WebGLConstants.MAX_DRAW_BUFFERS) : 1;\n  ContextLimits._maximumColorAttachments = this.drawBuffers ? gl.getParameter(WebGLConstants.MAX_COLOR_ATTACHMENTS) : 1;\n  this._clearColor = new Color(0.0, 0.0, 0.0, 0.0);\n  this._clearDepth = 1.0;\n  this._clearStencil = 0;\n  var us = new UniformState();\n  var ps = new PassState(this);\n  var rs = RenderState.fromCache();\n  this._defaultPassState = ps;\n  this._defaultRenderState = rs;\n  this._defaultTexture = undefined;\n  this._defaultCubeMap = undefined;\n  this._us = us;\n  this._currentRenderState = rs;\n  this._currentPassState = ps;\n  this._currentFramebuffer = undefined;\n  this._maxFrameTextureUnitIndex = 0; // Vertex attribute divisor state cache. Workaround for ANGLE (also look at VertexArray.setVertexAttribDivisor)\n\n  this._vertexAttribDivisors = [];\n  this._previousDrawInstanced = false;\n\n  for (var i = 0; i < ContextLimits._maximumVertexAttributes; i++) {\n    this._vertexAttribDivisors.push(0);\n  }\n\n  this._pickObjects = {};\n  this._nextPickColor = new Uint32Array(1);\n  /**\n   * @example\n   * {\n   *   webgl : {\n   *     alpha : false,\n   *     depth : true,\n   *     stencil : false,\n   *     antialias : true,\n   *     premultipliedAlpha : true,\n   *     preserveDrawingBuffer : false,\n   *     failIfMajorPerformanceCaveat : true\n   *   },\n   *   allowTextureFilterAnisotropic : true\n   * }\n   */\n\n  this.options = options;\n  /**\n   * A cache of objects tied to this context.  Just before the Context is destroyed,\n   * <code>destroy</code> will be invoked on each object in this object literal that has\n   * such a method.  This is useful for caching any objects that might otherwise\n   * be stored globally, except they're tied to a particular context, and to manage\n   * their lifetime.\n   *\n   * @type {Object}\n   */\n\n  this.cache = {};\n  RenderState.apply(gl, rs, ps);\n}\n\nvar defaultFramebufferMarker = {};\nObject.defineProperties(Context.prototype, {\n  id: {\n    get: function () {\n      return this._id;\n    }\n  },\n  webgl2: {\n    get: function () {\n      return this._webgl2;\n    }\n  },\n  canvas: {\n    get: function () {\n      return this._canvas;\n    }\n  },\n  shaderCache: {\n    get: function () {\n      return this._shaderCache;\n    }\n  },\n  textureCache: {\n    get: function () {\n      return this._textureCache;\n    }\n  },\n  uniformState: {\n    get: function () {\n      return this._us;\n    }\n  },\n\n  /**\n   * The number of stencil bits per pixel in the default bound framebuffer.  The minimum is eight bits.\n   * @memberof Context.prototype\n   * @type {Number}\n   * @see {@link https://www.khronos.org/opengles/sdk/docs/man/xhtml/glGet.xml|glGet} with <code>STENCIL_BITS</code>.\n   */\n  stencilBits: {\n    get: function () {\n      return this._stencilBits;\n    }\n  },\n\n  /**\n   * <code>true</code> if the WebGL context supports stencil buffers.\n   * Stencil buffers are not supported by all systems.\n   * @memberof Context.prototype\n   * @type {Boolean}\n   */\n  stencilBuffer: {\n    get: function () {\n      return this._stencilBits >= 8;\n    }\n  },\n\n  /**\n   * <code>true</code> if the WebGL context supports antialiasing.  By default\n   * antialiasing is requested, but it is not supported by all systems.\n   * @memberof Context.prototype\n   * @type {Boolean}\n   */\n  antialias: {\n    get: function () {\n      return this._antialias;\n    }\n  },\n\n  /**\n   * <code>true</code> if the OES_standard_derivatives extension is supported.  This\n   * extension provides access to <code>dFdx</code>, <code>dFdy</code>, and <code>fwidth</code>\n   * functions from GLSL.  A shader using these functions still needs to explicitly enable the\n   * extension with <code>#extension GL_OES_standard_derivatives : enable</code>.\n   * @memberof Context.prototype\n   * @type {Boolean}\n   * @see {@link http://www.khronos.org/registry/gles/extensions/OES/OES_standard_derivatives.txt|OES_standard_derivatives}\n   */\n  standardDerivatives: {\n    get: function () {\n      return this._standardDerivatives || this._webgl2;\n    }\n  },\n\n  /**\n   * <code>true</code> if the EXT_float_blend extension is supported. This\n   * extension enables blending with 32-bit float values.\n   * @memberof Context.prototype\n   * @type {Boolean}\n   * @see {@link https://www.khronos.org/registry/webgl/extensions/EXT_float_blend/}\n   */\n  floatBlend: {\n    get: function () {\n      return this._floatBlend;\n    }\n  },\n\n  /**\n   * <code>true</code> if the EXT_blend_minmax extension is supported.  This\n   * extension extends blending capabilities by adding two new blend equations:\n   * the minimum or maximum color components of the source and destination colors.\n   * @memberof Context.prototype\n   * @type {Boolean}\n   * @see {@link https://www.khronos.org/registry/webgl/extensions/EXT_blend_minmax/}\n   */\n  blendMinmax: {\n    get: function () {\n      return this._blendMinmax || this._webgl2;\n    }\n  },\n\n  /**\n   * <code>true</code> if the OES_element_index_uint extension is supported.  This\n   * extension allows the use of unsigned int indices, which can improve performance by\n   * eliminating batch breaking caused by unsigned short indices.\n   * @memberof Context.prototype\n   * @type {Boolean}\n   * @see {@link http://www.khronos.org/registry/webgl/extensions/OES_element_index_uint/|OES_element_index_uint}\n   */\n  elementIndexUint: {\n    get: function () {\n      return this._elementIndexUint || this._webgl2;\n    }\n  },\n\n  /**\n   * <code>true</code> if WEBGL_depth_texture is supported.  This extension provides\n   * access to depth textures that, for example, can be attached to framebuffers for shadow mapping.\n   * @memberof Context.prototype\n   * @type {Boolean}\n   * @see {@link http://www.khronos.org/registry/webgl/extensions/WEBGL_depth_texture/|WEBGL_depth_texture}\n   */\n  depthTexture: {\n    get: function () {\n      return this._depthTexture || this._webgl2;\n    }\n  },\n\n  /**\n   * <code>true</code> if OES_texture_float is supported. This extension provides\n   * access to floating point textures that, for example, can be attached to framebuffers for high dynamic range.\n   * @memberof Context.prototype\n   * @type {Boolean}\n   * @see {@link https://www.khronos.org/registry/webgl/extensions/OES_texture_float/}\n   */\n  floatingPointTexture: {\n    get: function () {\n      return this._webgl2 || this._textureFloat;\n    }\n  },\n\n  /**\n   * <code>true</code> if OES_texture_half_float is supported. This extension provides\n   * access to floating point textures that, for example, can be attached to framebuffers for high dynamic range.\n   * @memberof Context.prototype\n   * @type {Boolean}\n   * @see {@link https://www.khronos.org/registry/webgl/extensions/OES_texture_float/}\n   */\n  halfFloatingPointTexture: {\n    get: function () {\n      return this._webgl2 || this._textureHalfFloat;\n    }\n  },\n\n  /**\n   * <code>true</code> if OES_texture_float_linear is supported. This extension provides\n   * access to linear sampling methods for minification and magnification filters of floating-point textures.\n   * @memberof Context.prototype\n   * @type {Boolean}\n   * @see {@link https://www.khronos.org/registry/webgl/extensions/OES_texture_float_linear/}\n   */\n  textureFloatLinear: {\n    get: function () {\n      return this._textureFloatLinear;\n    }\n  },\n\n  /**\n   * <code>true</code> if OES_texture_half_float_linear is supported. This extension provides\n   * access to linear sampling methods for minification and magnification filters of half floating-point textures.\n   * @memberof Context.prototype\n   * @type {Boolean}\n   * @see {@link https://www.khronos.org/registry/webgl/extensions/OES_texture_half_float_linear/}\n   */\n  textureHalfFloatLinear: {\n    get: function () {\n      return this._webgl2 && this._textureFloatLinear || !this._webgl2 && this._textureHalfFloatLinear;\n    }\n  },\n\n  /**\n   * <code>true</code> if EXT_texture_filter_anisotropic is supported. This extension provides\n   * access to anisotropic filtering for textured surfaces at an oblique angle from the viewer.\n   * @memberof Context.prototype\n   * @type {Boolean}\n   * @see {@link https://www.khronos.org/registry/webgl/extensions/EXT_texture_filter_anisotropic/}\n   */\n  textureFilterAnisotropic: {\n    get: function () {\n      return !!this._textureFilterAnisotropic;\n    }\n  },\n\n  /**\n   * <code>true</code> if WEBGL_texture_compression_s3tc is supported.  This extension provides\n   * access to DXT compressed textures.\n   * @memberof Context.prototype\n   * @type {Boolean}\n   * @see {@link https://www.khronos.org/registry/webgl/extensions/WEBGL_compressed_texture_s3tc/}\n   */\n  s3tc: {\n    get: function () {\n      return this._s3tc;\n    }\n  },\n\n  /**\n   * <code>true</code> if WEBGL_texture_compression_pvrtc is supported.  This extension provides\n   * access to PVR compressed textures.\n   * @memberof Context.prototype\n   * @type {Boolean}\n   * @see {@link https://www.khronos.org/registry/webgl/extensions/WEBGL_compressed_texture_pvrtc/}\n   */\n  pvrtc: {\n    get: function () {\n      return this._pvrtc;\n    }\n  },\n\n  /**\n   * <code>true</code> if WEBGL_texture_compression_etc1 is supported.  This extension provides\n   * access to ETC1 compressed textures.\n   * @memberof Context.prototype\n   * @type {Boolean}\n   * @see {@link https://www.khronos.org/registry/webgl/extensions/WEBGL_compressed_texture_etc1/}\n   */\n  etc1: {\n    get: function () {\n      return this._etc1;\n    }\n  },\n\n  /**\n   * <code>true</code> if the OES_vertex_array_object extension is supported.  This\n   * extension can improve performance by reducing the overhead of switching vertex arrays.\n   * When enabled, this extension is automatically used by {@link VertexArray}.\n   * @memberof Context.prototype\n   * @type {Boolean}\n   * @see {@link http://www.khronos.org/registry/webgl/extensions/OES_vertex_array_object/|OES_vertex_array_object}\n   */\n  vertexArrayObject: {\n    get: function () {\n      return this._vertexArrayObject || this._webgl2;\n    }\n  },\n\n  /**\n   * <code>true</code> if the EXT_frag_depth extension is supported.  This\n   * extension provides access to the <code>gl_FragDepthEXT</code> built-in output variable\n   * from GLSL fragment shaders.  A shader using these functions still needs to explicitly enable the\n   * extension with <code>#extension GL_EXT_frag_depth : enable</code>.\n   * @memberof Context.prototype\n   * @type {Boolean}\n   * @see {@link http://www.khronos.org/registry/webgl/extensions/EXT_frag_depth/|EXT_frag_depth}\n   */\n  fragmentDepth: {\n    get: function () {\n      return this._fragDepth || this._webgl2;\n    }\n  },\n\n  /**\n   * <code>true</code> if the ANGLE_instanced_arrays extension is supported.  This\n   * extension provides access to instanced rendering.\n   * @memberof Context.prototype\n   * @type {Boolean}\n   * @see {@link https://www.khronos.org/registry/webgl/extensions/ANGLE_instanced_arrays}\n   */\n  instancedArrays: {\n    get: function () {\n      return this._instancedArrays || this._webgl2;\n    }\n  },\n\n  /**\n   * <code>true</code> if the EXT_color_buffer_float extension is supported.  This\n   * extension makes the gl.RGBA32F format color renderable.\n   * @memberof Context.prototype\n   * @type {Boolean}\n   * @see {@link https://www.khronos.org/registry/webgl/extensions/WEBGL_color_buffer_float/}\n   * @see {@link https://www.khronos.org/registry/webgl/extensions/EXT_color_buffer_float/}\n   */\n  colorBufferFloat: {\n    get: function () {\n      return this._colorBufferFloat;\n    }\n  },\n\n  /**\n   * <code>true</code> if the EXT_color_buffer_half_float extension is supported.  This\n   * extension makes the format gl.RGBA16F format color renderable.\n   * @memberof Context.prototype\n   * @type {Boolean}\n   * @see {@link https://www.khronos.org/registry/webgl/extensions/EXT_color_buffer_half_float/}\n   * @see {@link https://www.khronos.org/registry/webgl/extensions/EXT_color_buffer_float/}\n   */\n  colorBufferHalfFloat: {\n    get: function () {\n      return this._webgl2 && this._colorBufferFloat || !this._webgl2 && this._colorBufferHalfFloat;\n    }\n  },\n\n  /**\n   * <code>true</code> if the WEBGL_draw_buffers extension is supported. This\n   * extensions provides support for multiple render targets. The framebuffer object can have mutiple\n   * color attachments and the GLSL fragment shader can write to the built-in output array <code>gl_FragData</code>.\n   * A shader using this feature needs to explicitly enable the extension with\n   * <code>#extension GL_EXT_draw_buffers : enable</code>.\n   * @memberof Context.prototype\n   * @type {Boolean}\n   * @see {@link http://www.khronos.org/registry/webgl/extensions/WEBGL_draw_buffers/|WEBGL_draw_buffers}\n   */\n  drawBuffers: {\n    get: function () {\n      return this._drawBuffers || this._webgl2;\n    }\n  },\n  debugShaders: {\n    get: function () {\n      return this._debugShaders;\n    }\n  },\n  throwOnWebGLError: {\n    get: function () {\n      return this._throwOnWebGLError;\n    },\n    set: function (value) {\n      this._throwOnWebGLError = value;\n      this._gl = wrapGL(this._originalGLContext, value ? throwOnError : undefined);\n    }\n  },\n\n  /**\n   * A 1x1 RGBA texture initialized to [255, 255, 255, 255].  This can\n   * be used as a placeholder texture while other textures are downloaded.\n   * @memberof Context.prototype\n   * @type {Texture}\n   */\n  defaultTexture: {\n    get: function () {\n      if (this._defaultTexture === undefined) {\n        this._defaultTexture = new Texture({\n          context: this,\n          source: {\n            width: 1,\n            height: 1,\n            arrayBufferView: new Uint8Array([255, 255, 255, 255])\n          },\n          flipY: false\n        });\n      }\n\n      return this._defaultTexture;\n    }\n  },\n\n  /**\n   * A cube map, where each face is a 1x1 RGBA texture initialized to\n   * [255, 255, 255, 255].  This can be used as a placeholder cube map while\n   * other cube maps are downloaded.\n   * @memberof Context.prototype\n   * @type {CubeMap}\n   */\n  defaultCubeMap: {\n    get: function () {\n      if (this._defaultCubeMap === undefined) {\n        var face = {\n          width: 1,\n          height: 1,\n          arrayBufferView: new Uint8Array([255, 255, 255, 255])\n        };\n        this._defaultCubeMap = new CubeMap({\n          context: this,\n          source: {\n            positiveX: face,\n            negativeX: face,\n            positiveY: face,\n            negativeY: face,\n            positiveZ: face,\n            negativeZ: face\n          },\n          flipY: false\n        });\n      }\n\n      return this._defaultCubeMap;\n    }\n  },\n\n  /**\n   * The drawingBufferHeight of the underlying GL context.\n   * @memberof Context.prototype\n   * @type {Number}\n   * @see {@link https://www.khronos.org/registry/webgl/specs/1.0/#DOM-WebGLRenderingContext-drawingBufferHeight|drawingBufferHeight}\n   */\n  drawingBufferHeight: {\n    get: function () {\n      return this._gl.drawingBufferHeight;\n    }\n  },\n\n  /**\n   * The drawingBufferWidth of the underlying GL context.\n   * @memberof Context.prototype\n   * @type {Number}\n   * @see {@link https://www.khronos.org/registry/webgl/specs/1.0/#DOM-WebGLRenderingContext-drawingBufferWidth|drawingBufferWidth}\n   */\n  drawingBufferWidth: {\n    get: function () {\n      return this._gl.drawingBufferWidth;\n    }\n  },\n\n  /**\n   * Gets an object representing the currently bound framebuffer.  While this instance is not an actual\n   * {@link Framebuffer}, it is used to represent the default framebuffer in calls to\n   * {@link Texture.fromFramebuffer}.\n   * @memberof Context.prototype\n   * @type {Object}\n   */\n  defaultFramebuffer: {\n    get: function () {\n      return defaultFramebufferMarker;\n    }\n  }\n});\n/**\n * Validates a framebuffer.\n * Available in debug builds only.\n * @private\n */\n\nfunction validateFramebuffer(context) {\n  //>>includeStart('debug', pragmas.debug);\n  if (context.validateFramebuffer) {\n    var gl = context._gl;\n    var status = gl.checkFramebufferStatus(gl.FRAMEBUFFER);\n\n    if (status !== gl.FRAMEBUFFER_COMPLETE) {\n      var message;\n\n      switch (status) {\n        case gl.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:\n          message = \"Framebuffer is not complete.  Incomplete attachment: at least one attachment point with a renderbuffer or texture attached has its attached object no longer in existence or has an attached image with a width or height of zero, or the color attachment point has a non-color-renderable image attached, or the depth attachment point has a non-depth-renderable image attached, or the stencil attachment point has a non-stencil-renderable image attached.  Color-renderable formats include GL_RGBA4, GL_RGB5_A1, and GL_RGB565. GL_DEPTH_COMPONENT16 is the only depth-renderable format. GL_STENCIL_INDEX8 is the only stencil-renderable format.\";\n          break;\n\n        case gl.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:\n          message = \"Framebuffer is not complete.  Incomplete dimensions: not all attached images have the same width and height.\";\n          break;\n\n        case gl.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:\n          message = \"Framebuffer is not complete.  Missing attachment: no images are attached to the framebuffer.\";\n          break;\n\n        case gl.FRAMEBUFFER_UNSUPPORTED:\n          message = \"Framebuffer is not complete.  Unsupported: the combination of internal formats of the attached images violates an implementation-dependent set of restrictions.\";\n          break;\n      }\n\n      throw new DeveloperError(message);\n    }\n  } //>>includeEnd('debug');\n\n}\n\nfunction applyRenderState(context, renderState, passState, clear) {\n  var previousRenderState = context._currentRenderState;\n  var previousPassState = context._currentPassState;\n  context._currentRenderState = renderState;\n  context._currentPassState = passState;\n  RenderState.partialApply(context._gl, previousRenderState, renderState, previousPassState, passState, clear);\n}\n\nvar scratchBackBufferArray; // this check must use typeof, not defined, because defined doesn't work with undeclared variables.\n\nif (typeof WebGLRenderingContext !== \"undefined\") {\n  scratchBackBufferArray = [WebGLConstants.BACK];\n}\n\nfunction bindFramebuffer(context, framebuffer) {\n  if (framebuffer !== context._currentFramebuffer) {\n    context._currentFramebuffer = framebuffer;\n    var buffers = scratchBackBufferArray;\n\n    if (defined(framebuffer)) {\n      framebuffer._bind();\n\n      validateFramebuffer(context); // TODO: Need a way for a command to give what draw buffers are active.\n\n      buffers = framebuffer._getActiveColorAttachments();\n    } else {\n      var gl = context._gl;\n      gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n    }\n\n    if (context.drawBuffers) {\n      context.glDrawBuffers(buffers);\n    }\n  }\n}\n\nvar defaultClearCommand = new ClearCommand();\n\nContext.prototype.clear = function (clearCommand, passState) {\n  clearCommand = defaultValue(clearCommand, defaultClearCommand);\n  passState = defaultValue(passState, this._defaultPassState);\n  var gl = this._gl;\n  var bitmask = 0;\n  var c = clearCommand.color;\n  var d = clearCommand.depth;\n  var s = clearCommand.stencil;\n\n  if (defined(c)) {\n    if (!Color.equals(this._clearColor, c)) {\n      Color.clone(c, this._clearColor);\n      gl.clearColor(c.red, c.green, c.blue, c.alpha);\n    }\n\n    bitmask |= gl.COLOR_BUFFER_BIT;\n  }\n\n  if (defined(d)) {\n    if (d !== this._clearDepth) {\n      this._clearDepth = d;\n      gl.clearDepth(d);\n    }\n\n    bitmask |= gl.DEPTH_BUFFER_BIT;\n  }\n\n  if (defined(s)) {\n    if (s !== this._clearStencil) {\n      this._clearStencil = s;\n      gl.clearStencil(s);\n    }\n\n    bitmask |= gl.STENCIL_BUFFER_BIT;\n  }\n\n  var rs = defaultValue(clearCommand.renderState, this._defaultRenderState);\n  applyRenderState(this, rs, passState, true); // The command's framebuffer takes presidence over the pass' framebuffer, e.g., for off-screen rendering.\n\n  var framebuffer = defaultValue(clearCommand.framebuffer, passState.framebuffer);\n  bindFramebuffer(this, framebuffer);\n  gl.clear(bitmask);\n};\n\nfunction beginDraw(context, framebuffer, passState, shaderProgram, renderState) {\n  //>>includeStart('debug', pragmas.debug);\n  if (defined(framebuffer) && renderState.depthTest) {\n    if (renderState.depthTest.enabled && !framebuffer.hasDepthAttachment) {\n      throw new DeveloperError(\"The depth test can not be enabled (drawCommand.renderState.depthTest.enabled) because the framebuffer (drawCommand.framebuffer) does not have a depth or depth-stencil renderbuffer.\");\n    }\n  } //>>includeEnd('debug');\n\n\n  bindFramebuffer(context, framebuffer);\n  applyRenderState(context, renderState, passState, false);\n\n  shaderProgram._bind();\n\n  context._maxFrameTextureUnitIndex = Math.max(context._maxFrameTextureUnitIndex, shaderProgram.maximumTextureUnitIndex);\n}\n\nfunction continueDraw(context, drawCommand, shaderProgram, uniformMap) {\n  var primitiveType = drawCommand._primitiveType;\n  var va = drawCommand._vertexArray;\n  var offset = drawCommand._offset;\n  var count = drawCommand._count;\n  var instanceCount = drawCommand.instanceCount; //>>includeStart('debug', pragmas.debug);\n\n  if (!PrimitiveType.validate(primitiveType)) {\n    throw new DeveloperError(\"drawCommand.primitiveType is required and must be valid.\");\n  }\n\n  Check.defined(\"drawCommand.vertexArray\", va);\n  Check.typeOf.number.greaterThanOrEquals(\"drawCommand.offset\", offset, 0);\n\n  if (defined(count)) {\n    Check.typeOf.number.greaterThanOrEquals(\"drawCommand.count\", count, 0);\n  }\n\n  Check.typeOf.number.greaterThanOrEquals(\"drawCommand.instanceCount\", instanceCount, 0);\n\n  if (instanceCount > 0 && !context.instancedArrays) {\n    throw new DeveloperError(\"Instanced arrays extension is not supported\");\n  } //>>includeEnd('debug');\n\n\n  context._us.model = defaultValue(drawCommand._modelMatrix, Matrix4.IDENTITY);\n\n  shaderProgram._setUniforms(uniformMap, context._us, context.validateShaderProgram);\n\n  va._bind();\n\n  var indexBuffer = va.indexBuffer;\n\n  if (defined(indexBuffer)) {\n    offset = offset * indexBuffer.bytesPerIndex; // offset in vertices to offset in bytes\n\n    count = defaultValue(count, indexBuffer.numberOfIndices);\n\n    if (instanceCount === 0) {\n      context._gl.drawElements(primitiveType, count, indexBuffer.indexDatatype, offset);\n    } else {\n      context.glDrawElementsInstanced(primitiveType, count, indexBuffer.indexDatatype, offset, instanceCount);\n    }\n  } else {\n    count = defaultValue(count, va.numberOfVertices);\n\n    if (instanceCount === 0) {\n      context._gl.drawArrays(primitiveType, offset, count);\n    } else {\n      context.glDrawArraysInstanced(primitiveType, offset, count, instanceCount);\n    }\n  }\n\n  va._unBind();\n}\n\nContext.prototype.draw = function (drawCommand, passState, shaderProgram, uniformMap) {\n  //>>includeStart('debug', pragmas.debug);\n  Check.defined(\"drawCommand\", drawCommand);\n  Check.defined(\"drawCommand.shaderProgram\", drawCommand._shaderProgram); //>>includeEnd('debug');\n\n  passState = defaultValue(passState, this._defaultPassState); // The command's framebuffer takes presidence over the pass' framebuffer, e.g., for off-screen rendering.\n\n  var framebuffer = defaultValue(drawCommand._framebuffer, passState.framebuffer);\n  var renderState = defaultValue(drawCommand._renderState, this._defaultRenderState);\n  shaderProgram = defaultValue(shaderProgram, drawCommand._shaderProgram);\n  uniformMap = defaultValue(uniformMap, drawCommand._uniformMap);\n  beginDraw(this, framebuffer, passState, shaderProgram, renderState);\n  continueDraw(this, drawCommand, shaderProgram, uniformMap);\n};\n\nContext.prototype.endFrame = function () {\n  var gl = this._gl;\n  gl.useProgram(null);\n  this._currentFramebuffer = undefined;\n  gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n  var buffers = scratchBackBufferArray;\n\n  if (this.drawBuffers) {\n    this.glDrawBuffers(buffers);\n  }\n\n  var length = this._maxFrameTextureUnitIndex;\n  this._maxFrameTextureUnitIndex = 0;\n\n  for (var i = 0; i < length; ++i) {\n    gl.activeTexture(gl.TEXTURE0 + i);\n    gl.bindTexture(gl.TEXTURE_2D, null);\n    gl.bindTexture(gl.TEXTURE_CUBE_MAP, null);\n  }\n};\n\nContext.prototype.readPixels = function (readState) {\n  var gl = this._gl;\n  readState = defaultValue(readState, defaultValue.EMPTY_OBJECT);\n  var x = Math.max(defaultValue(readState.x, 0), 0);\n  var y = Math.max(defaultValue(readState.y, 0), 0);\n  var width = defaultValue(readState.width, gl.drawingBufferWidth);\n  var height = defaultValue(readState.height, gl.drawingBufferHeight);\n  var framebuffer = readState.framebuffer; //>>includeStart('debug', pragmas.debug);\n\n  Check.typeOf.number.greaterThan(\"readState.width\", width, 0);\n  Check.typeOf.number.greaterThan(\"readState.height\", height, 0); //>>includeEnd('debug');\n\n  var pixelDatatype = PixelDatatype.UNSIGNED_BYTE;\n\n  if (defined(framebuffer) && framebuffer.numberOfColorAttachments > 0) {\n    pixelDatatype = framebuffer.getColorTexture(0).pixelDatatype;\n  }\n\n  var pixels = PixelFormat.createTypedArray(PixelFormat.RGBA, pixelDatatype, width, height);\n  bindFramebuffer(this, framebuffer);\n  gl.readPixels(x, y, width, height, PixelFormat.RGBA, pixelDatatype, pixels);\n  return pixels;\n};\n\nvar viewportQuadAttributeLocations = {\n  position: 0,\n  textureCoordinates: 1\n};\n\nContext.prototype.getViewportQuadVertexArray = function () {\n  // Per-context cache for viewport quads\n  var vertexArray = this.cache.viewportQuad_vertexArray;\n\n  if (!defined(vertexArray)) {\n    var geometry = new Geometry({\n      attributes: {\n        position: new GeometryAttribute({\n          componentDatatype: ComponentDatatype.FLOAT,\n          componentsPerAttribute: 2,\n          values: [-1.0, -1.0, 1.0, -1.0, 1.0, 1.0, -1.0, 1.0]\n        }),\n        textureCoordinates: new GeometryAttribute({\n          componentDatatype: ComponentDatatype.FLOAT,\n          componentsPerAttribute: 2,\n          values: [0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0]\n        })\n      },\n      // Workaround Internet Explorer 11.0.8 lack of TRIANGLE_FAN\n      indices: new Uint16Array([0, 1, 2, 0, 2, 3]),\n      primitiveType: PrimitiveType.TRIANGLES\n    });\n    vertexArray = VertexArray.fromGeometry({\n      context: this,\n      geometry: geometry,\n      attributeLocations: viewportQuadAttributeLocations,\n      bufferUsage: BufferUsage.STATIC_DRAW,\n      interleave: true\n    });\n    this.cache.viewportQuad_vertexArray = vertexArray;\n  }\n\n  return vertexArray;\n};\n\nContext.prototype.createViewportQuadCommand = function (fragmentShaderSource, overrides) {\n  overrides = defaultValue(overrides, defaultValue.EMPTY_OBJECT);\n  return new DrawCommand({\n    vertexArray: this.getViewportQuadVertexArray(),\n    primitiveType: PrimitiveType.TRIANGLES,\n    renderState: overrides.renderState,\n    shaderProgram: ShaderProgram.fromCache({\n      context: this,\n      vertexShaderSource: ViewportQuadVS,\n      fragmentShaderSource: fragmentShaderSource,\n      attributeLocations: viewportQuadAttributeLocations\n    }),\n    uniformMap: overrides.uniformMap,\n    owner: overrides.owner,\n    framebuffer: overrides.framebuffer,\n    pass: overrides.pass\n  });\n};\n/**\n * Gets the object associated with a pick color.\n *\n * @param {Color} pickColor The pick color.\n * @returns {Object} The object associated with the pick color, or undefined if no object is associated with that color.\n *\n * @example\n * var object = context.getObjectByPickColor(pickColor);\n *\n * @see Context#createPickId\n */\n\n\nContext.prototype.getObjectByPickColor = function (pickColor) {\n  //>>includeStart('debug', pragmas.debug);\n  Check.defined(\"pickColor\", pickColor); //>>includeEnd('debug');\n\n  return this._pickObjects[pickColor.toRgba()];\n};\n\nfunction PickId(pickObjects, key, color) {\n  this._pickObjects = pickObjects;\n  this.key = key;\n  this.color = color;\n}\n\nObject.defineProperties(PickId.prototype, {\n  object: {\n    get: function () {\n      return this._pickObjects[this.key];\n    },\n    set: function (value) {\n      this._pickObjects[this.key] = value;\n    }\n  }\n});\n\nPickId.prototype.destroy = function () {\n  delete this._pickObjects[this.key];\n  return undefined;\n};\n/**\n * Creates a unique ID associated with the input object for use with color-buffer picking.\n * The ID has an RGBA color value unique to this context.  You must call destroy()\n * on the pick ID when destroying the input object.\n *\n * @param {Object} object The object to associate with the pick ID.\n * @returns {Object} A PickId object with a <code>color</code> property.\n *\n * @exception {RuntimeError} Out of unique Pick IDs.\n *\n *\n * @example\n * this._pickId = context.createPickId({\n *   primitive : this,\n *   id : this.id\n * });\n *\n * @see Context#getObjectByPickColor\n */\n\n\nContext.prototype.createPickId = function (object) {\n  //>>includeStart('debug', pragmas.debug);\n  Check.defined(\"object\", object); //>>includeEnd('debug');\n  // the increment and assignment have to be separate statements to\n  // actually detect overflow in the Uint32 value\n\n  ++this._nextPickColor[0];\n  var key = this._nextPickColor[0];\n\n  if (key === 0) {\n    // In case of overflow\n    throw new RuntimeError(\"Out of unique Pick IDs.\");\n  }\n\n  this._pickObjects[key] = object;\n  return new PickId(this._pickObjects, key, Color.fromRgba(key));\n};\n\nContext.prototype.isDestroyed = function () {\n  return false;\n};\n\nContext.prototype.destroy = function () {\n  // Destroy all objects in the cache that have a destroy method.\n  var cache = this.cache;\n\n  for (var property in cache) {\n    if (cache.hasOwnProperty(property)) {\n      var propertyValue = cache[property];\n\n      if (defined(propertyValue.destroy)) {\n        propertyValue.destroy();\n      }\n    }\n  }\n\n  this._shaderCache = this._shaderCache.destroy();\n  this._textureCache = this._textureCache.destroy();\n  this._defaultTexture = this._defaultTexture && this._defaultTexture.destroy();\n  this._defaultCubeMap = this._defaultCubeMap && this._defaultCubeMap.destroy();\n  return destroyObject(this);\n};\n\nexport default Context;","map":{"version":3,"sources":["C:/Users/passa/Desktop/WaterDeployTrial/node_modules/cesium/Source/Renderer/Context.js"],"names":["Check","clone","Color","ComponentDatatype","createGuid","defaultValue","defined","destroyObject","DeveloperError","Geometry","GeometryAttribute","Matrix4","PixelFormat","PrimitiveType","RuntimeError","WebGLConstants","ViewportQuadVS","BufferUsage","ClearCommand","ContextLimits","CubeMap","DrawCommand","PassState","PixelDatatype","RenderState","ShaderCache","ShaderProgram","Texture","TextureCache","UniformState","VertexArray","errorToString","gl","error","message","INVALID_ENUM","INVALID_VALUE","INVALID_OPERATION","OUT_OF_MEMORY","CONTEXT_LOST_WEBGL","createErrorMessage","glFunc","glFuncArguments","name","i","length","throwOnError","getError","NO_ERROR","makeGetterSetter","propertyName","logFunction","get","value","set","wrapGL","wrapFunction","property","result","apply","arguments","glWrapper","Function","Object","defineProperty","getExtension","names","extension","undefined","Context","canvas","options","WebGLRenderingContext","_canvas","allowTextureFilterAnisotropic","webglOptions","webgl","alpha","stencil","requestWebgl2","WebGL2RenderingContext","webgl2","glContext","getWebGLStub","getContext","_originalGLContext","_gl","_webgl2","_id","validateFramebuffer","validateShaderProgram","logShaderCompilation","_throwOnWebGLError","_shaderCache","_textureCache","_stencilBits","getParameter","STENCIL_BITS","_maximumCombinedTextureImageUnits","MAX_COMBINED_TEXTURE_IMAGE_UNITS","_maximumCubeMapSize","MAX_CUBE_MAP_TEXTURE_SIZE","_maximumFragmentUniformVectors","MAX_FRAGMENT_UNIFORM_VECTORS","_maximumTextureImageUnits","MAX_TEXTURE_IMAGE_UNITS","_maximumRenderbufferSize","MAX_RENDERBUFFER_SIZE","_maximumTextureSize","MAX_TEXTURE_SIZE","_maximumVaryingVectors","MAX_VARYING_VECTORS","_maximumVertexAttributes","MAX_VERTEX_ATTRIBS","_maximumVertexTextureImageUnits","MAX_VERTEX_TEXTURE_IMAGE_UNITS","_maximumVertexUniformVectors","MAX_VERTEX_UNIFORM_VECTORS","aliasedLineWidthRange","ALIASED_LINE_WIDTH_RANGE","_minimumAliasedLineWidth","_maximumAliasedLineWidth","aliasedPointSizeRange","ALIASED_POINT_SIZE_RANGE","_minimumAliasedPointSize","_maximumAliasedPointSize","maximumViewportDimensions","MAX_VIEWPORT_DIMS","_maximumViewportWidth","_maximumViewportHeight","highpFloat","getShaderPrecisionFormat","FRAGMENT_SHADER","HIGH_FLOAT","_highpFloatSupported","precision","highpInt","HIGH_INT","_highpIntSupported","rangeMax","_antialias","getContextAttributes","antialias","_standardDerivatives","_blendMinmax","_elementIndexUint","_depthTexture","_fragDepth","_debugShaders","_textureFloat","_textureHalfFloat","_textureFloatLinear","_textureHalfFloatLinear","_colorBufferFloat","_floatBlend","_colorBufferHalfFloat","_s3tc","_pvrtc","_etc1","textureFilterAnisotropic","_textureFilterAnisotropic","_maximumTextureFilterAnisotropy","MAX_TEXTURE_MAX_ANISOTROPY_EXT","glCreateVertexArray","glBindVertexArray","glDeleteVertexArray","glDrawElementsInstanced","glDrawArraysInstanced","glVertexAttribDivisor","glDrawBuffers","vertexArrayObject","instancedArrays","drawBuffers","that","createVertexArray","vao","bindVertexArray","deleteVertexArray","mode","count","type","offset","instanceCount","drawElementsInstanced","first","drawArraysInstanced","index","divisor","vertexAttribDivisor","buffers","createVertexArrayOES","vertexArray","bindVertexArrayOES","deleteVertexArrayOES","drawElementsInstancedANGLE","drawArraysInstancedANGLE","vertexAttribDivisorANGLE","drawBuffersWEBGL","_vertexArrayObject","_instancedArrays","_drawBuffers","_maximumDrawBuffers","MAX_DRAW_BUFFERS","_maximumColorAttachments","MAX_COLOR_ATTACHMENTS","_clearColor","_clearDepth","_clearStencil","us","ps","rs","fromCache","_defaultPassState","_defaultRenderState","_defaultTexture","_defaultCubeMap","_us","_currentRenderState","_currentPassState","_currentFramebuffer","_maxFrameTextureUnitIndex","_vertexAttribDivisors","_previousDrawInstanced","push","_pickObjects","_nextPickColor","Uint32Array","cache","defaultFramebufferMarker","defineProperties","prototype","id","shaderCache","textureCache","uniformState","stencilBits","stencilBuffer","standardDerivatives","floatBlend","blendMinmax","elementIndexUint","depthTexture","floatingPointTexture","halfFloatingPointTexture","textureFloatLinear","textureHalfFloatLinear","s3tc","pvrtc","etc1","fragmentDepth","colorBufferFloat","colorBufferHalfFloat","debugShaders","throwOnWebGLError","defaultTexture","context","source","width","height","arrayBufferView","Uint8Array","flipY","defaultCubeMap","face","positiveX","negativeX","positiveY","negativeY","positiveZ","negativeZ","drawingBufferHeight","drawingBufferWidth","defaultFramebuffer","status","checkFramebufferStatus","FRAMEBUFFER","FRAMEBUFFER_COMPLETE","FRAMEBUFFER_INCOMPLETE_ATTACHMENT","FRAMEBUFFER_INCOMPLETE_DIMENSIONS","FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT","FRAMEBUFFER_UNSUPPORTED","applyRenderState","renderState","passState","clear","previousRenderState","previousPassState","partialApply","scratchBackBufferArray","BACK","bindFramebuffer","framebuffer","_bind","_getActiveColorAttachments","defaultClearCommand","clearCommand","bitmask","c","color","d","depth","s","equals","clearColor","red","green","blue","COLOR_BUFFER_BIT","clearDepth","DEPTH_BUFFER_BIT","clearStencil","STENCIL_BUFFER_BIT","beginDraw","shaderProgram","depthTest","enabled","hasDepthAttachment","Math","max","maximumTextureUnitIndex","continueDraw","drawCommand","uniformMap","primitiveType","_primitiveType","va","_vertexArray","_offset","_count","validate","typeOf","number","greaterThanOrEquals","model","_modelMatrix","IDENTITY","_setUniforms","indexBuffer","bytesPerIndex","numberOfIndices","drawElements","indexDatatype","numberOfVertices","drawArrays","_unBind","draw","_shaderProgram","_framebuffer","_renderState","_uniformMap","endFrame","useProgram","activeTexture","TEXTURE0","bindTexture","TEXTURE_2D","TEXTURE_CUBE_MAP","readPixels","readState","EMPTY_OBJECT","x","y","greaterThan","pixelDatatype","UNSIGNED_BYTE","numberOfColorAttachments","getColorTexture","pixels","createTypedArray","RGBA","viewportQuadAttributeLocations","position","textureCoordinates","getViewportQuadVertexArray","viewportQuad_vertexArray","geometry","attributes","componentDatatype","FLOAT","componentsPerAttribute","values","indices","Uint16Array","TRIANGLES","fromGeometry","attributeLocations","bufferUsage","STATIC_DRAW","interleave","createViewportQuadCommand","fragmentShaderSource","overrides","vertexShaderSource","owner","pass","getObjectByPickColor","pickColor","toRgba","PickId","pickObjects","key","object","destroy","createPickId","fromRgba","isDestroyed","hasOwnProperty","propertyValue"],"mappings":"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","sourcesContent":["import Check from \"../Core/Check.js\";\nimport clone from \"../Core/clone.js\";\nimport Color from \"../Core/Color.js\";\nimport ComponentDatatype from \"../Core/ComponentDatatype.js\";\nimport createGuid from \"../Core/createGuid.js\";\nimport defaultValue from \"../Core/defaultValue.js\";\nimport defined from \"../Core/defined.js\";\nimport destroyObject from \"../Core/destroyObject.js\";\nimport DeveloperError from \"../Core/DeveloperError.js\";\nimport Geometry from \"../Core/Geometry.js\";\nimport GeometryAttribute from \"../Core/GeometryAttribute.js\";\nimport Matrix4 from \"../Core/Matrix4.js\";\nimport PixelFormat from \"../Core/PixelFormat.js\";\nimport PrimitiveType from \"../Core/PrimitiveType.js\";\nimport RuntimeError from \"../Core/RuntimeError.js\";\nimport WebGLConstants from \"../Core/WebGLConstants.js\";\nimport ViewportQuadVS from \"../Shaders/ViewportQuadVS.js\";\nimport BufferUsage from \"./BufferUsage.js\";\nimport ClearCommand from \"./ClearCommand.js\";\nimport ContextLimits from \"./ContextLimits.js\";\nimport CubeMap from \"./CubeMap.js\";\nimport DrawCommand from \"./DrawCommand.js\";\nimport PassState from \"./PassState.js\";\nimport PixelDatatype from \"./PixelDatatype.js\";\nimport RenderState from \"./RenderState.js\";\nimport ShaderCache from \"./ShaderCache.js\";\nimport ShaderProgram from \"./ShaderProgram.js\";\nimport Texture from \"./Texture.js\";\nimport TextureCache from \"./TextureCache.js\";\nimport UniformState from \"./UniformState.js\";\nimport VertexArray from \"./VertexArray.js\";\n\nfunction errorToString(gl, error) {\n  var message = \"WebGL Error:  \";\n  switch (error) {\n    case gl.INVALID_ENUM:\n      message += \"INVALID_ENUM\";\n      break;\n    case gl.INVALID_VALUE:\n      message += \"INVALID_VALUE\";\n      break;\n    case gl.INVALID_OPERATION:\n      message += \"INVALID_OPERATION\";\n      break;\n    case gl.OUT_OF_MEMORY:\n      message += \"OUT_OF_MEMORY\";\n      break;\n    case gl.CONTEXT_LOST_WEBGL:\n      message += \"CONTEXT_LOST_WEBGL lost\";\n      break;\n    default:\n      message += \"Unknown (\" + error + \")\";\n  }\n\n  return message;\n}\n\nfunction createErrorMessage(gl, glFunc, glFuncArguments, error) {\n  var message = errorToString(gl, error) + \": \" + glFunc.name + \"(\";\n\n  for (var i = 0; i < glFuncArguments.length; ++i) {\n    if (i !== 0) {\n      message += \", \";\n    }\n    message += glFuncArguments[i];\n  }\n  message += \");\";\n\n  return message;\n}\n\nfunction throwOnError(gl, glFunc, glFuncArguments) {\n  var error = gl.getError();\n  if (error !== gl.NO_ERROR) {\n    throw new RuntimeError(\n      createErrorMessage(gl, glFunc, glFuncArguments, error)\n    );\n  }\n}\n\nfunction makeGetterSetter(gl, propertyName, logFunction) {\n  return {\n    get: function () {\n      var value = gl[propertyName];\n      logFunction(gl, \"get: \" + propertyName, value);\n      return gl[propertyName];\n    },\n    set: function (value) {\n      gl[propertyName] = value;\n      logFunction(gl, \"set: \" + propertyName, value);\n    },\n  };\n}\n\nfunction wrapGL(gl, logFunction) {\n  if (!defined(logFunction)) {\n    return gl;\n  }\n\n  function wrapFunction(property) {\n    return function () {\n      var result = property.apply(gl, arguments);\n      logFunction(gl, property, arguments);\n      return result;\n    };\n  }\n\n  var glWrapper = {};\n\n  // JavaScript linters normally demand that a for..in loop must directly contain an if,\n  // but in our loop below, we actually intend to iterate all properties, including\n  // those in the prototype.\n  /*eslint-disable guard-for-in*/\n  for (var propertyName in gl) {\n    var property = gl[propertyName];\n\n    // wrap any functions we encounter, otherwise just copy the property to the wrapper.\n    if (property instanceof Function) {\n      glWrapper[propertyName] = wrapFunction(property);\n    } else {\n      Object.defineProperty(\n        glWrapper,\n        propertyName,\n        makeGetterSetter(gl, propertyName, logFunction)\n      );\n    }\n  }\n  /*eslint-enable guard-for-in*/\n\n  return glWrapper;\n}\n\nfunction getExtension(gl, names) {\n  var length = names.length;\n  for (var i = 0; i < length; ++i) {\n    var extension = gl.getExtension(names[i]);\n    if (extension) {\n      return extension;\n    }\n  }\n\n  return undefined;\n}\n\n/**\n * @private\n * @constructor\n */\nfunction Context(canvas, options) {\n  // this check must use typeof, not defined, because defined doesn't work with undeclared variables.\n  if (typeof WebGLRenderingContext === \"undefined\") {\n    throw new RuntimeError(\n      \"The browser does not support WebGL.  Visit http://get.webgl.org.\"\n    );\n  }\n\n  //>>includeStart('debug', pragmas.debug);\n  Check.defined(\"canvas\", canvas);\n  //>>includeEnd('debug');\n\n  this._canvas = canvas;\n\n  options = clone(options, true);\n  // Don't use defaultValue.EMPTY_OBJECT here because the options object gets modified in the next line.\n  options = defaultValue(options, {});\n  options.allowTextureFilterAnisotropic = defaultValue(\n    options.allowTextureFilterAnisotropic,\n    true\n  );\n  var webglOptions = defaultValue(options.webgl, {});\n\n  // Override select WebGL defaults\n  webglOptions.alpha = defaultValue(webglOptions.alpha, false); // WebGL default is true\n  webglOptions.stencil = defaultValue(webglOptions.stencil, true); // WebGL default is false\n\n  var requestWebgl2 =\n    defaultValue(options.requestWebgl2, false) &&\n    typeof WebGL2RenderingContext !== \"undefined\";\n  var webgl2 = false;\n\n  var glContext;\n  var getWebGLStub = options.getWebGLStub;\n\n  if (!defined(getWebGLStub)) {\n    if (requestWebgl2) {\n      glContext =\n        canvas.getContext(\"webgl2\", webglOptions) ||\n        canvas.getContext(\"experimental-webgl2\", webglOptions) ||\n        undefined;\n      if (defined(glContext)) {\n        webgl2 = true;\n      }\n    }\n    if (!defined(glContext)) {\n      glContext =\n        canvas.getContext(\"webgl\", webglOptions) ||\n        canvas.getContext(\"experimental-webgl\", webglOptions) ||\n        undefined;\n    }\n    if (!defined(glContext)) {\n      throw new RuntimeError(\n        \"The browser supports WebGL, but initialization failed.\"\n      );\n    }\n  } else {\n    // Use WebGL stub when requested for unit tests\n    glContext = getWebGLStub(canvas, webglOptions);\n  }\n\n  this._originalGLContext = glContext;\n  this._gl = glContext;\n  this._webgl2 = webgl2;\n  this._id = createGuid();\n\n  // Validation and logging disabled by default for speed.\n  this.validateFramebuffer = false;\n  this.validateShaderProgram = false;\n  this.logShaderCompilation = false;\n\n  this._throwOnWebGLError = false;\n\n  this._shaderCache = new ShaderCache(this);\n  this._textureCache = new TextureCache();\n\n  var gl = glContext;\n\n  this._stencilBits = gl.getParameter(gl.STENCIL_BITS);\n\n  ContextLimits._maximumCombinedTextureImageUnits = gl.getParameter(\n    gl.MAX_COMBINED_TEXTURE_IMAGE_UNITS\n  ); // min: 8\n  ContextLimits._maximumCubeMapSize = gl.getParameter(\n    gl.MAX_CUBE_MAP_TEXTURE_SIZE\n  ); // min: 16\n  ContextLimits._maximumFragmentUniformVectors = gl.getParameter(\n    gl.MAX_FRAGMENT_UNIFORM_VECTORS\n  ); // min: 16\n  ContextLimits._maximumTextureImageUnits = gl.getParameter(\n    gl.MAX_TEXTURE_IMAGE_UNITS\n  ); // min: 8\n  ContextLimits._maximumRenderbufferSize = gl.getParameter(\n    gl.MAX_RENDERBUFFER_SIZE\n  ); // min: 1\n  ContextLimits._maximumTextureSize = gl.getParameter(gl.MAX_TEXTURE_SIZE); // min: 64\n  ContextLimits._maximumVaryingVectors = gl.getParameter(\n    gl.MAX_VARYING_VECTORS\n  ); // min: 8\n  ContextLimits._maximumVertexAttributes = gl.getParameter(\n    gl.MAX_VERTEX_ATTRIBS\n  ); // min: 8\n  ContextLimits._maximumVertexTextureImageUnits = gl.getParameter(\n    gl.MAX_VERTEX_TEXTURE_IMAGE_UNITS\n  ); // min: 0\n  ContextLimits._maximumVertexUniformVectors = gl.getParameter(\n    gl.MAX_VERTEX_UNIFORM_VECTORS\n  ); // min: 128\n\n  var aliasedLineWidthRange = gl.getParameter(gl.ALIASED_LINE_WIDTH_RANGE); // must include 1\n  ContextLimits._minimumAliasedLineWidth = aliasedLineWidthRange[0];\n  ContextLimits._maximumAliasedLineWidth = aliasedLineWidthRange[1];\n\n  var aliasedPointSizeRange = gl.getParameter(gl.ALIASED_POINT_SIZE_RANGE); // must include 1\n  ContextLimits._minimumAliasedPointSize = aliasedPointSizeRange[0];\n  ContextLimits._maximumAliasedPointSize = aliasedPointSizeRange[1];\n\n  var maximumViewportDimensions = gl.getParameter(gl.MAX_VIEWPORT_DIMS);\n  ContextLimits._maximumViewportWidth = maximumViewportDimensions[0];\n  ContextLimits._maximumViewportHeight = maximumViewportDimensions[1];\n\n  var highpFloat = gl.getShaderPrecisionFormat(\n    gl.FRAGMENT_SHADER,\n    gl.HIGH_FLOAT\n  );\n  ContextLimits._highpFloatSupported = highpFloat.precision !== 0;\n  var highpInt = gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.HIGH_INT);\n  ContextLimits._highpIntSupported = highpInt.rangeMax !== 0;\n\n  this._antialias = gl.getContextAttributes().antialias;\n\n  // Query and initialize extensions\n  this._standardDerivatives = !!getExtension(gl, [\"OES_standard_derivatives\"]);\n  this._blendMinmax = !!getExtension(gl, [\"EXT_blend_minmax\"]);\n  this._elementIndexUint = !!getExtension(gl, [\"OES_element_index_uint\"]);\n  this._depthTexture = !!getExtension(gl, [\n    \"WEBGL_depth_texture\",\n    \"WEBKIT_WEBGL_depth_texture\",\n  ]);\n  this._fragDepth = !!getExtension(gl, [\"EXT_frag_depth\"]);\n  this._debugShaders = getExtension(gl, [\"WEBGL_debug_shaders\"]);\n\n  this._textureFloat = !!getExtension(gl, [\"OES_texture_float\"]);\n  this._textureHalfFloat = !!getExtension(gl, [\"OES_texture_half_float\"]);\n\n  this._textureFloatLinear = !!getExtension(gl, [\"OES_texture_float_linear\"]);\n  this._textureHalfFloatLinear = !!getExtension(gl, [\n    \"OES_texture_half_float_linear\",\n  ]);\n\n  this._colorBufferFloat = !!getExtension(gl, [\n    \"EXT_color_buffer_float\",\n    \"WEBGL_color_buffer_float\",\n  ]);\n  this._floatBlend = !!getExtension(gl, [\"EXT_float_blend\"]);\n  this._colorBufferHalfFloat = !!getExtension(gl, [\n    \"EXT_color_buffer_half_float\",\n  ]);\n\n  this._s3tc = !!getExtension(gl, [\n    \"WEBGL_compressed_texture_s3tc\",\n    \"MOZ_WEBGL_compressed_texture_s3tc\",\n    \"WEBKIT_WEBGL_compressed_texture_s3tc\",\n  ]);\n  this._pvrtc = !!getExtension(gl, [\n    \"WEBGL_compressed_texture_pvrtc\",\n    \"WEBKIT_WEBGL_compressed_texture_pvrtc\",\n  ]);\n  this._etc1 = !!getExtension(gl, [\"WEBGL_compressed_texture_etc1\"]);\n\n  var textureFilterAnisotropic = options.allowTextureFilterAnisotropic\n    ? getExtension(gl, [\n        \"EXT_texture_filter_anisotropic\",\n        \"WEBKIT_EXT_texture_filter_anisotropic\",\n      ])\n    : undefined;\n  this._textureFilterAnisotropic = textureFilterAnisotropic;\n  ContextLimits._maximumTextureFilterAnisotropy = defined(\n    textureFilterAnisotropic\n  )\n    ? gl.getParameter(textureFilterAnisotropic.MAX_TEXTURE_MAX_ANISOTROPY_EXT)\n    : 1.0;\n\n  var glCreateVertexArray;\n  var glBindVertexArray;\n  var glDeleteVertexArray;\n\n  var glDrawElementsInstanced;\n  var glDrawArraysInstanced;\n  var glVertexAttribDivisor;\n\n  var glDrawBuffers;\n\n  var vertexArrayObject;\n  var instancedArrays;\n  var drawBuffers;\n\n  if (webgl2) {\n    var that = this;\n\n    glCreateVertexArray = function () {\n      return that._gl.createVertexArray();\n    };\n    glBindVertexArray = function (vao) {\n      that._gl.bindVertexArray(vao);\n    };\n    glDeleteVertexArray = function (vao) {\n      that._gl.deleteVertexArray(vao);\n    };\n\n    glDrawElementsInstanced = function (\n      mode,\n      count,\n      type,\n      offset,\n      instanceCount\n    ) {\n      gl.drawElementsInstanced(mode, count, type, offset, instanceCount);\n    };\n    glDrawArraysInstanced = function (mode, first, count, instanceCount) {\n      gl.drawArraysInstanced(mode, first, count, instanceCount);\n    };\n    glVertexAttribDivisor = function (index, divisor) {\n      gl.vertexAttribDivisor(index, divisor);\n    };\n\n    glDrawBuffers = function (buffers) {\n      gl.drawBuffers(buffers);\n    };\n  } else {\n    vertexArrayObject = getExtension(gl, [\"OES_vertex_array_object\"]);\n    if (defined(vertexArrayObject)) {\n      glCreateVertexArray = function () {\n        return vertexArrayObject.createVertexArrayOES();\n      };\n      glBindVertexArray = function (vertexArray) {\n        vertexArrayObject.bindVertexArrayOES(vertexArray);\n      };\n      glDeleteVertexArray = function (vertexArray) {\n        vertexArrayObject.deleteVertexArrayOES(vertexArray);\n      };\n    }\n\n    instancedArrays = getExtension(gl, [\"ANGLE_instanced_arrays\"]);\n    if (defined(instancedArrays)) {\n      glDrawElementsInstanced = function (\n        mode,\n        count,\n        type,\n        offset,\n        instanceCount\n      ) {\n        instancedArrays.drawElementsInstancedANGLE(\n          mode,\n          count,\n          type,\n          offset,\n          instanceCount\n        );\n      };\n      glDrawArraysInstanced = function (mode, first, count, instanceCount) {\n        instancedArrays.drawArraysInstancedANGLE(\n          mode,\n          first,\n          count,\n          instanceCount\n        );\n      };\n      glVertexAttribDivisor = function (index, divisor) {\n        instancedArrays.vertexAttribDivisorANGLE(index, divisor);\n      };\n    }\n\n    drawBuffers = getExtension(gl, [\"WEBGL_draw_buffers\"]);\n    if (defined(drawBuffers)) {\n      glDrawBuffers = function (buffers) {\n        drawBuffers.drawBuffersWEBGL(buffers);\n      };\n    }\n  }\n\n  this.glCreateVertexArray = glCreateVertexArray;\n  this.glBindVertexArray = glBindVertexArray;\n  this.glDeleteVertexArray = glDeleteVertexArray;\n\n  this.glDrawElementsInstanced = glDrawElementsInstanced;\n  this.glDrawArraysInstanced = glDrawArraysInstanced;\n  this.glVertexAttribDivisor = glVertexAttribDivisor;\n\n  this.glDrawBuffers = glDrawBuffers;\n\n  this._vertexArrayObject = !!vertexArrayObject;\n  this._instancedArrays = !!instancedArrays;\n  this._drawBuffers = !!drawBuffers;\n\n  ContextLimits._maximumDrawBuffers = this.drawBuffers\n    ? gl.getParameter(WebGLConstants.MAX_DRAW_BUFFERS)\n    : 1;\n  ContextLimits._maximumColorAttachments = this.drawBuffers\n    ? gl.getParameter(WebGLConstants.MAX_COLOR_ATTACHMENTS)\n    : 1;\n\n  this._clearColor = new Color(0.0, 0.0, 0.0, 0.0);\n  this._clearDepth = 1.0;\n  this._clearStencil = 0;\n\n  var us = new UniformState();\n  var ps = new PassState(this);\n  var rs = RenderState.fromCache();\n\n  this._defaultPassState = ps;\n  this._defaultRenderState = rs;\n  this._defaultTexture = undefined;\n  this._defaultCubeMap = undefined;\n\n  this._us = us;\n  this._currentRenderState = rs;\n  this._currentPassState = ps;\n  this._currentFramebuffer = undefined;\n  this._maxFrameTextureUnitIndex = 0;\n\n  // Vertex attribute divisor state cache. Workaround for ANGLE (also look at VertexArray.setVertexAttribDivisor)\n  this._vertexAttribDivisors = [];\n  this._previousDrawInstanced = false;\n  for (var i = 0; i < ContextLimits._maximumVertexAttributes; i++) {\n    this._vertexAttribDivisors.push(0);\n  }\n\n  this._pickObjects = {};\n  this._nextPickColor = new Uint32Array(1);\n\n  /**\n   * @example\n   * {\n   *   webgl : {\n   *     alpha : false,\n   *     depth : true,\n   *     stencil : false,\n   *     antialias : true,\n   *     premultipliedAlpha : true,\n   *     preserveDrawingBuffer : false,\n   *     failIfMajorPerformanceCaveat : true\n   *   },\n   *   allowTextureFilterAnisotropic : true\n   * }\n   */\n  this.options = options;\n\n  /**\n   * A cache of objects tied to this context.  Just before the Context is destroyed,\n   * <code>destroy</code> will be invoked on each object in this object literal that has\n   * such a method.  This is useful for caching any objects that might otherwise\n   * be stored globally, except they're tied to a particular context, and to manage\n   * their lifetime.\n   *\n   * @type {Object}\n   */\n  this.cache = {};\n\n  RenderState.apply(gl, rs, ps);\n}\n\nvar defaultFramebufferMarker = {};\n\nObject.defineProperties(Context.prototype, {\n  id: {\n    get: function () {\n      return this._id;\n    },\n  },\n  webgl2: {\n    get: function () {\n      return this._webgl2;\n    },\n  },\n  canvas: {\n    get: function () {\n      return this._canvas;\n    },\n  },\n  shaderCache: {\n    get: function () {\n      return this._shaderCache;\n    },\n  },\n  textureCache: {\n    get: function () {\n      return this._textureCache;\n    },\n  },\n  uniformState: {\n    get: function () {\n      return this._us;\n    },\n  },\n\n  /**\n   * The number of stencil bits per pixel in the default bound framebuffer.  The minimum is eight bits.\n   * @memberof Context.prototype\n   * @type {Number}\n   * @see {@link https://www.khronos.org/opengles/sdk/docs/man/xhtml/glGet.xml|glGet} with <code>STENCIL_BITS</code>.\n   */\n  stencilBits: {\n    get: function () {\n      return this._stencilBits;\n    },\n  },\n\n  /**\n   * <code>true</code> if the WebGL context supports stencil buffers.\n   * Stencil buffers are not supported by all systems.\n   * @memberof Context.prototype\n   * @type {Boolean}\n   */\n  stencilBuffer: {\n    get: function () {\n      return this._stencilBits >= 8;\n    },\n  },\n\n  /**\n   * <code>true</code> if the WebGL context supports antialiasing.  By default\n   * antialiasing is requested, but it is not supported by all systems.\n   * @memberof Context.prototype\n   * @type {Boolean}\n   */\n  antialias: {\n    get: function () {\n      return this._antialias;\n    },\n  },\n\n  /**\n   * <code>true</code> if the OES_standard_derivatives extension is supported.  This\n   * extension provides access to <code>dFdx</code>, <code>dFdy</code>, and <code>fwidth</code>\n   * functions from GLSL.  A shader using these functions still needs to explicitly enable the\n   * extension with <code>#extension GL_OES_standard_derivatives : enable</code>.\n   * @memberof Context.prototype\n   * @type {Boolean}\n   * @see {@link http://www.khronos.org/registry/gles/extensions/OES/OES_standard_derivatives.txt|OES_standard_derivatives}\n   */\n  standardDerivatives: {\n    get: function () {\n      return this._standardDerivatives || this._webgl2;\n    },\n  },\n\n  /**\n   * <code>true</code> if the EXT_float_blend extension is supported. This\n   * extension enables blending with 32-bit float values.\n   * @memberof Context.prototype\n   * @type {Boolean}\n   * @see {@link https://www.khronos.org/registry/webgl/extensions/EXT_float_blend/}\n   */\n  floatBlend: {\n    get: function () {\n      return this._floatBlend;\n    },\n  },\n\n  /**\n   * <code>true</code> if the EXT_blend_minmax extension is supported.  This\n   * extension extends blending capabilities by adding two new blend equations:\n   * the minimum or maximum color components of the source and destination colors.\n   * @memberof Context.prototype\n   * @type {Boolean}\n   * @see {@link https://www.khronos.org/registry/webgl/extensions/EXT_blend_minmax/}\n   */\n  blendMinmax: {\n    get: function () {\n      return this._blendMinmax || this._webgl2;\n    },\n  },\n\n  /**\n   * <code>true</code> if the OES_element_index_uint extension is supported.  This\n   * extension allows the use of unsigned int indices, which can improve performance by\n   * eliminating batch breaking caused by unsigned short indices.\n   * @memberof Context.prototype\n   * @type {Boolean}\n   * @see {@link http://www.khronos.org/registry/webgl/extensions/OES_element_index_uint/|OES_element_index_uint}\n   */\n  elementIndexUint: {\n    get: function () {\n      return this._elementIndexUint || this._webgl2;\n    },\n  },\n\n  /**\n   * <code>true</code> if WEBGL_depth_texture is supported.  This extension provides\n   * access to depth textures that, for example, can be attached to framebuffers for shadow mapping.\n   * @memberof Context.prototype\n   * @type {Boolean}\n   * @see {@link http://www.khronos.org/registry/webgl/extensions/WEBGL_depth_texture/|WEBGL_depth_texture}\n   */\n  depthTexture: {\n    get: function () {\n      return this._depthTexture || this._webgl2;\n    },\n  },\n\n  /**\n   * <code>true</code> if OES_texture_float is supported. This extension provides\n   * access to floating point textures that, for example, can be attached to framebuffers for high dynamic range.\n   * @memberof Context.prototype\n   * @type {Boolean}\n   * @see {@link https://www.khronos.org/registry/webgl/extensions/OES_texture_float/}\n   */\n  floatingPointTexture: {\n    get: function () {\n      return this._webgl2 || this._textureFloat;\n    },\n  },\n\n  /**\n   * <code>true</code> if OES_texture_half_float is supported. This extension provides\n   * access to floating point textures that, for example, can be attached to framebuffers for high dynamic range.\n   * @memberof Context.prototype\n   * @type {Boolean}\n   * @see {@link https://www.khronos.org/registry/webgl/extensions/OES_texture_float/}\n   */\n  halfFloatingPointTexture: {\n    get: function () {\n      return this._webgl2 || this._textureHalfFloat;\n    },\n  },\n\n  /**\n   * <code>true</code> if OES_texture_float_linear is supported. This extension provides\n   * access to linear sampling methods for minification and magnification filters of floating-point textures.\n   * @memberof Context.prototype\n   * @type {Boolean}\n   * @see {@link https://www.khronos.org/registry/webgl/extensions/OES_texture_float_linear/}\n   */\n  textureFloatLinear: {\n    get: function () {\n      return this._textureFloatLinear;\n    },\n  },\n\n  /**\n   * <code>true</code> if OES_texture_half_float_linear is supported. This extension provides\n   * access to linear sampling methods for minification and magnification filters of half floating-point textures.\n   * @memberof Context.prototype\n   * @type {Boolean}\n   * @see {@link https://www.khronos.org/registry/webgl/extensions/OES_texture_half_float_linear/}\n   */\n  textureHalfFloatLinear: {\n    get: function () {\n      return (\n        (this._webgl2 && this._textureFloatLinear) ||\n        (!this._webgl2 && this._textureHalfFloatLinear)\n      );\n    },\n  },\n\n  /**\n   * <code>true</code> if EXT_texture_filter_anisotropic is supported. This extension provides\n   * access to anisotropic filtering for textured surfaces at an oblique angle from the viewer.\n   * @memberof Context.prototype\n   * @type {Boolean}\n   * @see {@link https://www.khronos.org/registry/webgl/extensions/EXT_texture_filter_anisotropic/}\n   */\n  textureFilterAnisotropic: {\n    get: function () {\n      return !!this._textureFilterAnisotropic;\n    },\n  },\n\n  /**\n   * <code>true</code> if WEBGL_texture_compression_s3tc is supported.  This extension provides\n   * access to DXT compressed textures.\n   * @memberof Context.prototype\n   * @type {Boolean}\n   * @see {@link https://www.khronos.org/registry/webgl/extensions/WEBGL_compressed_texture_s3tc/}\n   */\n  s3tc: {\n    get: function () {\n      return this._s3tc;\n    },\n  },\n\n  /**\n   * <code>true</code> if WEBGL_texture_compression_pvrtc is supported.  This extension provides\n   * access to PVR compressed textures.\n   * @memberof Context.prototype\n   * @type {Boolean}\n   * @see {@link https://www.khronos.org/registry/webgl/extensions/WEBGL_compressed_texture_pvrtc/}\n   */\n  pvrtc: {\n    get: function () {\n      return this._pvrtc;\n    },\n  },\n\n  /**\n   * <code>true</code> if WEBGL_texture_compression_etc1 is supported.  This extension provides\n   * access to ETC1 compressed textures.\n   * @memberof Context.prototype\n   * @type {Boolean}\n   * @see {@link https://www.khronos.org/registry/webgl/extensions/WEBGL_compressed_texture_etc1/}\n   */\n  etc1: {\n    get: function () {\n      return this._etc1;\n    },\n  },\n\n  /**\n   * <code>true</code> if the OES_vertex_array_object extension is supported.  This\n   * extension can improve performance by reducing the overhead of switching vertex arrays.\n   * When enabled, this extension is automatically used by {@link VertexArray}.\n   * @memberof Context.prototype\n   * @type {Boolean}\n   * @see {@link http://www.khronos.org/registry/webgl/extensions/OES_vertex_array_object/|OES_vertex_array_object}\n   */\n  vertexArrayObject: {\n    get: function () {\n      return this._vertexArrayObject || this._webgl2;\n    },\n  },\n\n  /**\n   * <code>true</code> if the EXT_frag_depth extension is supported.  This\n   * extension provides access to the <code>gl_FragDepthEXT</code> built-in output variable\n   * from GLSL fragment shaders.  A shader using these functions still needs to explicitly enable the\n   * extension with <code>#extension GL_EXT_frag_depth : enable</code>.\n   * @memberof Context.prototype\n   * @type {Boolean}\n   * @see {@link http://www.khronos.org/registry/webgl/extensions/EXT_frag_depth/|EXT_frag_depth}\n   */\n  fragmentDepth: {\n    get: function () {\n      return this._fragDepth || this._webgl2;\n    },\n  },\n\n  /**\n   * <code>true</code> if the ANGLE_instanced_arrays extension is supported.  This\n   * extension provides access to instanced rendering.\n   * @memberof Context.prototype\n   * @type {Boolean}\n   * @see {@link https://www.khronos.org/registry/webgl/extensions/ANGLE_instanced_arrays}\n   */\n  instancedArrays: {\n    get: function () {\n      return this._instancedArrays || this._webgl2;\n    },\n  },\n\n  /**\n   * <code>true</code> if the EXT_color_buffer_float extension is supported.  This\n   * extension makes the gl.RGBA32F format color renderable.\n   * @memberof Context.prototype\n   * @type {Boolean}\n   * @see {@link https://www.khronos.org/registry/webgl/extensions/WEBGL_color_buffer_float/}\n   * @see {@link https://www.khronos.org/registry/webgl/extensions/EXT_color_buffer_float/}\n   */\n  colorBufferFloat: {\n    get: function () {\n      return this._colorBufferFloat;\n    },\n  },\n\n  /**\n   * <code>true</code> if the EXT_color_buffer_half_float extension is supported.  This\n   * extension makes the format gl.RGBA16F format color renderable.\n   * @memberof Context.prototype\n   * @type {Boolean}\n   * @see {@link https://www.khronos.org/registry/webgl/extensions/EXT_color_buffer_half_float/}\n   * @see {@link https://www.khronos.org/registry/webgl/extensions/EXT_color_buffer_float/}\n   */\n  colorBufferHalfFloat: {\n    get: function () {\n      return (\n        (this._webgl2 && this._colorBufferFloat) ||\n        (!this._webgl2 && this._colorBufferHalfFloat)\n      );\n    },\n  },\n\n  /**\n   * <code>true</code> if the WEBGL_draw_buffers extension is supported. This\n   * extensions provides support for multiple render targets. The framebuffer object can have mutiple\n   * color attachments and the GLSL fragment shader can write to the built-in output array <code>gl_FragData</code>.\n   * A shader using this feature needs to explicitly enable the extension with\n   * <code>#extension GL_EXT_draw_buffers : enable</code>.\n   * @memberof Context.prototype\n   * @type {Boolean}\n   * @see {@link http://www.khronos.org/registry/webgl/extensions/WEBGL_draw_buffers/|WEBGL_draw_buffers}\n   */\n  drawBuffers: {\n    get: function () {\n      return this._drawBuffers || this._webgl2;\n    },\n  },\n\n  debugShaders: {\n    get: function () {\n      return this._debugShaders;\n    },\n  },\n\n  throwOnWebGLError: {\n    get: function () {\n      return this._throwOnWebGLError;\n    },\n    set: function (value) {\n      this._throwOnWebGLError = value;\n      this._gl = wrapGL(\n        this._originalGLContext,\n        value ? throwOnError : undefined\n      );\n    },\n  },\n\n  /**\n   * A 1x1 RGBA texture initialized to [255, 255, 255, 255].  This can\n   * be used as a placeholder texture while other textures are downloaded.\n   * @memberof Context.prototype\n   * @type {Texture}\n   */\n  defaultTexture: {\n    get: function () {\n      if (this._defaultTexture === undefined) {\n        this._defaultTexture = new Texture({\n          context: this,\n          source: {\n            width: 1,\n            height: 1,\n            arrayBufferView: new Uint8Array([255, 255, 255, 255]),\n          },\n          flipY: false,\n        });\n      }\n\n      return this._defaultTexture;\n    },\n  },\n\n  /**\n   * A cube map, where each face is a 1x1 RGBA texture initialized to\n   * [255, 255, 255, 255].  This can be used as a placeholder cube map while\n   * other cube maps are downloaded.\n   * @memberof Context.prototype\n   * @type {CubeMap}\n   */\n  defaultCubeMap: {\n    get: function () {\n      if (this._defaultCubeMap === undefined) {\n        var face = {\n          width: 1,\n          height: 1,\n          arrayBufferView: new Uint8Array([255, 255, 255, 255]),\n        };\n\n        this._defaultCubeMap = new CubeMap({\n          context: this,\n          source: {\n            positiveX: face,\n            negativeX: face,\n            positiveY: face,\n            negativeY: face,\n            positiveZ: face,\n            negativeZ: face,\n          },\n          flipY: false,\n        });\n      }\n\n      return this._defaultCubeMap;\n    },\n  },\n\n  /**\n   * The drawingBufferHeight of the underlying GL context.\n   * @memberof Context.prototype\n   * @type {Number}\n   * @see {@link https://www.khronos.org/registry/webgl/specs/1.0/#DOM-WebGLRenderingContext-drawingBufferHeight|drawingBufferHeight}\n   */\n  drawingBufferHeight: {\n    get: function () {\n      return this._gl.drawingBufferHeight;\n    },\n  },\n\n  /**\n   * The drawingBufferWidth of the underlying GL context.\n   * @memberof Context.prototype\n   * @type {Number}\n   * @see {@link https://www.khronos.org/registry/webgl/specs/1.0/#DOM-WebGLRenderingContext-drawingBufferWidth|drawingBufferWidth}\n   */\n  drawingBufferWidth: {\n    get: function () {\n      return this._gl.drawingBufferWidth;\n    },\n  },\n\n  /**\n   * Gets an object representing the currently bound framebuffer.  While this instance is not an actual\n   * {@link Framebuffer}, it is used to represent the default framebuffer in calls to\n   * {@link Texture.fromFramebuffer}.\n   * @memberof Context.prototype\n   * @type {Object}\n   */\n  defaultFramebuffer: {\n    get: function () {\n      return defaultFramebufferMarker;\n    },\n  },\n});\n\n/**\n * Validates a framebuffer.\n * Available in debug builds only.\n * @private\n */\nfunction validateFramebuffer(context) {\n  //>>includeStart('debug', pragmas.debug);\n  if (context.validateFramebuffer) {\n    var gl = context._gl;\n    var status = gl.checkFramebufferStatus(gl.FRAMEBUFFER);\n\n    if (status !== gl.FRAMEBUFFER_COMPLETE) {\n      var message;\n\n      switch (status) {\n        case gl.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:\n          message =\n            \"Framebuffer is not complete.  Incomplete attachment: at least one attachment point with a renderbuffer or texture attached has its attached object no longer in existence or has an attached image with a width or height of zero, or the color attachment point has a non-color-renderable image attached, or the depth attachment point has a non-depth-renderable image attached, or the stencil attachment point has a non-stencil-renderable image attached.  Color-renderable formats include GL_RGBA4, GL_RGB5_A1, and GL_RGB565. GL_DEPTH_COMPONENT16 is the only depth-renderable format. GL_STENCIL_INDEX8 is the only stencil-renderable format.\";\n          break;\n        case gl.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:\n          message =\n            \"Framebuffer is not complete.  Incomplete dimensions: not all attached images have the same width and height.\";\n          break;\n        case gl.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:\n          message =\n            \"Framebuffer is not complete.  Missing attachment: no images are attached to the framebuffer.\";\n          break;\n        case gl.FRAMEBUFFER_UNSUPPORTED:\n          message =\n            \"Framebuffer is not complete.  Unsupported: the combination of internal formats of the attached images violates an implementation-dependent set of restrictions.\";\n          break;\n      }\n\n      throw new DeveloperError(message);\n    }\n  }\n  //>>includeEnd('debug');\n}\n\nfunction applyRenderState(context, renderState, passState, clear) {\n  var previousRenderState = context._currentRenderState;\n  var previousPassState = context._currentPassState;\n  context._currentRenderState = renderState;\n  context._currentPassState = passState;\n  RenderState.partialApply(\n    context._gl,\n    previousRenderState,\n    renderState,\n    previousPassState,\n    passState,\n    clear\n  );\n}\n\nvar scratchBackBufferArray;\n// this check must use typeof, not defined, because defined doesn't work with undeclared variables.\nif (typeof WebGLRenderingContext !== \"undefined\") {\n  scratchBackBufferArray = [WebGLConstants.BACK];\n}\n\nfunction bindFramebuffer(context, framebuffer) {\n  if (framebuffer !== context._currentFramebuffer) {\n    context._currentFramebuffer = framebuffer;\n    var buffers = scratchBackBufferArray;\n\n    if (defined(framebuffer)) {\n      framebuffer._bind();\n      validateFramebuffer(context);\n\n      // TODO: Need a way for a command to give what draw buffers are active.\n      buffers = framebuffer._getActiveColorAttachments();\n    } else {\n      var gl = context._gl;\n      gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n    }\n\n    if (context.drawBuffers) {\n      context.glDrawBuffers(buffers);\n    }\n  }\n}\n\nvar defaultClearCommand = new ClearCommand();\n\nContext.prototype.clear = function (clearCommand, passState) {\n  clearCommand = defaultValue(clearCommand, defaultClearCommand);\n  passState = defaultValue(passState, this._defaultPassState);\n\n  var gl = this._gl;\n  var bitmask = 0;\n\n  var c = clearCommand.color;\n  var d = clearCommand.depth;\n  var s = clearCommand.stencil;\n\n  if (defined(c)) {\n    if (!Color.equals(this._clearColor, c)) {\n      Color.clone(c, this._clearColor);\n      gl.clearColor(c.red, c.green, c.blue, c.alpha);\n    }\n    bitmask |= gl.COLOR_BUFFER_BIT;\n  }\n\n  if (defined(d)) {\n    if (d !== this._clearDepth) {\n      this._clearDepth = d;\n      gl.clearDepth(d);\n    }\n    bitmask |= gl.DEPTH_BUFFER_BIT;\n  }\n\n  if (defined(s)) {\n    if (s !== this._clearStencil) {\n      this._clearStencil = s;\n      gl.clearStencil(s);\n    }\n    bitmask |= gl.STENCIL_BUFFER_BIT;\n  }\n\n  var rs = defaultValue(clearCommand.renderState, this._defaultRenderState);\n  applyRenderState(this, rs, passState, true);\n\n  // The command's framebuffer takes presidence over the pass' framebuffer, e.g., for off-screen rendering.\n  var framebuffer = defaultValue(\n    clearCommand.framebuffer,\n    passState.framebuffer\n  );\n  bindFramebuffer(this, framebuffer);\n\n  gl.clear(bitmask);\n};\n\nfunction beginDraw(\n  context,\n  framebuffer,\n  passState,\n  shaderProgram,\n  renderState\n) {\n  //>>includeStart('debug', pragmas.debug);\n  if (defined(framebuffer) && renderState.depthTest) {\n    if (renderState.depthTest.enabled && !framebuffer.hasDepthAttachment) {\n      throw new DeveloperError(\n        \"The depth test can not be enabled (drawCommand.renderState.depthTest.enabled) because the framebuffer (drawCommand.framebuffer) does not have a depth or depth-stencil renderbuffer.\"\n      );\n    }\n  }\n  //>>includeEnd('debug');\n\n  bindFramebuffer(context, framebuffer);\n  applyRenderState(context, renderState, passState, false);\n  shaderProgram._bind();\n  context._maxFrameTextureUnitIndex = Math.max(\n    context._maxFrameTextureUnitIndex,\n    shaderProgram.maximumTextureUnitIndex\n  );\n}\n\nfunction continueDraw(context, drawCommand, shaderProgram, uniformMap) {\n  var primitiveType = drawCommand._primitiveType;\n  var va = drawCommand._vertexArray;\n  var offset = drawCommand._offset;\n  var count = drawCommand._count;\n  var instanceCount = drawCommand.instanceCount;\n\n  //>>includeStart('debug', pragmas.debug);\n  if (!PrimitiveType.validate(primitiveType)) {\n    throw new DeveloperError(\n      \"drawCommand.primitiveType is required and must be valid.\"\n    );\n  }\n\n  Check.defined(\"drawCommand.vertexArray\", va);\n  Check.typeOf.number.greaterThanOrEquals(\"drawCommand.offset\", offset, 0);\n  if (defined(count)) {\n    Check.typeOf.number.greaterThanOrEquals(\"drawCommand.count\", count, 0);\n  }\n  Check.typeOf.number.greaterThanOrEquals(\n    \"drawCommand.instanceCount\",\n    instanceCount,\n    0\n  );\n  if (instanceCount > 0 && !context.instancedArrays) {\n    throw new DeveloperError(\"Instanced arrays extension is not supported\");\n  }\n  //>>includeEnd('debug');\n\n  context._us.model = defaultValue(drawCommand._modelMatrix, Matrix4.IDENTITY);\n  shaderProgram._setUniforms(\n    uniformMap,\n    context._us,\n    context.validateShaderProgram\n  );\n\n  va._bind();\n  var indexBuffer = va.indexBuffer;\n\n  if (defined(indexBuffer)) {\n    offset = offset * indexBuffer.bytesPerIndex; // offset in vertices to offset in bytes\n    count = defaultValue(count, indexBuffer.numberOfIndices);\n    if (instanceCount === 0) {\n      context._gl.drawElements(\n        primitiveType,\n        count,\n        indexBuffer.indexDatatype,\n        offset\n      );\n    } else {\n      context.glDrawElementsInstanced(\n        primitiveType,\n        count,\n        indexBuffer.indexDatatype,\n        offset,\n        instanceCount\n      );\n    }\n  } else {\n    count = defaultValue(count, va.numberOfVertices);\n    if (instanceCount === 0) {\n      context._gl.drawArrays(primitiveType, offset, count);\n    } else {\n      context.glDrawArraysInstanced(\n        primitiveType,\n        offset,\n        count,\n        instanceCount\n      );\n    }\n  }\n\n  va._unBind();\n}\n\nContext.prototype.draw = function (\n  drawCommand,\n  passState,\n  shaderProgram,\n  uniformMap\n) {\n  //>>includeStart('debug', pragmas.debug);\n  Check.defined(\"drawCommand\", drawCommand);\n  Check.defined(\"drawCommand.shaderProgram\", drawCommand._shaderProgram);\n  //>>includeEnd('debug');\n\n  passState = defaultValue(passState, this._defaultPassState);\n  // The command's framebuffer takes presidence over the pass' framebuffer, e.g., for off-screen rendering.\n  var framebuffer = defaultValue(\n    drawCommand._framebuffer,\n    passState.framebuffer\n  );\n  var renderState = defaultValue(\n    drawCommand._renderState,\n    this._defaultRenderState\n  );\n  shaderProgram = defaultValue(shaderProgram, drawCommand._shaderProgram);\n  uniformMap = defaultValue(uniformMap, drawCommand._uniformMap);\n\n  beginDraw(this, framebuffer, passState, shaderProgram, renderState);\n  continueDraw(this, drawCommand, shaderProgram, uniformMap);\n};\n\nContext.prototype.endFrame = function () {\n  var gl = this._gl;\n  gl.useProgram(null);\n\n  this._currentFramebuffer = undefined;\n  gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n\n  var buffers = scratchBackBufferArray;\n  if (this.drawBuffers) {\n    this.glDrawBuffers(buffers);\n  }\n\n  var length = this._maxFrameTextureUnitIndex;\n  this._maxFrameTextureUnitIndex = 0;\n\n  for (var i = 0; i < length; ++i) {\n    gl.activeTexture(gl.TEXTURE0 + i);\n    gl.bindTexture(gl.TEXTURE_2D, null);\n    gl.bindTexture(gl.TEXTURE_CUBE_MAP, null);\n  }\n};\n\nContext.prototype.readPixels = function (readState) {\n  var gl = this._gl;\n\n  readState = defaultValue(readState, defaultValue.EMPTY_OBJECT);\n  var x = Math.max(defaultValue(readState.x, 0), 0);\n  var y = Math.max(defaultValue(readState.y, 0), 0);\n  var width = defaultValue(readState.width, gl.drawingBufferWidth);\n  var height = defaultValue(readState.height, gl.drawingBufferHeight);\n  var framebuffer = readState.framebuffer;\n\n  //>>includeStart('debug', pragmas.debug);\n  Check.typeOf.number.greaterThan(\"readState.width\", width, 0);\n  Check.typeOf.number.greaterThan(\"readState.height\", height, 0);\n  //>>includeEnd('debug');\n\n  var pixelDatatype = PixelDatatype.UNSIGNED_BYTE;\n  if (defined(framebuffer) && framebuffer.numberOfColorAttachments > 0) {\n    pixelDatatype = framebuffer.getColorTexture(0).pixelDatatype;\n  }\n\n  var pixels = PixelFormat.createTypedArray(\n    PixelFormat.RGBA,\n    pixelDatatype,\n    width,\n    height\n  );\n\n  bindFramebuffer(this, framebuffer);\n\n  gl.readPixels(x, y, width, height, PixelFormat.RGBA, pixelDatatype, pixels);\n\n  return pixels;\n};\n\nvar viewportQuadAttributeLocations = {\n  position: 0,\n  textureCoordinates: 1,\n};\n\nContext.prototype.getViewportQuadVertexArray = function () {\n  // Per-context cache for viewport quads\n  var vertexArray = this.cache.viewportQuad_vertexArray;\n\n  if (!defined(vertexArray)) {\n    var geometry = new Geometry({\n      attributes: {\n        position: new GeometryAttribute({\n          componentDatatype: ComponentDatatype.FLOAT,\n          componentsPerAttribute: 2,\n          values: [-1.0, -1.0, 1.0, -1.0, 1.0, 1.0, -1.0, 1.0],\n        }),\n\n        textureCoordinates: new GeometryAttribute({\n          componentDatatype: ComponentDatatype.FLOAT,\n          componentsPerAttribute: 2,\n          values: [0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0],\n        }),\n      },\n      // Workaround Internet Explorer 11.0.8 lack of TRIANGLE_FAN\n      indices: new Uint16Array([0, 1, 2, 0, 2, 3]),\n      primitiveType: PrimitiveType.TRIANGLES,\n    });\n\n    vertexArray = VertexArray.fromGeometry({\n      context: this,\n      geometry: geometry,\n      attributeLocations: viewportQuadAttributeLocations,\n      bufferUsage: BufferUsage.STATIC_DRAW,\n      interleave: true,\n    });\n\n    this.cache.viewportQuad_vertexArray = vertexArray;\n  }\n\n  return vertexArray;\n};\n\nContext.prototype.createViewportQuadCommand = function (\n  fragmentShaderSource,\n  overrides\n) {\n  overrides = defaultValue(overrides, defaultValue.EMPTY_OBJECT);\n\n  return new DrawCommand({\n    vertexArray: this.getViewportQuadVertexArray(),\n    primitiveType: PrimitiveType.TRIANGLES,\n    renderState: overrides.renderState,\n    shaderProgram: ShaderProgram.fromCache({\n      context: this,\n      vertexShaderSource: ViewportQuadVS,\n      fragmentShaderSource: fragmentShaderSource,\n      attributeLocations: viewportQuadAttributeLocations,\n    }),\n    uniformMap: overrides.uniformMap,\n    owner: overrides.owner,\n    framebuffer: overrides.framebuffer,\n    pass: overrides.pass,\n  });\n};\n\n/**\n * Gets the object associated with a pick color.\n *\n * @param {Color} pickColor The pick color.\n * @returns {Object} The object associated with the pick color, or undefined if no object is associated with that color.\n *\n * @example\n * var object = context.getObjectByPickColor(pickColor);\n *\n * @see Context#createPickId\n */\nContext.prototype.getObjectByPickColor = function (pickColor) {\n  //>>includeStart('debug', pragmas.debug);\n  Check.defined(\"pickColor\", pickColor);\n  //>>includeEnd('debug');\n\n  return this._pickObjects[pickColor.toRgba()];\n};\n\nfunction PickId(pickObjects, key, color) {\n  this._pickObjects = pickObjects;\n  this.key = key;\n  this.color = color;\n}\n\nObject.defineProperties(PickId.prototype, {\n  object: {\n    get: function () {\n      return this._pickObjects[this.key];\n    },\n    set: function (value) {\n      this._pickObjects[this.key] = value;\n    },\n  },\n});\n\nPickId.prototype.destroy = function () {\n  delete this._pickObjects[this.key];\n  return undefined;\n};\n\n/**\n * Creates a unique ID associated with the input object for use with color-buffer picking.\n * The ID has an RGBA color value unique to this context.  You must call destroy()\n * on the pick ID when destroying the input object.\n *\n * @param {Object} object The object to associate with the pick ID.\n * @returns {Object} A PickId object with a <code>color</code> property.\n *\n * @exception {RuntimeError} Out of unique Pick IDs.\n *\n *\n * @example\n * this._pickId = context.createPickId({\n *   primitive : this,\n *   id : this.id\n * });\n *\n * @see Context#getObjectByPickColor\n */\nContext.prototype.createPickId = function (object) {\n  //>>includeStart('debug', pragmas.debug);\n  Check.defined(\"object\", object);\n  //>>includeEnd('debug');\n\n  // the increment and assignment have to be separate statements to\n  // actually detect overflow in the Uint32 value\n  ++this._nextPickColor[0];\n  var key = this._nextPickColor[0];\n  if (key === 0) {\n    // In case of overflow\n    throw new RuntimeError(\"Out of unique Pick IDs.\");\n  }\n\n  this._pickObjects[key] = object;\n  return new PickId(this._pickObjects, key, Color.fromRgba(key));\n};\n\nContext.prototype.isDestroyed = function () {\n  return false;\n};\n\nContext.prototype.destroy = function () {\n  // Destroy all objects in the cache that have a destroy method.\n  var cache = this.cache;\n  for (var property in cache) {\n    if (cache.hasOwnProperty(property)) {\n      var propertyValue = cache[property];\n      if (defined(propertyValue.destroy)) {\n        propertyValue.destroy();\n      }\n    }\n  }\n\n  this._shaderCache = this._shaderCache.destroy();\n  this._textureCache = this._textureCache.destroy();\n  this._defaultTexture = this._defaultTexture && this._defaultTexture.destroy();\n  this._defaultCubeMap = this._defaultCubeMap && this._defaultCubeMap.destroy();\n\n  return destroyObject(this);\n};\nexport default Context;\n"]},"metadata":{},"sourceType":"module"}
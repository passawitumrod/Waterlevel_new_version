{"ast":null,"code":"/**\n@license\nsprintf.js from the php.js project - https://github.com/kvz/phpjs\nDirectly from https://github.com/kvz/phpjs/blob/master/functions/strings/sprintf.js\n\nphp.js is copyright 2012 Kevin van Zonneveld.\n\nPortions copyright Brett Zamir (http://brett-zamir.me), Kevin van Zonneveld\n(http://kevin.vanzonneveld.net), Onno Marsman, Theriault, Michael White\n(http://getsprink.com), Waldo Malqui Silva, Paulo Freitas, Jack, Jonas\nRaoni Soares Silva (http://www.jsfromhell.com), Philip Peterson, Legaev\nAndrey, Ates Goral (http://magnetiq.com), Alex, Ratheous, Martijn Wieringa,\nRafa? Kukawski (http://blog.kukawski.pl), lmeyrick\n(https://sourceforge.net/projects/bcmath-js/), Nate, Philippe Baumann,\nEnrique Gonzalez, Webtoolkit.info (http://www.webtoolkit.info/), Carlos R.\nL. Rodrigues (http://www.jsfromhell.com), Ash Searle\n(http://hexmen.com/blog/), Jani Hartikainen, travc, Ole Vrijenhoek,\nErkekjetter, Michael Grier, Rafa? Kukawski (http://kukawski.pl), Johnny\nMast (http://www.phpvrouwen.nl), T.Wild, d3x,\nhttp://stackoverflow.com/questions/57803/how-to-convert-decimal-to-hex-in-javascript,\nRafa? Kukawski (http://blog.kukawski.pl/), stag019, pilus, WebDevHobo\n(http://webdevhobo.blogspot.com/), marrtins, GeekFG\n(http://geekfg.blogspot.com), Andrea Giammarchi\n(http://webreflection.blogspot.com), Arpad Ray (mailto:arpad@php.net),\ngorthaur, Paul Smith, Tim de Koning (http://www.kingsquare.nl), Joris, Oleg\nEremeev, Steve Hilder, majak, gettimeofday, KELAN, Josh Fraser\n(http://onlineaspect.com/2007/06/08/auto-detect-a-time-zone-with-javascript/),\nMarc Palau, Martin\n(http://www.erlenwiese.de/), Breaking Par Consulting Inc\n(http://www.breakingpar.com/bkp/home.nsf/0/87256B280015193F87256CFB006C45F7),\nChris, Mirek Slugen, saulius, Alfonso Jimenez\n(http://www.alfonsojimenez.com), Diplom@t (http://difane.com/), felix,\nMailfaker (http://www.weedem.fr/), Tyler Akins (http://rumkin.com), Caio\nAriede (http://caioariede.com), Robin, Kankrelune\n(http://www.webfaktory.info/), Karol Kowalski, Imgen Tata\n(http://www.myipdf.com/), mdsjack (http://www.mdsjack.bo.it), Dreamer,\nFelix Geisendoerfer (http://www.debuggable.com/felix), Lars Fischer, AJ,\nDavid, Aman Gupta, Michael White, Public Domain\n(http://www.json.org/json2.js), Steven Levithan\n(http://blog.stevenlevithan.com), Sakimori, Pellentesque Malesuada,\nThunder.m, Dj (http://phpjs.org/functions/htmlentities:425#comment_134018),\nSteve Clay, David James, Francois, class_exists, nobbler, T. Wild, Itsacon\n(http://www.itsacon.net/), date, Ole Vrijenhoek (http://www.nervous.nl/),\nFox, Raphael (Ao RUDLER), Marco, noname, Mateusz \"loonquawl\" Zalega, Frank\nForte, Arno, ger, mktime, john (http://www.jd-tech.net), Nick Kolosov\n(http://sammy.ru), marc andreu, Scott Cariss, Douglas Crockford\n(http://javascript.crockford.com), madipta, Slawomir Kaniecki,\nReverseSyntax, Nathan, Alex Wilson, kenneth, Bayron Guevara, Adam Wallner\n(http://web2.bitbaro.hu/), paulo kuong, jmweb, Lincoln Ramsay, djmix,\nPyerre, Jon Hohle, Thiago Mata (http://thiagomata.blog.com), lmeyrick\n(https://sourceforge.net/projects/bcmath-js/this.), Linuxworld, duncan,\nGilbert, Sanjoy Roy, Shingo, sankai, Oskar Larsson H?gfeldt\n(http://oskar-lh.name/), Denny Wardhana, 0m3r, Everlasto, Subhasis Deb,\njosh, jd, Pier Paolo Ramon (http://www.mastersoup.com/), P, merabi, Soren\nHansen, Eugene Bulkin (http://doubleaw.com/), Der Simon\n(http://innerdom.sourceforge.net/), echo is bad, Ozh, XoraX\n(http://www.xorax.info), EdorFaus, JB, J A R, Marc Jansen, Francesco, LH,\nStoyan Kyosev (http://www.svest.org/), nord_ua, omid\n(http://phpjs.org/functions/380:380#comment_137122), Brad Touesnard, MeEtc\n(http://yass.meetcweb.com), Peter-Paul Koch\n(http://www.quirksmode.org/js/beat.html), Olivier Louvignes\n(http://mg-crea.com/), T0bsn, Tim Wiel, Bryan Elliott, Jalal Berrami,\nMartin, JT, David Randall, Thomas Beaucourt (http://www.webapp.fr), taith,\nvlado houba, Pierre-Luc Paour, Kristof Coomans (SCK-CEN Belgian Nucleair\nResearch Centre), Martin Pool, Kirk Strobeck, Rick Waldron, Brant Messenger\n(http://www.brantmessenger.com/), Devan Penner-Woelk, Saulo Vallory, Wagner\nB. Soares, Artur Tchernychev, Valentina De Rosa, Jason Wong\n(http://carrot.org/), Christoph, Daniel Esteban, strftime, Mick@el, rezna,\nSimon Willison (http://simonwillison.net), Anton Ongson, Gabriel Paderni,\nMarco van Oort, penutbutterjelly, Philipp Lenssen, Bjorn Roesbeke\n(http://www.bjornroesbeke.be/), Bug?, Eric Nagel, Tomasz Wesolowski,\nEvertjan Garretsen, Bobby Drake, Blues (http://tech.bluesmoon.info/), Luke\nGodfrey, Pul, uestla, Alan C, Ulrich, Rafal Kukawski, Yves Sucaet,\nsowberry, Norman \"zEh\" Fuchs, hitwork, Zahlii, johnrembo, Nick Callen,\nSteven Levithan (stevenlevithan.com), ejsanders, Scott Baker, Brian Tafoya\n(http://www.premasolutions.com/), Philippe Jausions\n(http://pear.php.net/user/jausions), Aidan Lister\n(http://aidanlister.com/), Rob, e-mike, HKM, ChaosNo1, metjay, strcasecmp,\nstrcmp, Taras Bogach, jpfle, Alexander Ermolaev\n(http://snippets.dzone.com/user/AlexanderErmolaev), DxGx, kilops, Orlando,\ndptr1988, Le Torbi, James (http://www.james-bell.co.uk/), Pedro Tainha\n(http://www.pedrotainha.com), James, Arnout Kazemier\n(http://www.3rd-Eden.com), Chris McMacken, gabriel paderni, Yannoo,\nFGFEmperor, baris ozdil, Tod Gentille, Greg Frazier, jakes, 3D-GRAF, Allan\nJensen (http://www.winternet.no), Howard Yeend, Benjamin Lupton, davook,\ndaniel airton wermann (http://wermann.com.br), Atli T¨®r, Maximusya, Ryan\nW Tenney (http://ryan.10e.us), Alexander M Beedie, fearphage\n(http://http/my.opera.com/fearphage/), Nathan Sepulveda, Victor, Matteo,\nBilly, stensi, Cord, Manish, T.J. Leahy, Riddler\n(http://www.frontierwebdev.com/), Rafa? Kukawski, FremyCompany, Matt\nBradley, Tim de Koning, Luis Salazar (http://www.freaky-media.com/), Diogo\nResende, Rival, Andrej Pavlovic, Garagoth, Le Torbi\n(http://www.letorbi.de/), Dino, Josep Sanz (http://www.ws3.es/), rem,\nRussell Walker (http://www.nbill.co.uk/), Jamie Beck\n(http://www.terabit.ca/), setcookie, Michael, YUI Library:\nhttp://developer.yahoo.com/yui/docs/YAHOO.util.DateLocale.html, Blues at\nhttp://hacks.bluesmoon.info/strftime/strftime.js, Ben\n(http://benblume.co.uk/), DtTvB\n(http://dt.in.th/2008-09-16.string-length-in-bytes.html), Andreas, William,\nmeo, incidence, Cagri Ekin, Amirouche, Amir Habibi\n(http://www.residence-mixte.com/), Luke Smith (http://lucassmith.name),\nKheang Hok Chin (http://www.distantia.ca/), Jay Klehr, Lorenzo Pisani,\nTony, Yen-Wei Liu, Greenseed, mk.keck, Leslie Hoare, dude, booeyOH, Ben\nBryan\n\nLicensed under the MIT (MIT-LICENSE.txt) license.\n\nPermission is hereby granted, free of charge, to any person obtaining a\ncopy of this software and associated documentation files (the\n\"Software\"), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be included\nin all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\nOR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\nIN NO EVENT SHALL KEVIN VAN ZONNEVELD BE LIABLE FOR ANY CLAIM, DAMAGES\nOR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,\nARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\nOTHER DEALINGS IN THE SOFTWARE.\n*/\nfunction sprintf() {\n  // http://kevin.vanzonneveld.net\n  // +   original by: Ash Searle (http://hexmen.com/blog/)\n  // + namespaced by: Michael White (http://getsprink.com)\n  // +    tweaked by: Jack\n  // +   improved by: Kevin van Zonneveld (http://kevin.vanzonneveld.net)\n  // +      input by: Paulo Freitas\n  // +   improved by: Kevin van Zonneveld (http://kevin.vanzonneveld.net)\n  // +      input by: Brett Zamir (http://brett-zamir.me)\n  // +   improved by: Kevin van Zonneveld (http://kevin.vanzonneveld.net)\n  // +   improved by: Dj\n  // +   improved by: Allidylls\n  // *     example 1: sprintf(\"%01.2f\", 123.1);\n  // *     returns 1: 123.10\n  // *     example 2: sprintf(\"[%10s]\", 'monkey');\n  // *     returns 2: '[    monkey]'\n  // *     example 3: sprintf(\"[%'#10s]\", 'monkey');\n  // *     returns 3: '[####monkey]'\n  // *     example 4: sprintf(\"%d\", 123456789012345);\n  // *     returns 4: '123456789012345'\n  var regex = /%%|%(\\d+\\$)?([-+\\'#0 ]*)(\\*\\d+\\$|\\*|\\d+)?(\\.(\\*\\d+\\$|\\*|\\d+))?([scboxXuideEfFgG])/g;\n  var a = arguments,\n      i = 0,\n      format = a[i++]; // pad()\n\n  var pad = function (str, len, chr, leftJustify) {\n    if (!chr) {\n      chr = ' ';\n    }\n\n    var padding = str.length >= len ? '' : Array(1 + len - str.length >>> 0).join(chr);\n    return leftJustify ? str + padding : padding + str;\n  }; // justify()\n\n\n  var justify = function (value, prefix, leftJustify, minWidth, zeroPad, customPadChar) {\n    var diff = minWidth - value.length;\n\n    if (diff > 0) {\n      if (leftJustify || !zeroPad) {\n        value = pad(value, minWidth, customPadChar, leftJustify);\n      } else {\n        value = value.slice(0, prefix.length) + pad('', diff, '0', true) + value.slice(prefix.length);\n      }\n    }\n\n    return value;\n  }; // formatBaseX()\n\n\n  var formatBaseX = function (value, base, prefix, leftJustify, minWidth, precision, zeroPad) {\n    // Note: casts negative numbers to positive ones\n    var number = value >>> 0;\n    prefix = prefix && number && {\n      '2': '0b',\n      '8': '0',\n      '16': '0x'\n    }[base] || '';\n    value = prefix + pad(number.toString(base), precision || 0, '0', false);\n    return justify(value, prefix, leftJustify, minWidth, zeroPad);\n  }; // formatString()\n\n\n  var formatString = function (value, leftJustify, minWidth, precision, zeroPad, customPadChar) {\n    if (precision != null) {\n      value = value.slice(0, precision);\n    }\n\n    return justify(value, '', leftJustify, minWidth, zeroPad, customPadChar);\n  }; // doFormat()\n\n\n  var doFormat = function (substring, valueIndex, flags, minWidth, _, precision, type) {\n    var number;\n    var prefix;\n    var method;\n    var textTransform;\n    var value;\n\n    if (substring == '%%') {\n      return '%';\n    } // parse flags\n\n\n    var leftJustify = false,\n        positivePrefix = '',\n        zeroPad = false,\n        prefixBaseX = false,\n        customPadChar = ' ';\n    var flagsl = flags.length;\n\n    for (var j = 0; flags && j < flagsl; j++) {\n      switch (flags.charAt(j)) {\n        case ' ':\n          positivePrefix = ' ';\n          break;\n\n        case '+':\n          positivePrefix = '+';\n          break;\n\n        case '-':\n          leftJustify = true;\n          break;\n\n        case \"'\":\n          customPadChar = flags.charAt(j + 1);\n          break;\n\n        case '0':\n          zeroPad = true;\n          break;\n\n        case '#':\n          prefixBaseX = true;\n          break;\n      }\n    } // parameters may be null, undefined, empty-string or real valued\n    // we want to ignore null, undefined and empty-string values\n\n\n    if (!minWidth) {\n      minWidth = 0;\n    } else if (minWidth == '*') {\n      minWidth = +a[i++];\n    } else if (minWidth.charAt(0) == '*') {\n      minWidth = +a[minWidth.slice(1, -1)];\n    } else {\n      minWidth = +minWidth;\n    } // Note: undocumented perl feature:\n\n\n    if (minWidth < 0) {\n      minWidth = -minWidth;\n      leftJustify = true;\n    }\n\n    if (!isFinite(minWidth)) {\n      throw new Error('sprintf: (minimum-)width must be finite');\n    }\n\n    if (!precision) {\n      precision = 'fFeE'.indexOf(type) > -1 ? 6 : type == 'd' ? 0 : undefined;\n    } else if (precision == '*') {\n      precision = +a[i++];\n    } else if (precision.charAt(0) == '*') {\n      precision = +a[precision.slice(1, -1)];\n    } else {\n      precision = +precision;\n    } // grab value using valueIndex if required?\n\n\n    value = valueIndex ? a[valueIndex.slice(0, -1)] : a[i++];\n\n    switch (type) {\n      case 's':\n        return formatString(String(value), leftJustify, minWidth, precision, zeroPad, customPadChar);\n\n      case 'c':\n        return formatString(String.fromCharCode(+value), leftJustify, minWidth, precision, zeroPad);\n\n      case 'b':\n        return formatBaseX(value, 2, prefixBaseX, leftJustify, minWidth, precision, zeroPad);\n\n      case 'o':\n        return formatBaseX(value, 8, prefixBaseX, leftJustify, minWidth, precision, zeroPad);\n\n      case 'x':\n        return formatBaseX(value, 16, prefixBaseX, leftJustify, minWidth, precision, zeroPad);\n\n      case 'X':\n        return formatBaseX(value, 16, prefixBaseX, leftJustify, minWidth, precision, zeroPad).toUpperCase();\n\n      case 'u':\n        return formatBaseX(value, 10, prefixBaseX, leftJustify, minWidth, precision, zeroPad);\n\n      case 'i':\n      case 'd':\n        number = +value || 0;\n        number = Math.round(number - number % 1); // Plain Math.round doesn't just truncate\n\n        prefix = number < 0 ? '-' : positivePrefix;\n        value = prefix + pad(String(Math.abs(number)), precision, '0', false);\n        return justify(value, prefix, leftJustify, minWidth, zeroPad);\n\n      case 'e':\n      case 'E':\n      case 'f': // Should handle locales (as per setlocale)\n\n      case 'F':\n      case 'g':\n      case 'G':\n        number = +value;\n        prefix = number < 0 ? '-' : positivePrefix;\n        method = ['toExponential', 'toFixed', 'toPrecision']['efg'.indexOf(type.toLowerCase())];\n        textTransform = ['toString', 'toUpperCase']['eEfFgG'.indexOf(type) % 2];\n        value = prefix + Math.abs(number)[method](precision);\n        return justify(value, prefix, leftJustify, minWidth, zeroPad)[textTransform]();\n\n      default:\n        return substring;\n    }\n  };\n\n  return format.replace(regex, doFormat);\n}\n\nexport default sprintf;","map":{"version":3,"sources":["C:/Users/passa/Desktop/WaterDeployTrial/node_modules/cesium/Source/ThirdParty/sprintf.js"],"names":["sprintf","regex","a","arguments","i","format","pad","str","len","chr","leftJustify","padding","length","Array","join","justify","value","prefix","minWidth","zeroPad","customPadChar","diff","slice","formatBaseX","base","precision","number","toString","formatString","doFormat","substring","valueIndex","flags","_","type","method","textTransform","positivePrefix","prefixBaseX","flagsl","j","charAt","isFinite","Error","indexOf","undefined","String","fromCharCode","toUpperCase","Math","round","abs","toLowerCase","replace"],"mappings":"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","sourcesContent":["/**\n@license\nsprintf.js from the php.js project - https://github.com/kvz/phpjs\nDirectly from https://github.com/kvz/phpjs/blob/master/functions/strings/sprintf.js\n\nphp.js is copyright 2012 Kevin van Zonneveld.\n\nPortions copyright Brett Zamir (http://brett-zamir.me), Kevin van Zonneveld\n(http://kevin.vanzonneveld.net), Onno Marsman, Theriault, Michael White\n(http://getsprink.com), Waldo Malqui Silva, Paulo Freitas, Jack, Jonas\nRaoni Soares Silva (http://www.jsfromhell.com), Philip Peterson, Legaev\nAndrey, Ates Goral (http://magnetiq.com), Alex, Ratheous, Martijn Wieringa,\nRafa? Kukawski (http://blog.kukawski.pl), lmeyrick\n(https://sourceforge.net/projects/bcmath-js/), Nate, Philippe Baumann,\nEnrique Gonzalez, Webtoolkit.info (http://www.webtoolkit.info/), Carlos R.\nL. Rodrigues (http://www.jsfromhell.com), Ash Searle\n(http://hexmen.com/blog/), Jani Hartikainen, travc, Ole Vrijenhoek,\nErkekjetter, Michael Grier, Rafa? Kukawski (http://kukawski.pl), Johnny\nMast (http://www.phpvrouwen.nl), T.Wild, d3x,\nhttp://stackoverflow.com/questions/57803/how-to-convert-decimal-to-hex-in-javascript,\nRafa? Kukawski (http://blog.kukawski.pl/), stag019, pilus, WebDevHobo\n(http://webdevhobo.blogspot.com/), marrtins, GeekFG\n(http://geekfg.blogspot.com), Andrea Giammarchi\n(http://webreflection.blogspot.com), Arpad Ray (mailto:arpad@php.net),\ngorthaur, Paul Smith, Tim de Koning (http://www.kingsquare.nl), Joris, Oleg\nEremeev, Steve Hilder, majak, gettimeofday, KELAN, Josh Fraser\n(http://onlineaspect.com/2007/06/08/auto-detect-a-time-zone-with-javascript/),\nMarc Palau, Martin\n(http://www.erlenwiese.de/), Breaking Par Consulting Inc\n(http://www.breakingpar.com/bkp/home.nsf/0/87256B280015193F87256CFB006C45F7),\nChris, Mirek Slugen, saulius, Alfonso Jimenez\n(http://www.alfonsojimenez.com), Diplom@t (http://difane.com/), felix,\nMailfaker (http://www.weedem.fr/), Tyler Akins (http://rumkin.com), Caio\nAriede (http://caioariede.com), Robin, Kankrelune\n(http://www.webfaktory.info/), Karol Kowalski, Imgen Tata\n(http://www.myipdf.com/), mdsjack (http://www.mdsjack.bo.it), Dreamer,\nFelix Geisendoerfer (http://www.debuggable.com/felix), Lars Fischer, AJ,\nDavid, Aman Gupta, Michael White, Public Domain\n(http://www.json.org/json2.js), Steven Levithan\n(http://blog.stevenlevithan.com), Sakimori, Pellentesque Malesuada,\nThunder.m, Dj (http://phpjs.org/functions/htmlentities:425#comment_134018),\nSteve Clay, David James, Francois, class_exists, nobbler, T. Wild, Itsacon\n(http://www.itsacon.net/), date, Ole Vrijenhoek (http://www.nervous.nl/),\nFox, Raphael (Ao RUDLER), Marco, noname, Mateusz \"loonquawl\" Zalega, Frank\nForte, Arno, ger, mktime, john (http://www.jd-tech.net), Nick Kolosov\n(http://sammy.ru), marc andreu, Scott Cariss, Douglas Crockford\n(http://javascript.crockford.com), madipta, Slawomir Kaniecki,\nReverseSyntax, Nathan, Alex Wilson, kenneth, Bayron Guevara, Adam Wallner\n(http://web2.bitbaro.hu/), paulo kuong, jmweb, Lincoln Ramsay, djmix,\nPyerre, Jon Hohle, Thiago Mata (http://thiagomata.blog.com), lmeyrick\n(https://sourceforge.net/projects/bcmath-js/this.), Linuxworld, duncan,\nGilbert, Sanjoy Roy, Shingo, sankai, Oskar Larsson H?gfeldt\n(http://oskar-lh.name/), Denny Wardhana, 0m3r, Everlasto, Subhasis Deb,\njosh, jd, Pier Paolo Ramon (http://www.mastersoup.com/), P, merabi, Soren\nHansen, Eugene Bulkin (http://doubleaw.com/), Der Simon\n(http://innerdom.sourceforge.net/), echo is bad, Ozh, XoraX\n(http://www.xorax.info), EdorFaus, JB, J A R, Marc Jansen, Francesco, LH,\nStoyan Kyosev (http://www.svest.org/), nord_ua, omid\n(http://phpjs.org/functions/380:380#comment_137122), Brad Touesnard, MeEtc\n(http://yass.meetcweb.com), Peter-Paul Koch\n(http://www.quirksmode.org/js/beat.html), Olivier Louvignes\n(http://mg-crea.com/), T0bsn, Tim Wiel, Bryan Elliott, Jalal Berrami,\nMartin, JT, David Randall, Thomas Beaucourt (http://www.webapp.fr), taith,\nvlado houba, Pierre-Luc Paour, Kristof Coomans (SCK-CEN Belgian Nucleair\nResearch Centre), Martin Pool, Kirk Strobeck, Rick Waldron, Brant Messenger\n(http://www.brantmessenger.com/), Devan Penner-Woelk, Saulo Vallory, Wagner\nB. Soares, Artur Tchernychev, Valentina De Rosa, Jason Wong\n(http://carrot.org/), Christoph, Daniel Esteban, strftime, Mick@el, rezna,\nSimon Willison (http://simonwillison.net), Anton Ongson, Gabriel Paderni,\nMarco van Oort, penutbutterjelly, Philipp Lenssen, Bjorn Roesbeke\n(http://www.bjornroesbeke.be/), Bug?, Eric Nagel, Tomasz Wesolowski,\nEvertjan Garretsen, Bobby Drake, Blues (http://tech.bluesmoon.info/), Luke\nGodfrey, Pul, uestla, Alan C, Ulrich, Rafal Kukawski, Yves Sucaet,\nsowberry, Norman \"zEh\" Fuchs, hitwork, Zahlii, johnrembo, Nick Callen,\nSteven Levithan (stevenlevithan.com), ejsanders, Scott Baker, Brian Tafoya\n(http://www.premasolutions.com/), Philippe Jausions\n(http://pear.php.net/user/jausions), Aidan Lister\n(http://aidanlister.com/), Rob, e-mike, HKM, ChaosNo1, metjay, strcasecmp,\nstrcmp, Taras Bogach, jpfle, Alexander Ermolaev\n(http://snippets.dzone.com/user/AlexanderErmolaev), DxGx, kilops, Orlando,\ndptr1988, Le Torbi, James (http://www.james-bell.co.uk/), Pedro Tainha\n(http://www.pedrotainha.com), James, Arnout Kazemier\n(http://www.3rd-Eden.com), Chris McMacken, gabriel paderni, Yannoo,\nFGFEmperor, baris ozdil, Tod Gentille, Greg Frazier, jakes, 3D-GRAF, Allan\nJensen (http://www.winternet.no), Howard Yeend, Benjamin Lupton, davook,\ndaniel airton wermann (http://wermann.com.br), Atli T¨®r, Maximusya, Ryan\nW Tenney (http://ryan.10e.us), Alexander M Beedie, fearphage\n(http://http/my.opera.com/fearphage/), Nathan Sepulveda, Victor, Matteo,\nBilly, stensi, Cord, Manish, T.J. Leahy, Riddler\n(http://www.frontierwebdev.com/), Rafa? Kukawski, FremyCompany, Matt\nBradley, Tim de Koning, Luis Salazar (http://www.freaky-media.com/), Diogo\nResende, Rival, Andrej Pavlovic, Garagoth, Le Torbi\n(http://www.letorbi.de/), Dino, Josep Sanz (http://www.ws3.es/), rem,\nRussell Walker (http://www.nbill.co.uk/), Jamie Beck\n(http://www.terabit.ca/), setcookie, Michael, YUI Library:\nhttp://developer.yahoo.com/yui/docs/YAHOO.util.DateLocale.html, Blues at\nhttp://hacks.bluesmoon.info/strftime/strftime.js, Ben\n(http://benblume.co.uk/), DtTvB\n(http://dt.in.th/2008-09-16.string-length-in-bytes.html), Andreas, William,\nmeo, incidence, Cagri Ekin, Amirouche, Amir Habibi\n(http://www.residence-mixte.com/), Luke Smith (http://lucassmith.name),\nKheang Hok Chin (http://www.distantia.ca/), Jay Klehr, Lorenzo Pisani,\nTony, Yen-Wei Liu, Greenseed, mk.keck, Leslie Hoare, dude, booeyOH, Ben\nBryan\n\nLicensed under the MIT (MIT-LICENSE.txt) license.\n\nPermission is hereby granted, free of charge, to any person obtaining a\ncopy of this software and associated documentation files (the\n\"Software\"), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be included\nin all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\nOR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\nIN NO EVENT SHALL KEVIN VAN ZONNEVELD BE LIABLE FOR ANY CLAIM, DAMAGES\nOR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,\nARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\nOTHER DEALINGS IN THE SOFTWARE.\n*/\n\nfunction sprintf () {\n  // http://kevin.vanzonneveld.net\n  // +   original by: Ash Searle (http://hexmen.com/blog/)\n  // + namespaced by: Michael White (http://getsprink.com)\n  // +    tweaked by: Jack\n  // +   improved by: Kevin van Zonneveld (http://kevin.vanzonneveld.net)\n  // +      input by: Paulo Freitas\n  // +   improved by: Kevin van Zonneveld (http://kevin.vanzonneveld.net)\n  // +      input by: Brett Zamir (http://brett-zamir.me)\n  // +   improved by: Kevin van Zonneveld (http://kevin.vanzonneveld.net)\n  // +   improved by: Dj\n  // +   improved by: Allidylls\n  // *     example 1: sprintf(\"%01.2f\", 123.1);\n  // *     returns 1: 123.10\n  // *     example 2: sprintf(\"[%10s]\", 'monkey');\n  // *     returns 2: '[    monkey]'\n  // *     example 3: sprintf(\"[%'#10s]\", 'monkey');\n  // *     returns 3: '[####monkey]'\n  // *     example 4: sprintf(\"%d\", 123456789012345);\n  // *     returns 4: '123456789012345'\n  var regex = /%%|%(\\d+\\$)?([-+\\'#0 ]*)(\\*\\d+\\$|\\*|\\d+)?(\\.(\\*\\d+\\$|\\*|\\d+))?([scboxXuideEfFgG])/g;\n  var a = arguments,\n    i = 0,\n    format = a[i++];\n\n  // pad()\n  var pad = function (str, len, chr, leftJustify) {\n    if (!chr) {\n      chr = ' ';\n    }\n\n    var padding = (str.length >= len) ? '' : Array(1 + len - str.length >>> 0).join(chr);\n    return leftJustify ? str + padding : padding + str;\n  };\n\n  // justify()\n  var justify = function (value, prefix, leftJustify, minWidth, zeroPad, customPadChar) {\n    var diff = minWidth - value.length;\n    if (diff > 0) {\n      if (leftJustify || !zeroPad) {\n        value = pad(value, minWidth, customPadChar, leftJustify);\n      } else {\n        value = value.slice(0, prefix.length) + pad('', diff, '0', true) + value.slice(prefix.length);\n      }\n    }\n    return value;\n  };\n\n  // formatBaseX()\n  var formatBaseX = function (value, base, prefix, leftJustify, minWidth, precision, zeroPad) {\n    // Note: casts negative numbers to positive ones\n    var number = value >>> 0;\n    prefix = prefix && number && {\n      '2': '0b',\n      '8': '0',\n      '16': '0x'\n    }[base] || '';\n    value = prefix + pad(number.toString(base), precision || 0, '0', false);\n    return justify(value, prefix, leftJustify, minWidth, zeroPad);\n  };\n\n  // formatString()\n  var formatString = function (value, leftJustify, minWidth, precision, zeroPad, customPadChar) {\n    if (precision != null) {\n      value = value.slice(0, precision);\n    }\n    return justify(value, '', leftJustify, minWidth, zeroPad, customPadChar);\n  };\n\n  // doFormat()\n  var doFormat = function (substring, valueIndex, flags, minWidth, _, precision, type) {\n    var number;\n    var prefix;\n    var method;\n    var textTransform;\n    var value;\n\n    if (substring == '%%') {\n      return '%';\n    }\n\n    // parse flags\n    var leftJustify = false,\n      positivePrefix = '',\n      zeroPad = false,\n      prefixBaseX = false,\n      customPadChar = ' ';\n    var flagsl = flags.length;\n    for (var j = 0; flags && j < flagsl; j++) {\n      switch (flags.charAt(j)) {\n      case ' ':\n        positivePrefix = ' ';\n        break;\n      case '+':\n        positivePrefix = '+';\n        break;\n      case '-':\n        leftJustify = true;\n        break;\n      case \"'\":\n        customPadChar = flags.charAt(j + 1);\n        break;\n      case '0':\n        zeroPad = true;\n        break;\n      case '#':\n        prefixBaseX = true;\n        break;\n      }\n    }\n\n    // parameters may be null, undefined, empty-string or real valued\n    // we want to ignore null, undefined and empty-string values\n    if (!minWidth) {\n      minWidth = 0;\n    } else if (minWidth == '*') {\n      minWidth = +a[i++];\n    } else if (minWidth.charAt(0) == '*') {\n      minWidth = +a[minWidth.slice(1, -1)];\n    } else {\n      minWidth = +minWidth;\n    }\n\n    // Note: undocumented perl feature:\n    if (minWidth < 0) {\n      minWidth = -minWidth;\n      leftJustify = true;\n    }\n\n    if (!isFinite(minWidth)) {\n      throw new Error('sprintf: (minimum-)width must be finite');\n    }\n\n    if (!precision) {\n      precision = 'fFeE'.indexOf(type) > -1 ? 6 : (type == 'd') ? 0 : undefined;\n    } else if (precision == '*') {\n      precision = +a[i++];\n    } else if (precision.charAt(0) == '*') {\n      precision = +a[precision.slice(1, -1)];\n    } else {\n      precision = +precision;\n    }\n\n    // grab value using valueIndex if required?\n    value = valueIndex ? a[valueIndex.slice(0, -1)] : a[i++];\n\n    switch (type) {\n    case 's':\n      return formatString(String(value), leftJustify, minWidth, precision, zeroPad, customPadChar);\n    case 'c':\n      return formatString(String.fromCharCode(+value), leftJustify, minWidth, precision, zeroPad);\n    case 'b':\n      return formatBaseX(value, 2, prefixBaseX, leftJustify, minWidth, precision, zeroPad);\n    case 'o':\n      return formatBaseX(value, 8, prefixBaseX, leftJustify, minWidth, precision, zeroPad);\n    case 'x':\n      return formatBaseX(value, 16, prefixBaseX, leftJustify, minWidth, precision, zeroPad);\n    case 'X':\n      return formatBaseX(value, 16, prefixBaseX, leftJustify, minWidth, precision, zeroPad).toUpperCase();\n    case 'u':\n      return formatBaseX(value, 10, prefixBaseX, leftJustify, minWidth, precision, zeroPad);\n    case 'i':\n    case 'd':\n      number = +value || 0;\n      number = Math.round(number - number % 1); // Plain Math.round doesn't just truncate\n      prefix = number < 0 ? '-' : positivePrefix;\n      value = prefix + pad(String(Math.abs(number)), precision, '0', false);\n      return justify(value, prefix, leftJustify, minWidth, zeroPad);\n    case 'e':\n    case 'E':\n    case 'f': // Should handle locales (as per setlocale)\n    case 'F':\n    case 'g':\n    case 'G':\n      number = +value;\n      prefix = number < 0 ? '-' : positivePrefix;\n      method = ['toExponential', 'toFixed', 'toPrecision']['efg'.indexOf(type.toLowerCase())];\n      textTransform = ['toString', 'toUpperCase']['eEfFgG'.indexOf(type) % 2];\n      value = prefix + Math.abs(number)[method](precision);\n      return justify(value, prefix, leftJustify, minWidth, zeroPad)[textTransform]();\n    default:\n      return substring;\n    }\n  };\n\n  return format.replace(regex, doFormat);\n}\n\nexport default sprintf;\n"]},"metadata":{},"sourceType":"module"}
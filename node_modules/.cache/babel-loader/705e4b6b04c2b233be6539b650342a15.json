{"ast":null,"code":"var svgNS = \"http://www.w3.org/2000/svg\";\nvar svgClassName = \"cesium-svgPath-svg\";\n/**\n * A Knockout binding handler that creates a DOM element for a single SVG path.\n * This binding handler will be registered as cesiumSvgPath.\n *\n * <p>\n * The parameter to this binding is an object with the following properties:\n * </p>\n *\n * <ul>\n * <li>path: The SVG path as a string.</li>\n * <li>width: The width of the SVG path with no transformations applied.</li>\n * <li>height: The height of the SVG path with no transformations applied.</li>\n * <li>css: Optional. A string containing additional CSS classes to apply to the SVG. 'cesium-svgPath-svg' is always applied.</li>\n * </ul>\n *\n * @exports SvgPathBindingHandler\n *\n * @example\n * // Create an SVG as a child of a div\n * <div data-bind=\"cesiumSvgPath: { path: 'M 100 100 L 300 100 L 200 300 z', width: 28, height: 28 }\"></div>\n *\n * // parameters can be observable from the view model\n * <div data-bind=\"cesiumSvgPath: { path: currentPath, width: currentWidth, height: currentHeight }\"></div>\n *\n * // or the whole object can be observable from the view model\n * <div data-bind=\"cesiumSvgPath: svgPathOptions\"></div>\n */\n\nvar SvgPathBindingHandler = {\n  register: function (knockout) {\n    knockout.bindingHandlers.cesiumSvgPath = {\n      init: function (element, valueAccessor) {\n        var svg = document.createElementNS(svgNS, \"svg:svg\");\n        svg.setAttribute(\"class\", svgClassName);\n        var pathElement = document.createElementNS(svgNS, \"path\");\n        svg.appendChild(pathElement);\n        knockout.virtualElements.setDomNodeChildren(element, [svg]);\n        knockout.computed({\n          read: function () {\n            var value = knockout.unwrap(valueAccessor());\n            pathElement.setAttribute(\"d\", knockout.unwrap(value.path));\n            var pathWidth = knockout.unwrap(value.width);\n            var pathHeight = knockout.unwrap(value.height);\n            svg.setAttribute(\"width\", pathWidth);\n            svg.setAttribute(\"height\", pathHeight);\n            svg.setAttribute(\"viewBox\", \"0 0 \" + pathWidth + \" \" + pathHeight);\n\n            if (value.css) {\n              svg.setAttribute(\"class\", svgClassName + \" \" + knockout.unwrap(value.css));\n            }\n          },\n          disposeWhenNodeIsRemoved: element\n        });\n        return {\n          controlsDescendantBindings: true\n        };\n      }\n    };\n    knockout.virtualElements.allowedBindings.cesiumSvgPath = true;\n  }\n};\nexport default SvgPathBindingHandler;","map":{"version":3,"sources":["C:/Users/passa/Desktop/WaterDeployTrial/node_modules/cesium/Source/Widgets/SvgPathBindingHandler.js"],"names":["svgNS","svgClassName","SvgPathBindingHandler","register","knockout","bindingHandlers","cesiumSvgPath","init","element","valueAccessor","svg","document","createElementNS","setAttribute","pathElement","appendChild","virtualElements","setDomNodeChildren","computed","read","value","unwrap","path","pathWidth","width","pathHeight","height","css","disposeWhenNodeIsRemoved","controlsDescendantBindings","allowedBindings"],"mappings":"AAAA,IAAIA,KAAK,GAAG,4BAAZ;AACA,IAAIC,YAAY,GAAG,oBAAnB;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2BA,IAAIC,qBAAqB,GAAG;AAC1BC,EAAAA,QAAQ,EAAE,UAAUC,QAAV,EAAoB;AAC5BA,IAAAA,QAAQ,CAACC,eAAT,CAAyBC,aAAzB,GAAyC;AACvCC,MAAAA,IAAI,EAAE,UAAUC,OAAV,EAAmBC,aAAnB,EAAkC;AACtC,YAAIC,GAAG,GAAGC,QAAQ,CAACC,eAAT,CAAyBZ,KAAzB,EAAgC,SAAhC,CAAV;AACAU,QAAAA,GAAG,CAACG,YAAJ,CAAiB,OAAjB,EAA0BZ,YAA1B;AAEA,YAAIa,WAAW,GAAGH,QAAQ,CAACC,eAAT,CAAyBZ,KAAzB,EAAgC,MAAhC,CAAlB;AACAU,QAAAA,GAAG,CAACK,WAAJ,CAAgBD,WAAhB;AAEAV,QAAAA,QAAQ,CAACY,eAAT,CAAyBC,kBAAzB,CAA4CT,OAA5C,EAAqD,CAACE,GAAD,CAArD;AAEAN,QAAAA,QAAQ,CAACc,QAAT,CAAkB;AAChBC,UAAAA,IAAI,EAAE,YAAY;AAChB,gBAAIC,KAAK,GAAGhB,QAAQ,CAACiB,MAAT,CAAgBZ,aAAa,EAA7B,CAAZ;AAEAK,YAAAA,WAAW,CAACD,YAAZ,CAAyB,GAAzB,EAA8BT,QAAQ,CAACiB,MAAT,CAAgBD,KAAK,CAACE,IAAtB,CAA9B;AAEA,gBAAIC,SAAS,GAAGnB,QAAQ,CAACiB,MAAT,CAAgBD,KAAK,CAACI,KAAtB,CAAhB;AACA,gBAAIC,UAAU,GAAGrB,QAAQ,CAACiB,MAAT,CAAgBD,KAAK,CAACM,MAAtB,CAAjB;AAEAhB,YAAAA,GAAG,CAACG,YAAJ,CAAiB,OAAjB,EAA0BU,SAA1B;AACAb,YAAAA,GAAG,CAACG,YAAJ,CAAiB,QAAjB,EAA2BY,UAA3B;AACAf,YAAAA,GAAG,CAACG,YAAJ,CAAiB,SAAjB,EAA4B,SAASU,SAAT,GAAqB,GAArB,GAA2BE,UAAvD;;AAEA,gBAAIL,KAAK,CAACO,GAAV,EAAe;AACbjB,cAAAA,GAAG,CAACG,YAAJ,CACE,OADF,EAEEZ,YAAY,GAAG,GAAf,GAAqBG,QAAQ,CAACiB,MAAT,CAAgBD,KAAK,CAACO,GAAtB,CAFvB;AAID;AACF,WAnBe;AAoBhBC,UAAAA,wBAAwB,EAAEpB;AApBV,SAAlB;AAuBA,eAAO;AACLqB,UAAAA,0BAA0B,EAAE;AADvB,SAAP;AAGD;AApCsC,KAAzC;AAuCAzB,IAAAA,QAAQ,CAACY,eAAT,CAAyBc,eAAzB,CAAyCxB,aAAzC,GAAyD,IAAzD;AACD;AA1CyB,CAA5B;AA4CA,eAAeJ,qBAAf","sourcesContent":["var svgNS = \"http://www.w3.org/2000/svg\";\nvar svgClassName = \"cesium-svgPath-svg\";\n\n/**\n * A Knockout binding handler that creates a DOM element for a single SVG path.\n * This binding handler will be registered as cesiumSvgPath.\n *\n * <p>\n * The parameter to this binding is an object with the following properties:\n * </p>\n *\n * <ul>\n * <li>path: The SVG path as a string.</li>\n * <li>width: The width of the SVG path with no transformations applied.</li>\n * <li>height: The height of the SVG path with no transformations applied.</li>\n * <li>css: Optional. A string containing additional CSS classes to apply to the SVG. 'cesium-svgPath-svg' is always applied.</li>\n * </ul>\n *\n * @exports SvgPathBindingHandler\n *\n * @example\n * // Create an SVG as a child of a div\n * <div data-bind=\"cesiumSvgPath: { path: 'M 100 100 L 300 100 L 200 300 z', width: 28, height: 28 }\"></div>\n *\n * // parameters can be observable from the view model\n * <div data-bind=\"cesiumSvgPath: { path: currentPath, width: currentWidth, height: currentHeight }\"></div>\n *\n * // or the whole object can be observable from the view model\n * <div data-bind=\"cesiumSvgPath: svgPathOptions\"></div>\n */\nvar SvgPathBindingHandler = {\n  register: function (knockout) {\n    knockout.bindingHandlers.cesiumSvgPath = {\n      init: function (element, valueAccessor) {\n        var svg = document.createElementNS(svgNS, \"svg:svg\");\n        svg.setAttribute(\"class\", svgClassName);\n\n        var pathElement = document.createElementNS(svgNS, \"path\");\n        svg.appendChild(pathElement);\n\n        knockout.virtualElements.setDomNodeChildren(element, [svg]);\n\n        knockout.computed({\n          read: function () {\n            var value = knockout.unwrap(valueAccessor());\n\n            pathElement.setAttribute(\"d\", knockout.unwrap(value.path));\n\n            var pathWidth = knockout.unwrap(value.width);\n            var pathHeight = knockout.unwrap(value.height);\n\n            svg.setAttribute(\"width\", pathWidth);\n            svg.setAttribute(\"height\", pathHeight);\n            svg.setAttribute(\"viewBox\", \"0 0 \" + pathWidth + \" \" + pathHeight);\n\n            if (value.css) {\n              svg.setAttribute(\n                \"class\",\n                svgClassName + \" \" + knockout.unwrap(value.css)\n              );\n            }\n          },\n          disposeWhenNodeIsRemoved: element,\n        });\n\n        return {\n          controlsDescendantBindings: true,\n        };\n      },\n    };\n\n    knockout.virtualElements.allowedBindings.cesiumSvgPath = true;\n  },\n};\nexport default SvgPathBindingHandler;\n"]},"metadata":{},"sourceType":"module"}
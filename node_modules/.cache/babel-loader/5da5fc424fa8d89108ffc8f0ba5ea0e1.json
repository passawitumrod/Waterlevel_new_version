{"ast":null,"code":"import AttributeCompression from \"../Core/AttributeCompression.js\";\nimport Cartesian3 from \"../Core/Cartesian3.js\";\nimport Color from \"../Core/Color.js\";\nimport ComponentDatatype from \"../Core/ComponentDatatype.js\";\nimport defaultValue from \"../Core/defaultValue.js\";\nimport defined from \"../Core/defined.js\";\nimport deprecationWarning from \"../Core/deprecationWarning.js\";\nimport destroyObject from \"../Core/destroyObject.js\";\nimport DeveloperError from \"../Core/DeveloperError.js\";\nimport Ellipsoid from \"../Core/Ellipsoid.js\";\nimport getStringFromTypedArray from \"../Core/getStringFromTypedArray.js\";\nimport Matrix3 from \"../Core/Matrix3.js\";\nimport Matrix4 from \"../Core/Matrix4.js\";\nimport Quaternion from \"../Core/Quaternion.js\";\nimport RequestType from \"../Core/RequestType.js\";\nimport RuntimeError from \"../Core/RuntimeError.js\";\nimport Transforms from \"../Core/Transforms.js\";\nimport TranslationRotationScale from \"../Core/TranslationRotationScale.js\";\nimport Pass from \"../Renderer/Pass.js\";\nimport Axis from \"./Axis.js\";\nimport Cesium3DTileBatchTable from \"./Cesium3DTileBatchTable.js\";\nimport Cesium3DTileFeature from \"./Cesium3DTileFeature.js\";\nimport Cesium3DTileFeatureTable from \"./Cesium3DTileFeatureTable.js\";\nimport ModelInstanceCollection from \"./ModelInstanceCollection.js\";\n/**\n * Represents the contents of a\n * {@link https://github.com/CesiumGS/3d-tiles/tree/master/specification/TileFormats/Instanced3DModel|Instanced 3D Model}\n * tile in a {@link https://github.com/CesiumGS/3d-tiles/tree/master/specification|3D Tiles} tileset.\n * <p>\n * Implements the {@link Cesium3DTileContent} interface.\n * </p>\n *\n * @alias Instanced3DModel3DTileContent\n * @constructor\n *\n * @private\n */\n\nfunction Instanced3DModel3DTileContent(tileset, tile, resource, arrayBuffer, byteOffset) {\n  this._tileset = tileset;\n  this._tile = tile;\n  this._resource = resource;\n  this._modelInstanceCollection = undefined;\n  this._batchTable = undefined;\n  this._features = undefined;\n  this.featurePropertiesDirty = false;\n  initialize(this, arrayBuffer, byteOffset);\n} // This can be overridden for testing purposes\n\n\nInstanced3DModel3DTileContent._deprecationWarning = deprecationWarning;\nObject.defineProperties(Instanced3DModel3DTileContent.prototype, {\n  featuresLength: {\n    get: function get() {\n      return this._batchTable.featuresLength;\n    }\n  },\n  pointsLength: {\n    get: function get() {\n      return 0;\n    }\n  },\n  trianglesLength: {\n    get: function get() {\n      var model = this._modelInstanceCollection._model;\n\n      if (defined(model)) {\n        return model.trianglesLength;\n      }\n\n      return 0;\n    }\n  },\n  geometryByteLength: {\n    get: function get() {\n      var model = this._modelInstanceCollection._model;\n\n      if (defined(model)) {\n        return model.geometryByteLength;\n      }\n\n      return 0;\n    }\n  },\n  texturesByteLength: {\n    get: function get() {\n      var model = this._modelInstanceCollection._model;\n\n      if (defined(model)) {\n        return model.texturesByteLength;\n      }\n\n      return 0;\n    }\n  },\n  batchTableByteLength: {\n    get: function get() {\n      return this._batchTable.memorySizeInBytes;\n    }\n  },\n  innerContents: {\n    get: function get() {\n      return undefined;\n    }\n  },\n  readyPromise: {\n    get: function get() {\n      return this._modelInstanceCollection.readyPromise;\n    }\n  },\n  tileset: {\n    get: function get() {\n      return this._tileset;\n    }\n  },\n  tile: {\n    get: function get() {\n      return this._tile;\n    }\n  },\n  url: {\n    get: function get() {\n      return this._resource.getUrlComponent(true);\n    }\n  },\n  batchTable: {\n    get: function get() {\n      return this._batchTable;\n    }\n  }\n});\n\nfunction getPickIdCallback(content) {\n  return function () {\n    return content._batchTable.getPickId();\n  };\n}\n\nvar sizeOfUint32 = Uint32Array.BYTES_PER_ELEMENT;\nvar propertyScratch1 = new Array(4);\nvar propertyScratch2 = new Array(4);\n\nfunction initialize(content, arrayBuffer, byteOffset) {\n  var byteStart = defaultValue(byteOffset, 0);\n  byteOffset = byteStart;\n  var uint8Array = new Uint8Array(arrayBuffer);\n  var view = new DataView(arrayBuffer);\n  byteOffset += sizeOfUint32; // Skip magic\n\n  var version = view.getUint32(byteOffset, true);\n\n  if (version !== 1) {\n    throw new RuntimeError(\"Only Instanced 3D Model version 1 is supported. Version \" + version + \" is not.\");\n  }\n\n  byteOffset += sizeOfUint32;\n  var byteLength = view.getUint32(byteOffset, true);\n  byteOffset += sizeOfUint32;\n  var featureTableJsonByteLength = view.getUint32(byteOffset, true);\n\n  if (featureTableJsonByteLength === 0) {\n    throw new RuntimeError(\"featureTableJsonByteLength is zero, the feature table must be defined.\");\n  }\n\n  byteOffset += sizeOfUint32;\n  var featureTableBinaryByteLength = view.getUint32(byteOffset, true);\n  byteOffset += sizeOfUint32;\n  var batchTableJsonByteLength = view.getUint32(byteOffset, true);\n  byteOffset += sizeOfUint32;\n  var batchTableBinaryByteLength = view.getUint32(byteOffset, true);\n  byteOffset += sizeOfUint32;\n  var gltfFormat = view.getUint32(byteOffset, true);\n\n  if (gltfFormat !== 1 && gltfFormat !== 0) {\n    throw new RuntimeError(\"Only glTF format 0 (uri) or 1 (embedded) are supported. Format \" + gltfFormat + \" is not.\");\n  }\n\n  byteOffset += sizeOfUint32;\n  var featureTableString = getStringFromTypedArray(uint8Array, byteOffset, featureTableJsonByteLength);\n  var featureTableJson = JSON.parse(featureTableString);\n  byteOffset += featureTableJsonByteLength;\n  var featureTableBinary = new Uint8Array(arrayBuffer, byteOffset, featureTableBinaryByteLength);\n  byteOffset += featureTableBinaryByteLength;\n  var featureTable = new Cesium3DTileFeatureTable(featureTableJson, featureTableBinary);\n  var instancesLength = featureTable.getGlobalProperty(\"INSTANCES_LENGTH\");\n  featureTable.featuresLength = instancesLength;\n\n  if (!defined(instancesLength)) {\n    throw new RuntimeError(\"Feature table global property: INSTANCES_LENGTH must be defined\");\n  }\n\n  var batchTableJson;\n  var batchTableBinary;\n\n  if (batchTableJsonByteLength > 0) {\n    var batchTableString = getStringFromTypedArray(uint8Array, byteOffset, batchTableJsonByteLength);\n    batchTableJson = JSON.parse(batchTableString);\n    byteOffset += batchTableJsonByteLength;\n\n    if (batchTableBinaryByteLength > 0) {\n      // Has a batch table binary\n      batchTableBinary = new Uint8Array(arrayBuffer, byteOffset, batchTableBinaryByteLength); // Copy the batchTableBinary section and let the underlying ArrayBuffer be freed\n\n      batchTableBinary = new Uint8Array(batchTableBinary);\n      byteOffset += batchTableBinaryByteLength;\n    }\n  }\n\n  content._batchTable = new Cesium3DTileBatchTable(content, instancesLength, batchTableJson, batchTableBinary);\n  var gltfByteLength = byteStart + byteLength - byteOffset;\n\n  if (gltfByteLength === 0) {\n    throw new RuntimeError(\"glTF byte length is zero, i3dm must have a glTF to instance.\");\n  }\n\n  var gltfView;\n\n  if (byteOffset % 4 === 0) {\n    gltfView = new Uint8Array(arrayBuffer, byteOffset, gltfByteLength);\n  } else {\n    // Create a copy of the glb so that it is 4-byte aligned\n    Instanced3DModel3DTileContent._deprecationWarning(\"i3dm-glb-unaligned\", \"The embedded glb is not aligned to a 4-byte boundary.\");\n\n    gltfView = new Uint8Array(uint8Array.subarray(byteOffset, byteOffset + gltfByteLength));\n  }\n\n  var tileset = content._tileset; // Create model instance collection\n\n  var collectionOptions = {\n    instances: new Array(instancesLength),\n    batchTable: content._batchTable,\n    cull: false,\n    // Already culled by 3D Tiles\n    url: undefined,\n    requestType: RequestType.TILES3D,\n    gltf: undefined,\n    basePath: undefined,\n    incrementallyLoadTextures: false,\n    upAxis: tileset._gltfUpAxis,\n    forwardAxis: Axis.X,\n    opaquePass: Pass.CESIUM_3D_TILE,\n    // Draw opaque portions during the 3D Tiles pass\n    pickIdLoaded: getPickIdCallback(content),\n    imageBasedLightingFactor: tileset.imageBasedLightingFactor,\n    lightColor: tileset.lightColor,\n    luminanceAtZenith: tileset.luminanceAtZenith,\n    sphericalHarmonicCoefficients: tileset.sphericalHarmonicCoefficients,\n    specularEnvironmentMaps: tileset.specularEnvironmentMaps\n  };\n\n  if (gltfFormat === 0) {\n    var gltfUrl = getStringFromTypedArray(gltfView); // We need to remove padding from the end of the model URL in case this tile was part of a composite tile.\n    // This removes all white space and null characters from the end of the string.\n\n    gltfUrl = gltfUrl.replace(/[\\s\\0]+$/, \"\");\n    collectionOptions.url = content._resource.getDerivedResource({\n      url: gltfUrl\n    });\n  } else {\n    collectionOptions.gltf = gltfView;\n    collectionOptions.basePath = content._resource.clone();\n  }\n\n  var eastNorthUp = featureTable.getGlobalProperty(\"EAST_NORTH_UP\");\n  var rtcCenter;\n  var rtcCenterArray = featureTable.getGlobalProperty(\"RTC_CENTER\", ComponentDatatype.FLOAT, 3);\n\n  if (defined(rtcCenterArray)) {\n    rtcCenter = Cartesian3.unpack(rtcCenterArray);\n  }\n\n  var instances = collectionOptions.instances;\n  var instancePosition = new Cartesian3();\n  var instancePositionArray = new Array(3);\n  var instanceNormalRight = new Cartesian3();\n  var instanceNormalUp = new Cartesian3();\n  var instanceNormalForward = new Cartesian3();\n  var instanceRotation = new Matrix3();\n  var instanceQuaternion = new Quaternion();\n  var instanceScale = new Cartesian3();\n  var instanceTranslationRotationScale = new TranslationRotationScale();\n  var instanceTransform = new Matrix4();\n\n  for (var i = 0; i < instancesLength; i++) {\n    // Get the instance position\n    var position = featureTable.getProperty(\"POSITION\", ComponentDatatype.FLOAT, 3, i, propertyScratch1);\n\n    if (!defined(position)) {\n      position = instancePositionArray;\n      var positionQuantized = featureTable.getProperty(\"POSITION_QUANTIZED\", ComponentDatatype.UNSIGNED_SHORT, 3, i, propertyScratch1);\n\n      if (!defined(positionQuantized)) {\n        throw new RuntimeError(\"Either POSITION or POSITION_QUANTIZED must be defined for each instance.\");\n      }\n\n      var quantizedVolumeOffset = featureTable.getGlobalProperty(\"QUANTIZED_VOLUME_OFFSET\", ComponentDatatype.FLOAT, 3);\n\n      if (!defined(quantizedVolumeOffset)) {\n        throw new RuntimeError(\"Global property: QUANTIZED_VOLUME_OFFSET must be defined for quantized positions.\");\n      }\n\n      var quantizedVolumeScale = featureTable.getGlobalProperty(\"QUANTIZED_VOLUME_SCALE\", ComponentDatatype.FLOAT, 3);\n\n      if (!defined(quantizedVolumeScale)) {\n        throw new RuntimeError(\"Global property: QUANTIZED_VOLUME_SCALE must be defined for quantized positions.\");\n      }\n\n      for (var j = 0; j < 3; j++) {\n        position[j] = positionQuantized[j] / 65535.0 * quantizedVolumeScale[j] + quantizedVolumeOffset[j];\n      }\n    }\n\n    Cartesian3.unpack(position, 0, instancePosition);\n\n    if (defined(rtcCenter)) {\n      Cartesian3.add(instancePosition, rtcCenter, instancePosition);\n    }\n\n    instanceTranslationRotationScale.translation = instancePosition; // Get the instance rotation\n\n    var normalUp = featureTable.getProperty(\"NORMAL_UP\", ComponentDatatype.FLOAT, 3, i, propertyScratch1);\n    var normalRight = featureTable.getProperty(\"NORMAL_RIGHT\", ComponentDatatype.FLOAT, 3, i, propertyScratch2);\n    var hasCustomOrientation = false;\n\n    if (defined(normalUp)) {\n      if (!defined(normalRight)) {\n        throw new RuntimeError(\"To define a custom orientation, both NORMAL_UP and NORMAL_RIGHT must be defined.\");\n      }\n\n      Cartesian3.unpack(normalUp, 0, instanceNormalUp);\n      Cartesian3.unpack(normalRight, 0, instanceNormalRight);\n      hasCustomOrientation = true;\n    } else {\n      var octNormalUp = featureTable.getProperty(\"NORMAL_UP_OCT32P\", ComponentDatatype.UNSIGNED_SHORT, 2, i, propertyScratch1);\n      var octNormalRight = featureTable.getProperty(\"NORMAL_RIGHT_OCT32P\", ComponentDatatype.UNSIGNED_SHORT, 2, i, propertyScratch2);\n\n      if (defined(octNormalUp)) {\n        if (!defined(octNormalRight)) {\n          throw new RuntimeError(\"To define a custom orientation with oct-encoded vectors, both NORMAL_UP_OCT32P and NORMAL_RIGHT_OCT32P must be defined.\");\n        }\n\n        AttributeCompression.octDecodeInRange(octNormalUp[0], octNormalUp[1], 65535, instanceNormalUp);\n        AttributeCompression.octDecodeInRange(octNormalRight[0], octNormalRight[1], 65535, instanceNormalRight);\n        hasCustomOrientation = true;\n      } else if (eastNorthUp) {\n        Transforms.eastNorthUpToFixedFrame(instancePosition, Ellipsoid.WGS84, instanceTransform);\n        Matrix4.getMatrix3(instanceTransform, instanceRotation);\n      } else {\n        Matrix3.clone(Matrix3.IDENTITY, instanceRotation);\n      }\n    }\n\n    if (hasCustomOrientation) {\n      Cartesian3.cross(instanceNormalRight, instanceNormalUp, instanceNormalForward);\n      Cartesian3.normalize(instanceNormalForward, instanceNormalForward);\n      Matrix3.setColumn(instanceRotation, 0, instanceNormalRight, instanceRotation);\n      Matrix3.setColumn(instanceRotation, 1, instanceNormalUp, instanceRotation);\n      Matrix3.setColumn(instanceRotation, 2, instanceNormalForward, instanceRotation);\n    }\n\n    Quaternion.fromRotationMatrix(instanceRotation, instanceQuaternion);\n    instanceTranslationRotationScale.rotation = instanceQuaternion; // Get the instance scale\n\n    instanceScale = Cartesian3.fromElements(1.0, 1.0, 1.0, instanceScale);\n    var scale = featureTable.getProperty(\"SCALE\", ComponentDatatype.FLOAT, 1, i);\n\n    if (defined(scale)) {\n      Cartesian3.multiplyByScalar(instanceScale, scale, instanceScale);\n    }\n\n    var nonUniformScale = featureTable.getProperty(\"SCALE_NON_UNIFORM\", ComponentDatatype.FLOAT, 3, i, propertyScratch1);\n\n    if (defined(nonUniformScale)) {\n      instanceScale.x *= nonUniformScale[0];\n      instanceScale.y *= nonUniformScale[1];\n      instanceScale.z *= nonUniformScale[2];\n    }\n\n    instanceTranslationRotationScale.scale = instanceScale; // Get the batchId\n\n    var batchId = featureTable.getProperty(\"BATCH_ID\", ComponentDatatype.UNSIGNED_SHORT, 1, i);\n\n    if (!defined(batchId)) {\n      // If BATCH_ID semantic is undefined, batchId is just the instance number\n      batchId = i;\n    } // Create the model matrix and the instance\n\n\n    Matrix4.fromTranslationRotationScale(instanceTranslationRotationScale, instanceTransform);\n    var modelMatrix = instanceTransform.clone();\n    instances[i] = {\n      modelMatrix: modelMatrix,\n      batchId: batchId\n    };\n  }\n\n  content._modelInstanceCollection = new ModelInstanceCollection(collectionOptions);\n}\n\nfunction createFeatures(content) {\n  var featuresLength = content.featuresLength;\n\n  if (!defined(content._features) && featuresLength > 0) {\n    var features = new Array(featuresLength);\n\n    for (var i = 0; i < featuresLength; ++i) {\n      features[i] = new Cesium3DTileFeature(content, i);\n    }\n\n    content._features = features;\n  }\n}\n\nInstanced3DModel3DTileContent.prototype.hasProperty = function (batchId, name) {\n  return this._batchTable.hasProperty(batchId, name);\n};\n\nInstanced3DModel3DTileContent.prototype.getFeature = function (batchId) {\n  var featuresLength = this.featuresLength; //>>includeStart('debug', pragmas.debug);\n\n  if (!defined(batchId) || batchId < 0 || batchId >= featuresLength) {\n    throw new DeveloperError(\"batchId is required and between zero and featuresLength - 1 (\" + (featuresLength - 1) + \").\");\n  } //>>includeEnd('debug');\n\n\n  createFeatures(this);\n  return this._features[batchId];\n};\n\nInstanced3DModel3DTileContent.prototype.applyDebugSettings = function (enabled, color) {\n  color = enabled ? color : Color.WHITE;\n\n  this._batchTable.setAllColor(color);\n};\n\nInstanced3DModel3DTileContent.prototype.applyStyle = function (style) {\n  this._batchTable.applyStyle(style);\n};\n\nInstanced3DModel3DTileContent.prototype.update = function (tileset, frameState) {\n  var commandStart = frameState.commandList.length; // In the PROCESSING state we may be calling update() to move forward\n  // the content's resource loading.  In the READY state, it will\n  // actually generate commands.\n\n  this._batchTable.update(tileset, frameState);\n\n  this._modelInstanceCollection.modelMatrix = this._tile.computedTransform;\n  this._modelInstanceCollection.shadows = this._tileset.shadows;\n  this._modelInstanceCollection.lightColor = this._tileset.lightColor;\n  this._modelInstanceCollection.luminanceAtZenith = this._tileset.luminanceAtZenith;\n  this._modelInstanceCollection.sphericalHarmonicCoefficients = this._tileset.sphericalHarmonicCoefficients;\n  this._modelInstanceCollection.specularEnvironmentMaps = this._tileset.specularEnvironmentMaps;\n  this._modelInstanceCollection.debugWireframe = this._tileset.debugWireframe;\n  var model = this._modelInstanceCollection._model;\n\n  if (defined(model)) {\n    // Update for clipping planes\n    var tilesetClippingPlanes = this._tileset.clippingPlanes;\n    model.clippingPlanesOriginMatrix = this._tileset.clippingPlanesOriginMatrix;\n\n    if (defined(tilesetClippingPlanes) && this._tile.clippingPlanesDirty) {\n      // Dereference the clipping planes from the model if they are irrelevant - saves on shading\n      // Link/Dereference directly to avoid ownership checks.\n      model._clippingPlanes = tilesetClippingPlanes.enabled && this._tile._isClipped ? tilesetClippingPlanes : undefined;\n    } // If the model references a different ClippingPlaneCollection due to the tileset's collection being replaced with a\n    // ClippingPlaneCollection that gives this tile the same clipping status, update the model to use the new ClippingPlaneCollection.\n\n\n    if (defined(tilesetClippingPlanes) && defined(model._clippingPlanes) && model._clippingPlanes !== tilesetClippingPlanes) {\n      model._clippingPlanes = tilesetClippingPlanes;\n    }\n  }\n\n  this._modelInstanceCollection.update(frameState); // If any commands were pushed, add derived commands\n\n\n  var commandEnd = frameState.commandList.length;\n\n  if (commandStart < commandEnd && (frameState.passes.render || frameState.passes.pick)) {\n    this._batchTable.addDerivedCommands(frameState, commandStart, false);\n  }\n};\n\nInstanced3DModel3DTileContent.prototype.isDestroyed = function () {\n  return false;\n};\n\nInstanced3DModel3DTileContent.prototype.destroy = function () {\n  this._modelInstanceCollection = this._modelInstanceCollection && this._modelInstanceCollection.destroy();\n  this._batchTable = this._batchTable && this._batchTable.destroy();\n  return destroyObject(this);\n};\n\nexport default Instanced3DModel3DTileContent;","map":{"version":3,"sources":["C:/Users/passa/Desktop/WaterLevelReact/node_modules/cesium/Source/Scene/Instanced3DModel3DTileContent.js"],"names":["AttributeCompression","Cartesian3","Color","ComponentDatatype","defaultValue","defined","deprecationWarning","destroyObject","DeveloperError","Ellipsoid","getStringFromTypedArray","Matrix3","Matrix4","Quaternion","RequestType","RuntimeError","Transforms","TranslationRotationScale","Pass","Axis","Cesium3DTileBatchTable","Cesium3DTileFeature","Cesium3DTileFeatureTable","ModelInstanceCollection","Instanced3DModel3DTileContent","tileset","tile","resource","arrayBuffer","byteOffset","_tileset","_tile","_resource","_modelInstanceCollection","undefined","_batchTable","_features","featurePropertiesDirty","initialize","_deprecationWarning","Object","defineProperties","prototype","featuresLength","get","pointsLength","trianglesLength","model","_model","geometryByteLength","texturesByteLength","batchTableByteLength","memorySizeInBytes","innerContents","readyPromise","url","getUrlComponent","batchTable","getPickIdCallback","content","getPickId","sizeOfUint32","Uint32Array","BYTES_PER_ELEMENT","propertyScratch1","Array","propertyScratch2","byteStart","uint8Array","Uint8Array","view","DataView","version","getUint32","byteLength","featureTableJsonByteLength","featureTableBinaryByteLength","batchTableJsonByteLength","batchTableBinaryByteLength","gltfFormat","featureTableString","featureTableJson","JSON","parse","featureTableBinary","featureTable","instancesLength","getGlobalProperty","batchTableJson","batchTableBinary","batchTableString","gltfByteLength","gltfView","subarray","collectionOptions","instances","cull","requestType","TILES3D","gltf","basePath","incrementallyLoadTextures","upAxis","_gltfUpAxis","forwardAxis","X","opaquePass","CESIUM_3D_TILE","pickIdLoaded","imageBasedLightingFactor","lightColor","luminanceAtZenith","sphericalHarmonicCoefficients","specularEnvironmentMaps","gltfUrl","replace","getDerivedResource","clone","eastNorthUp","rtcCenter","rtcCenterArray","FLOAT","unpack","instancePosition","instancePositionArray","instanceNormalRight","instanceNormalUp","instanceNormalForward","instanceRotation","instanceQuaternion","instanceScale","instanceTranslationRotationScale","instanceTransform","i","position","getProperty","positionQuantized","UNSIGNED_SHORT","quantizedVolumeOffset","quantizedVolumeScale","j","add","translation","normalUp","normalRight","hasCustomOrientation","octNormalUp","octNormalRight","octDecodeInRange","eastNorthUpToFixedFrame","WGS84","getMatrix3","IDENTITY","cross","normalize","setColumn","fromRotationMatrix","rotation","fromElements","scale","multiplyByScalar","nonUniformScale","x","y","z","batchId","fromTranslationRotationScale","modelMatrix","createFeatures","features","hasProperty","name","getFeature","applyDebugSettings","enabled","color","WHITE","setAllColor","applyStyle","style","update","frameState","commandStart","commandList","length","computedTransform","shadows","debugWireframe","tilesetClippingPlanes","clippingPlanes","clippingPlanesOriginMatrix","clippingPlanesDirty","_clippingPlanes","_isClipped","commandEnd","passes","render","pick","addDerivedCommands","isDestroyed","destroy"],"mappings":"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","sourcesContent":["import AttributeCompression from \"../Core/AttributeCompression.js\";\nimport Cartesian3 from \"../Core/Cartesian3.js\";\nimport Color from \"../Core/Color.js\";\nimport ComponentDatatype from \"../Core/ComponentDatatype.js\";\nimport defaultValue from \"../Core/defaultValue.js\";\nimport defined from \"../Core/defined.js\";\nimport deprecationWarning from \"../Core/deprecationWarning.js\";\nimport destroyObject from \"../Core/destroyObject.js\";\nimport DeveloperError from \"../Core/DeveloperError.js\";\nimport Ellipsoid from \"../Core/Ellipsoid.js\";\nimport getStringFromTypedArray from \"../Core/getStringFromTypedArray.js\";\nimport Matrix3 from \"../Core/Matrix3.js\";\nimport Matrix4 from \"../Core/Matrix4.js\";\nimport Quaternion from \"../Core/Quaternion.js\";\nimport RequestType from \"../Core/RequestType.js\";\nimport RuntimeError from \"../Core/RuntimeError.js\";\nimport Transforms from \"../Core/Transforms.js\";\nimport TranslationRotationScale from \"../Core/TranslationRotationScale.js\";\nimport Pass from \"../Renderer/Pass.js\";\nimport Axis from \"./Axis.js\";\nimport Cesium3DTileBatchTable from \"./Cesium3DTileBatchTable.js\";\nimport Cesium3DTileFeature from \"./Cesium3DTileFeature.js\";\nimport Cesium3DTileFeatureTable from \"./Cesium3DTileFeatureTable.js\";\nimport ModelInstanceCollection from \"./ModelInstanceCollection.js\";\n\n/**\n * Represents the contents of a\n * {@link https://github.com/CesiumGS/3d-tiles/tree/master/specification/TileFormats/Instanced3DModel|Instanced 3D Model}\n * tile in a {@link https://github.com/CesiumGS/3d-tiles/tree/master/specification|3D Tiles} tileset.\n * <p>\n * Implements the {@link Cesium3DTileContent} interface.\n * </p>\n *\n * @alias Instanced3DModel3DTileContent\n * @constructor\n *\n * @private\n */\nfunction Instanced3DModel3DTileContent(\n  tileset,\n  tile,\n  resource,\n  arrayBuffer,\n  byteOffset\n) {\n  this._tileset = tileset;\n  this._tile = tile;\n  this._resource = resource;\n  this._modelInstanceCollection = undefined;\n  this._batchTable = undefined;\n  this._features = undefined;\n\n  this.featurePropertiesDirty = false;\n\n  initialize(this, arrayBuffer, byteOffset);\n}\n\n// This can be overridden for testing purposes\nInstanced3DModel3DTileContent._deprecationWarning = deprecationWarning;\n\nObject.defineProperties(Instanced3DModel3DTileContent.prototype, {\n  featuresLength: {\n    get: function () {\n      return this._batchTable.featuresLength;\n    },\n  },\n\n  pointsLength: {\n    get: function () {\n      return 0;\n    },\n  },\n\n  trianglesLength: {\n    get: function () {\n      var model = this._modelInstanceCollection._model;\n      if (defined(model)) {\n        return model.trianglesLength;\n      }\n      return 0;\n    },\n  },\n\n  geometryByteLength: {\n    get: function () {\n      var model = this._modelInstanceCollection._model;\n      if (defined(model)) {\n        return model.geometryByteLength;\n      }\n      return 0;\n    },\n  },\n\n  texturesByteLength: {\n    get: function () {\n      var model = this._modelInstanceCollection._model;\n      if (defined(model)) {\n        return model.texturesByteLength;\n      }\n      return 0;\n    },\n  },\n\n  batchTableByteLength: {\n    get: function () {\n      return this._batchTable.memorySizeInBytes;\n    },\n  },\n\n  innerContents: {\n    get: function () {\n      return undefined;\n    },\n  },\n\n  readyPromise: {\n    get: function () {\n      return this._modelInstanceCollection.readyPromise;\n    },\n  },\n\n  tileset: {\n    get: function () {\n      return this._tileset;\n    },\n  },\n\n  tile: {\n    get: function () {\n      return this._tile;\n    },\n  },\n\n  url: {\n    get: function () {\n      return this._resource.getUrlComponent(true);\n    },\n  },\n\n  batchTable: {\n    get: function () {\n      return this._batchTable;\n    },\n  },\n});\n\nfunction getPickIdCallback(content) {\n  return function () {\n    return content._batchTable.getPickId();\n  };\n}\n\nvar sizeOfUint32 = Uint32Array.BYTES_PER_ELEMENT;\nvar propertyScratch1 = new Array(4);\nvar propertyScratch2 = new Array(4);\n\nfunction initialize(content, arrayBuffer, byteOffset) {\n  var byteStart = defaultValue(byteOffset, 0);\n  byteOffset = byteStart;\n\n  var uint8Array = new Uint8Array(arrayBuffer);\n  var view = new DataView(arrayBuffer);\n  byteOffset += sizeOfUint32; // Skip magic\n\n  var version = view.getUint32(byteOffset, true);\n  if (version !== 1) {\n    throw new RuntimeError(\n      \"Only Instanced 3D Model version 1 is supported. Version \" +\n        version +\n        \" is not.\"\n    );\n  }\n  byteOffset += sizeOfUint32;\n\n  var byteLength = view.getUint32(byteOffset, true);\n  byteOffset += sizeOfUint32;\n\n  var featureTableJsonByteLength = view.getUint32(byteOffset, true);\n  if (featureTableJsonByteLength === 0) {\n    throw new RuntimeError(\n      \"featureTableJsonByteLength is zero, the feature table must be defined.\"\n    );\n  }\n  byteOffset += sizeOfUint32;\n\n  var featureTableBinaryByteLength = view.getUint32(byteOffset, true);\n  byteOffset += sizeOfUint32;\n\n  var batchTableJsonByteLength = view.getUint32(byteOffset, true);\n  byteOffset += sizeOfUint32;\n\n  var batchTableBinaryByteLength = view.getUint32(byteOffset, true);\n  byteOffset += sizeOfUint32;\n\n  var gltfFormat = view.getUint32(byteOffset, true);\n  if (gltfFormat !== 1 && gltfFormat !== 0) {\n    throw new RuntimeError(\n      \"Only glTF format 0 (uri) or 1 (embedded) are supported. Format \" +\n        gltfFormat +\n        \" is not.\"\n    );\n  }\n  byteOffset += sizeOfUint32;\n\n  var featureTableString = getStringFromTypedArray(\n    uint8Array,\n    byteOffset,\n    featureTableJsonByteLength\n  );\n  var featureTableJson = JSON.parse(featureTableString);\n  byteOffset += featureTableJsonByteLength;\n\n  var featureTableBinary = new Uint8Array(\n    arrayBuffer,\n    byteOffset,\n    featureTableBinaryByteLength\n  );\n  byteOffset += featureTableBinaryByteLength;\n\n  var featureTable = new Cesium3DTileFeatureTable(\n    featureTableJson,\n    featureTableBinary\n  );\n  var instancesLength = featureTable.getGlobalProperty(\"INSTANCES_LENGTH\");\n  featureTable.featuresLength = instancesLength;\n\n  if (!defined(instancesLength)) {\n    throw new RuntimeError(\n      \"Feature table global property: INSTANCES_LENGTH must be defined\"\n    );\n  }\n\n  var batchTableJson;\n  var batchTableBinary;\n  if (batchTableJsonByteLength > 0) {\n    var batchTableString = getStringFromTypedArray(\n      uint8Array,\n      byteOffset,\n      batchTableJsonByteLength\n    );\n    batchTableJson = JSON.parse(batchTableString);\n    byteOffset += batchTableJsonByteLength;\n\n    if (batchTableBinaryByteLength > 0) {\n      // Has a batch table binary\n      batchTableBinary = new Uint8Array(\n        arrayBuffer,\n        byteOffset,\n        batchTableBinaryByteLength\n      );\n      // Copy the batchTableBinary section and let the underlying ArrayBuffer be freed\n      batchTableBinary = new Uint8Array(batchTableBinary);\n      byteOffset += batchTableBinaryByteLength;\n    }\n  }\n\n  content._batchTable = new Cesium3DTileBatchTable(\n    content,\n    instancesLength,\n    batchTableJson,\n    batchTableBinary\n  );\n\n  var gltfByteLength = byteStart + byteLength - byteOffset;\n  if (gltfByteLength === 0) {\n    throw new RuntimeError(\n      \"glTF byte length is zero, i3dm must have a glTF to instance.\"\n    );\n  }\n\n  var gltfView;\n  if (byteOffset % 4 === 0) {\n    gltfView = new Uint8Array(arrayBuffer, byteOffset, gltfByteLength);\n  } else {\n    // Create a copy of the glb so that it is 4-byte aligned\n    Instanced3DModel3DTileContent._deprecationWarning(\n      \"i3dm-glb-unaligned\",\n      \"The embedded glb is not aligned to a 4-byte boundary.\"\n    );\n    gltfView = new Uint8Array(\n      uint8Array.subarray(byteOffset, byteOffset + gltfByteLength)\n    );\n  }\n\n  var tileset = content._tileset;\n\n  // Create model instance collection\n  var collectionOptions = {\n    instances: new Array(instancesLength),\n    batchTable: content._batchTable,\n    cull: false, // Already culled by 3D Tiles\n    url: undefined,\n    requestType: RequestType.TILES3D,\n    gltf: undefined,\n    basePath: undefined,\n    incrementallyLoadTextures: false,\n    upAxis: tileset._gltfUpAxis,\n    forwardAxis: Axis.X,\n    opaquePass: Pass.CESIUM_3D_TILE, // Draw opaque portions during the 3D Tiles pass\n    pickIdLoaded: getPickIdCallback(content),\n    imageBasedLightingFactor: tileset.imageBasedLightingFactor,\n    lightColor: tileset.lightColor,\n    luminanceAtZenith: tileset.luminanceAtZenith,\n    sphericalHarmonicCoefficients: tileset.sphericalHarmonicCoefficients,\n    specularEnvironmentMaps: tileset.specularEnvironmentMaps,\n  };\n\n  if (gltfFormat === 0) {\n    var gltfUrl = getStringFromTypedArray(gltfView);\n\n    // We need to remove padding from the end of the model URL in case this tile was part of a composite tile.\n    // This removes all white space and null characters from the end of the string.\n    gltfUrl = gltfUrl.replace(/[\\s\\0]+$/, \"\");\n    collectionOptions.url = content._resource.getDerivedResource({\n      url: gltfUrl,\n    });\n  } else {\n    collectionOptions.gltf = gltfView;\n    collectionOptions.basePath = content._resource.clone();\n  }\n\n  var eastNorthUp = featureTable.getGlobalProperty(\"EAST_NORTH_UP\");\n\n  var rtcCenter;\n  var rtcCenterArray = featureTable.getGlobalProperty(\n    \"RTC_CENTER\",\n    ComponentDatatype.FLOAT,\n    3\n  );\n  if (defined(rtcCenterArray)) {\n    rtcCenter = Cartesian3.unpack(rtcCenterArray);\n  }\n\n  var instances = collectionOptions.instances;\n  var instancePosition = new Cartesian3();\n  var instancePositionArray = new Array(3);\n  var instanceNormalRight = new Cartesian3();\n  var instanceNormalUp = new Cartesian3();\n  var instanceNormalForward = new Cartesian3();\n  var instanceRotation = new Matrix3();\n  var instanceQuaternion = new Quaternion();\n  var instanceScale = new Cartesian3();\n  var instanceTranslationRotationScale = new TranslationRotationScale();\n  var instanceTransform = new Matrix4();\n  for (var i = 0; i < instancesLength; i++) {\n    // Get the instance position\n    var position = featureTable.getProperty(\n      \"POSITION\",\n      ComponentDatatype.FLOAT,\n      3,\n      i,\n      propertyScratch1\n    );\n    if (!defined(position)) {\n      position = instancePositionArray;\n      var positionQuantized = featureTable.getProperty(\n        \"POSITION_QUANTIZED\",\n        ComponentDatatype.UNSIGNED_SHORT,\n        3,\n        i,\n        propertyScratch1\n      );\n      if (!defined(positionQuantized)) {\n        throw new RuntimeError(\n          \"Either POSITION or POSITION_QUANTIZED must be defined for each instance.\"\n        );\n      }\n      var quantizedVolumeOffset = featureTable.getGlobalProperty(\n        \"QUANTIZED_VOLUME_OFFSET\",\n        ComponentDatatype.FLOAT,\n        3\n      );\n      if (!defined(quantizedVolumeOffset)) {\n        throw new RuntimeError(\n          \"Global property: QUANTIZED_VOLUME_OFFSET must be defined for quantized positions.\"\n        );\n      }\n      var quantizedVolumeScale = featureTable.getGlobalProperty(\n        \"QUANTIZED_VOLUME_SCALE\",\n        ComponentDatatype.FLOAT,\n        3\n      );\n      if (!defined(quantizedVolumeScale)) {\n        throw new RuntimeError(\n          \"Global property: QUANTIZED_VOLUME_SCALE must be defined for quantized positions.\"\n        );\n      }\n      for (var j = 0; j < 3; j++) {\n        position[j] =\n          (positionQuantized[j] / 65535.0) * quantizedVolumeScale[j] +\n          quantizedVolumeOffset[j];\n      }\n    }\n    Cartesian3.unpack(position, 0, instancePosition);\n    if (defined(rtcCenter)) {\n      Cartesian3.add(instancePosition, rtcCenter, instancePosition);\n    }\n    instanceTranslationRotationScale.translation = instancePosition;\n\n    // Get the instance rotation\n    var normalUp = featureTable.getProperty(\n      \"NORMAL_UP\",\n      ComponentDatatype.FLOAT,\n      3,\n      i,\n      propertyScratch1\n    );\n    var normalRight = featureTable.getProperty(\n      \"NORMAL_RIGHT\",\n      ComponentDatatype.FLOAT,\n      3,\n      i,\n      propertyScratch2\n    );\n    var hasCustomOrientation = false;\n    if (defined(normalUp)) {\n      if (!defined(normalRight)) {\n        throw new RuntimeError(\n          \"To define a custom orientation, both NORMAL_UP and NORMAL_RIGHT must be defined.\"\n        );\n      }\n      Cartesian3.unpack(normalUp, 0, instanceNormalUp);\n      Cartesian3.unpack(normalRight, 0, instanceNormalRight);\n      hasCustomOrientation = true;\n    } else {\n      var octNormalUp = featureTable.getProperty(\n        \"NORMAL_UP_OCT32P\",\n        ComponentDatatype.UNSIGNED_SHORT,\n        2,\n        i,\n        propertyScratch1\n      );\n      var octNormalRight = featureTable.getProperty(\n        \"NORMAL_RIGHT_OCT32P\",\n        ComponentDatatype.UNSIGNED_SHORT,\n        2,\n        i,\n        propertyScratch2\n      );\n      if (defined(octNormalUp)) {\n        if (!defined(octNormalRight)) {\n          throw new RuntimeError(\n            \"To define a custom orientation with oct-encoded vectors, both NORMAL_UP_OCT32P and NORMAL_RIGHT_OCT32P must be defined.\"\n          );\n        }\n        AttributeCompression.octDecodeInRange(\n          octNormalUp[0],\n          octNormalUp[1],\n          65535,\n          instanceNormalUp\n        );\n        AttributeCompression.octDecodeInRange(\n          octNormalRight[0],\n          octNormalRight[1],\n          65535,\n          instanceNormalRight\n        );\n        hasCustomOrientation = true;\n      } else if (eastNorthUp) {\n        Transforms.eastNorthUpToFixedFrame(\n          instancePosition,\n          Ellipsoid.WGS84,\n          instanceTransform\n        );\n        Matrix4.getMatrix3(instanceTransform, instanceRotation);\n      } else {\n        Matrix3.clone(Matrix3.IDENTITY, instanceRotation);\n      }\n    }\n    if (hasCustomOrientation) {\n      Cartesian3.cross(\n        instanceNormalRight,\n        instanceNormalUp,\n        instanceNormalForward\n      );\n      Cartesian3.normalize(instanceNormalForward, instanceNormalForward);\n      Matrix3.setColumn(\n        instanceRotation,\n        0,\n        instanceNormalRight,\n        instanceRotation\n      );\n      Matrix3.setColumn(\n        instanceRotation,\n        1,\n        instanceNormalUp,\n        instanceRotation\n      );\n      Matrix3.setColumn(\n        instanceRotation,\n        2,\n        instanceNormalForward,\n        instanceRotation\n      );\n    }\n    Quaternion.fromRotationMatrix(instanceRotation, instanceQuaternion);\n    instanceTranslationRotationScale.rotation = instanceQuaternion;\n\n    // Get the instance scale\n    instanceScale = Cartesian3.fromElements(1.0, 1.0, 1.0, instanceScale);\n    var scale = featureTable.getProperty(\n      \"SCALE\",\n      ComponentDatatype.FLOAT,\n      1,\n      i\n    );\n    if (defined(scale)) {\n      Cartesian3.multiplyByScalar(instanceScale, scale, instanceScale);\n    }\n    var nonUniformScale = featureTable.getProperty(\n      \"SCALE_NON_UNIFORM\",\n      ComponentDatatype.FLOAT,\n      3,\n      i,\n      propertyScratch1\n    );\n    if (defined(nonUniformScale)) {\n      instanceScale.x *= nonUniformScale[0];\n      instanceScale.y *= nonUniformScale[1];\n      instanceScale.z *= nonUniformScale[2];\n    }\n    instanceTranslationRotationScale.scale = instanceScale;\n\n    // Get the batchId\n    var batchId = featureTable.getProperty(\n      \"BATCH_ID\",\n      ComponentDatatype.UNSIGNED_SHORT,\n      1,\n      i\n    );\n    if (!defined(batchId)) {\n      // If BATCH_ID semantic is undefined, batchId is just the instance number\n      batchId = i;\n    }\n\n    // Create the model matrix and the instance\n    Matrix4.fromTranslationRotationScale(\n      instanceTranslationRotationScale,\n      instanceTransform\n    );\n    var modelMatrix = instanceTransform.clone();\n    instances[i] = {\n      modelMatrix: modelMatrix,\n      batchId: batchId,\n    };\n  }\n\n  content._modelInstanceCollection = new ModelInstanceCollection(\n    collectionOptions\n  );\n}\n\nfunction createFeatures(content) {\n  var featuresLength = content.featuresLength;\n  if (!defined(content._features) && featuresLength > 0) {\n    var features = new Array(featuresLength);\n    for (var i = 0; i < featuresLength; ++i) {\n      features[i] = new Cesium3DTileFeature(content, i);\n    }\n    content._features = features;\n  }\n}\n\nInstanced3DModel3DTileContent.prototype.hasProperty = function (batchId, name) {\n  return this._batchTable.hasProperty(batchId, name);\n};\n\nInstanced3DModel3DTileContent.prototype.getFeature = function (batchId) {\n  var featuresLength = this.featuresLength;\n  //>>includeStart('debug', pragmas.debug);\n  if (!defined(batchId) || batchId < 0 || batchId >= featuresLength) {\n    throw new DeveloperError(\n      \"batchId is required and between zero and featuresLength - 1 (\" +\n        (featuresLength - 1) +\n        \").\"\n    );\n  }\n  //>>includeEnd('debug');\n\n  createFeatures(this);\n  return this._features[batchId];\n};\n\nInstanced3DModel3DTileContent.prototype.applyDebugSettings = function (\n  enabled,\n  color\n) {\n  color = enabled ? color : Color.WHITE;\n  this._batchTable.setAllColor(color);\n};\n\nInstanced3DModel3DTileContent.prototype.applyStyle = function (style) {\n  this._batchTable.applyStyle(style);\n};\n\nInstanced3DModel3DTileContent.prototype.update = function (\n  tileset,\n  frameState\n) {\n  var commandStart = frameState.commandList.length;\n\n  // In the PROCESSING state we may be calling update() to move forward\n  // the content's resource loading.  In the READY state, it will\n  // actually generate commands.\n  this._batchTable.update(tileset, frameState);\n  this._modelInstanceCollection.modelMatrix = this._tile.computedTransform;\n  this._modelInstanceCollection.shadows = this._tileset.shadows;\n  this._modelInstanceCollection.lightColor = this._tileset.lightColor;\n  this._modelInstanceCollection.luminanceAtZenith = this._tileset.luminanceAtZenith;\n  this._modelInstanceCollection.sphericalHarmonicCoefficients = this._tileset.sphericalHarmonicCoefficients;\n  this._modelInstanceCollection.specularEnvironmentMaps = this._tileset.specularEnvironmentMaps;\n  this._modelInstanceCollection.debugWireframe = this._tileset.debugWireframe;\n\n  var model = this._modelInstanceCollection._model;\n\n  if (defined(model)) {\n    // Update for clipping planes\n    var tilesetClippingPlanes = this._tileset.clippingPlanes;\n    model.clippingPlanesOriginMatrix = this._tileset.clippingPlanesOriginMatrix;\n    if (defined(tilesetClippingPlanes) && this._tile.clippingPlanesDirty) {\n      // Dereference the clipping planes from the model if they are irrelevant - saves on shading\n      // Link/Dereference directly to avoid ownership checks.\n      model._clippingPlanes =\n        tilesetClippingPlanes.enabled && this._tile._isClipped\n          ? tilesetClippingPlanes\n          : undefined;\n    }\n\n    // If the model references a different ClippingPlaneCollection due to the tileset's collection being replaced with a\n    // ClippingPlaneCollection that gives this tile the same clipping status, update the model to use the new ClippingPlaneCollection.\n    if (\n      defined(tilesetClippingPlanes) &&\n      defined(model._clippingPlanes) &&\n      model._clippingPlanes !== tilesetClippingPlanes\n    ) {\n      model._clippingPlanes = tilesetClippingPlanes;\n    }\n  }\n\n  this._modelInstanceCollection.update(frameState);\n\n  // If any commands were pushed, add derived commands\n  var commandEnd = frameState.commandList.length;\n  if (\n    commandStart < commandEnd &&\n    (frameState.passes.render || frameState.passes.pick)\n  ) {\n    this._batchTable.addDerivedCommands(frameState, commandStart, false);\n  }\n};\n\nInstanced3DModel3DTileContent.prototype.isDestroyed = function () {\n  return false;\n};\n\nInstanced3DModel3DTileContent.prototype.destroy = function () {\n  this._modelInstanceCollection =\n    this._modelInstanceCollection && this._modelInstanceCollection.destroy();\n  this._batchTable = this._batchTable && this._batchTable.destroy();\n\n  return destroyObject(this);\n};\nexport default Instanced3DModel3DTileContent;\n"]},"metadata":{},"sourceType":"module"}
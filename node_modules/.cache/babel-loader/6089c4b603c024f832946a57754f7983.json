{"ast":null,"code":"import defaultValue from \"./defaultValue.js\";\nimport defined from \"./defined.js\";\n/**\n * Defines a heading angle, pitch angle, and range in a local frame.\n * Heading is the rotation from the local north direction where a positive angle is increasing eastward.\n * Pitch is the rotation from the local xy-plane. Positive pitch angles are above the plane. Negative pitch\n * angles are below the plane. Range is the distance from the center of the frame.\n * @alias HeadingPitchRange\n * @constructor\n *\n * @param {Number} [heading=0.0] The heading angle in radians.\n * @param {Number} [pitch=0.0] The pitch angle in radians.\n * @param {Number} [range=0.0] The distance from the center in meters.\n */\n\nfunction HeadingPitchRange(heading, pitch, range) {\n  /**\n   * Heading is the rotation from the local north direction where a positive angle is increasing eastward.\n   * @type {Number}\n   */\n  this.heading = defaultValue(heading, 0.0);\n  /**\n   * Pitch is the rotation from the local xy-plane. Positive pitch angles\n   * are above the plane. Negative pitch angles are below the plane.\n   * @type {Number}\n   */\n\n  this.pitch = defaultValue(pitch, 0.0);\n  /**\n   * Range is the distance from the center of the local frame.\n   * @type {Number}\n   */\n\n  this.range = defaultValue(range, 0.0);\n}\n/**\n * Duplicates a HeadingPitchRange instance.\n *\n * @param {HeadingPitchRange} hpr The HeadingPitchRange to duplicate.\n * @param {HeadingPitchRange} [result] The object onto which to store the result.\n * @returns {HeadingPitchRange} The modified result parameter or a new HeadingPitchRange instance if one was not provided. (Returns undefined if hpr is undefined)\n */\n\n\nHeadingPitchRange.clone = function (hpr, result) {\n  if (!defined(hpr)) {\n    return undefined;\n  }\n\n  if (!defined(result)) {\n    result = new HeadingPitchRange();\n  }\n\n  result.heading = hpr.heading;\n  result.pitch = hpr.pitch;\n  result.range = hpr.range;\n  return result;\n};\n\nexport default HeadingPitchRange;","map":{"version":3,"sources":["C:/Users/passa/Desktop/WaterLevelReact/node_modules/cesium/Source/Core/HeadingPitchRange.js"],"names":["defaultValue","defined","HeadingPitchRange","heading","pitch","range","clone","hpr","result","undefined"],"mappings":"AAAA,OAAOA,YAAP,MAAyB,mBAAzB;AACA,OAAOC,OAAP,MAAoB,cAApB;AAEA;;;;;;;;;;;;;AAYA,SAASC,iBAAT,CAA2BC,OAA3B,EAAoCC,KAApC,EAA2CC,KAA3C,EAAkD;AAChD;;;;AAIA,OAAKF,OAAL,GAAeH,YAAY,CAACG,OAAD,EAAU,GAAV,CAA3B;AAEA;;;;;;AAKA,OAAKC,KAAL,GAAaJ,YAAY,CAACI,KAAD,EAAQ,GAAR,CAAzB;AAEA;;;;;AAIA,OAAKC,KAAL,GAAaL,YAAY,CAACK,KAAD,EAAQ,GAAR,CAAzB;AACD;AAED;;;;;;;;;AAOAH,iBAAiB,CAACI,KAAlB,GAA0B,UAAUC,GAAV,EAAeC,MAAf,EAAuB;AAC/C,MAAI,CAACP,OAAO,CAACM,GAAD,CAAZ,EAAmB;AACjB,WAAOE,SAAP;AACD;;AACD,MAAI,CAACR,OAAO,CAACO,MAAD,CAAZ,EAAsB;AACpBA,IAAAA,MAAM,GAAG,IAAIN,iBAAJ,EAAT;AACD;;AAEDM,EAAAA,MAAM,CAACL,OAAP,GAAiBI,GAAG,CAACJ,OAArB;AACAK,EAAAA,MAAM,CAACJ,KAAP,GAAeG,GAAG,CAACH,KAAnB;AACAI,EAAAA,MAAM,CAACH,KAAP,GAAeE,GAAG,CAACF,KAAnB;AACA,SAAOG,MAAP;AACD,CAZD;;AAaA,eAAeN,iBAAf","sourcesContent":["import defaultValue from \"./defaultValue.js\";\nimport defined from \"./defined.js\";\n\n/**\n * Defines a heading angle, pitch angle, and range in a local frame.\n * Heading is the rotation from the local north direction where a positive angle is increasing eastward.\n * Pitch is the rotation from the local xy-plane. Positive pitch angles are above the plane. Negative pitch\n * angles are below the plane. Range is the distance from the center of the frame.\n * @alias HeadingPitchRange\n * @constructor\n *\n * @param {Number} [heading=0.0] The heading angle in radians.\n * @param {Number} [pitch=0.0] The pitch angle in radians.\n * @param {Number} [range=0.0] The distance from the center in meters.\n */\nfunction HeadingPitchRange(heading, pitch, range) {\n  /**\n   * Heading is the rotation from the local north direction where a positive angle is increasing eastward.\n   * @type {Number}\n   */\n  this.heading = defaultValue(heading, 0.0);\n\n  /**\n   * Pitch is the rotation from the local xy-plane. Positive pitch angles\n   * are above the plane. Negative pitch angles are below the plane.\n   * @type {Number}\n   */\n  this.pitch = defaultValue(pitch, 0.0);\n\n  /**\n   * Range is the distance from the center of the local frame.\n   * @type {Number}\n   */\n  this.range = defaultValue(range, 0.0);\n}\n\n/**\n * Duplicates a HeadingPitchRange instance.\n *\n * @param {HeadingPitchRange} hpr The HeadingPitchRange to duplicate.\n * @param {HeadingPitchRange} [result] The object onto which to store the result.\n * @returns {HeadingPitchRange} The modified result parameter or a new HeadingPitchRange instance if one was not provided. (Returns undefined if hpr is undefined)\n */\nHeadingPitchRange.clone = function (hpr, result) {\n  if (!defined(hpr)) {\n    return undefined;\n  }\n  if (!defined(result)) {\n    result = new HeadingPitchRange();\n  }\n\n  result.heading = hpr.heading;\n  result.pitch = hpr.pitch;\n  result.range = hpr.range;\n  return result;\n};\nexport default HeadingPitchRange;\n"]},"metadata":{},"sourceType":"module"}
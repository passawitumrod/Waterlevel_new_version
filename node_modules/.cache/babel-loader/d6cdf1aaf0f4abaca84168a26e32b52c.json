{"ast":null,"code":"import Cartesian3 from \"../Core/Cartesian3.js\";\nimport EllipsoidalOccluder from \"../Core/EllipsoidalOccluder.js\";\n/**\n * A set of occluders that can be used to test quadtree tiles for occlusion.\n *\n * @alias QuadtreeOccluders\n * @constructor\n * @private\n *\n * @param {Ellipsoid} [options.ellipsoid=Ellipsoid.WGS84] The ellipsoid that potentially occludes tiles.\n */\n\nfunction QuadtreeOccluders(options) {\n  this._ellipsoid = new EllipsoidalOccluder(options.ellipsoid, Cartesian3.ZERO);\n}\n\nObject.defineProperties(QuadtreeOccluders.prototype, {\n  /**\n   * Gets the {@link EllipsoidalOccluder} that can be used to determine if a point is\n   * occluded by an {@link Ellipsoid}.\n   * @type {EllipsoidalOccluder}\n   * @memberof QuadtreeOccluders.prototype\n   */\n  ellipsoid: {\n    get: function () {\n      return this._ellipsoid;\n    }\n  }\n});\nexport default QuadtreeOccluders;","map":{"version":3,"sources":["C:/Users/passa/Desktop/WaterDeployTrial/node_modules/cesium/Source/Scene/QuadtreeOccluders.js"],"names":["Cartesian3","EllipsoidalOccluder","QuadtreeOccluders","options","_ellipsoid","ellipsoid","ZERO","Object","defineProperties","prototype","get"],"mappings":"AAAA,OAAOA,UAAP,MAAuB,uBAAvB;AACA,OAAOC,mBAAP,MAAgC,gCAAhC;AAEA;;;;;;;;;;AASA,SAASC,iBAAT,CAA2BC,OAA3B,EAAoC;AAClC,OAAKC,UAAL,GAAkB,IAAIH,mBAAJ,CAAwBE,OAAO,CAACE,SAAhC,EAA2CL,UAAU,CAACM,IAAtD,CAAlB;AACD;;AAEDC,MAAM,CAACC,gBAAP,CAAwBN,iBAAiB,CAACO,SAA1C,EAAqD;AACnD;;;;;;AAMAJ,EAAAA,SAAS,EAAE;AACTK,IAAAA,GAAG,EAAE,YAAY;AACf,aAAO,KAAKN,UAAZ;AACD;AAHQ;AAPwC,CAArD;AAaA,eAAeF,iBAAf","sourcesContent":["import Cartesian3 from \"../Core/Cartesian3.js\";\nimport EllipsoidalOccluder from \"../Core/EllipsoidalOccluder.js\";\n\n/**\n * A set of occluders that can be used to test quadtree tiles for occlusion.\n *\n * @alias QuadtreeOccluders\n * @constructor\n * @private\n *\n * @param {Ellipsoid} [options.ellipsoid=Ellipsoid.WGS84] The ellipsoid that potentially occludes tiles.\n */\nfunction QuadtreeOccluders(options) {\n  this._ellipsoid = new EllipsoidalOccluder(options.ellipsoid, Cartesian3.ZERO);\n}\n\nObject.defineProperties(QuadtreeOccluders.prototype, {\n  /**\n   * Gets the {@link EllipsoidalOccluder} that can be used to determine if a point is\n   * occluded by an {@link Ellipsoid}.\n   * @type {EllipsoidalOccluder}\n   * @memberof QuadtreeOccluders.prototype\n   */\n  ellipsoid: {\n    get: function () {\n      return this._ellipsoid;\n    },\n  },\n});\nexport default QuadtreeOccluders;\n"]},"metadata":{},"sourceType":"module"}
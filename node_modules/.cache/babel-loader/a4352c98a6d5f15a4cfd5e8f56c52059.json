{"ast":null,"code":"import DeveloperError from \"../Core/DeveloperError.js\";\n/**\n * If element is a string, look up the element in the DOM by ID.  Otherwise return element.\n *\n * @private\n *\n * @exception {DeveloperError} Element with id \"id\" does not exist in the document.\n */\n\nfunction getElement(element) {\n  if (typeof element === \"string\") {\n    var foundElement = document.getElementById(element); //>>includeStart('debug', pragmas.debug);\n\n    if (foundElement === null) {\n      throw new DeveloperError('Element with id \"' + element + '\" does not exist in the document.');\n    } //>>includeEnd('debug');\n\n\n    element = foundElement;\n  }\n\n  return element;\n}\n\nexport default getElement;","map":{"version":3,"sources":["C:/Users/passa/Desktop/WaterDeployTrial/node_modules/cesium/Source/Widgets/getElement.js"],"names":["DeveloperError","getElement","element","foundElement","document","getElementById"],"mappings":"AAAA,OAAOA,cAAP,MAA2B,2BAA3B;AAEA;;;;;;;;AAOA,SAASC,UAAT,CAAoBC,OAApB,EAA6B;AAC3B,MAAI,OAAOA,OAAP,KAAmB,QAAvB,EAAiC;AAC/B,QAAIC,YAAY,GAAGC,QAAQ,CAACC,cAAT,CAAwBH,OAAxB,CAAnB,CAD+B,CAG/B;;AACA,QAAIC,YAAY,KAAK,IAArB,EAA2B;AACzB,YAAM,IAAIH,cAAJ,CACJ,sBAAsBE,OAAtB,GAAgC,mCAD5B,CAAN;AAGD,KAR8B,CAS/B;;;AAEAA,IAAAA,OAAO,GAAGC,YAAV;AACD;;AACD,SAAOD,OAAP;AACD;;AACD,eAAeD,UAAf","sourcesContent":["import DeveloperError from \"../Core/DeveloperError.js\";\n\n/**\n * If element is a string, look up the element in the DOM by ID.  Otherwise return element.\n *\n * @private\n *\n * @exception {DeveloperError} Element with id \"id\" does not exist in the document.\n */\nfunction getElement(element) {\n  if (typeof element === \"string\") {\n    var foundElement = document.getElementById(element);\n\n    //>>includeStart('debug', pragmas.debug);\n    if (foundElement === null) {\n      throw new DeveloperError(\n        'Element with id \"' + element + '\" does not exist in the document.'\n      );\n    }\n    //>>includeEnd('debug');\n\n    element = foundElement;\n  }\n  return element;\n}\nexport default getElement;\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"//This file is automatically rebuilt by the Cesium build process.\nexport default \"/**\\n\\\n * @private\\n\\\n */\\n\\\nfloat czm_alphaWeight(float a)\\n\\\n{\\n\\\n    float z = (gl_FragCoord.z - czm_viewportTransformation[3][2]) / czm_viewportTransformation[2][2];\\n\\\n\\n\\\n    // See Weighted Blended Order-Independent Transparency for examples of different weighting functions:\\n\\\n    // http://jcgt.org/published/0002/02/09/\\n\\\n    return pow(a + 0.01, 4.0) + max(1e-2, min(3.0 * 1e3, 0.003 / (1e-5 + pow(abs(z) / 200.0, 4.0))));\\n\\\n}\\n\\\n\";","map":{"version":3,"sources":["C:/Users/passa/Desktop/WaterDeployTrial/node_modules/cesium/Source/Shaders/Builtin/Functions/alphaWeight.js"],"names":[],"mappings":"AAAA;AACA,eAAe;;;;;;;;;;;CAAf","sourcesContent":["//This file is automatically rebuilt by the Cesium build process.\nexport default \"/**\\n\\\n * @private\\n\\\n */\\n\\\nfloat czm_alphaWeight(float a)\\n\\\n{\\n\\\n    float z = (gl_FragCoord.z - czm_viewportTransformation[3][2]) / czm_viewportTransformation[2][2];\\n\\\n\\n\\\n    // See Weighted Blended Order-Independent Transparency for examples of different weighting functions:\\n\\\n    // http://jcgt.org/published/0002/02/09/\\n\\\n    return pow(a + 0.01, 4.0) + max(1e-2, min(3.0 * 1e3, 0.003 / (1e-5 + pow(abs(z) / 200.0, 4.0))));\\n\\\n}\\n\\\n\";\n"]},"metadata":{},"sourceType":"module"}
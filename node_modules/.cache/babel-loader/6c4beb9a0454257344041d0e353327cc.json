{"ast":null,"code":"import Cartesian2 from \"../Core/Cartesian2.js\";\nimport Color from \"../Core/Color.js\";\nimport defined from \"../Core/defined.js\";\nimport destroyObject from \"../Core/destroyObject.js\";\nimport PixelFormat from \"../Core/PixelFormat.js\";\nimport PrimitiveType from \"../Core/PrimitiveType.js\";\nimport ClearCommand from \"../Renderer/ClearCommand.js\";\nimport DrawCommand from \"../Renderer/DrawCommand.js\";\nimport Framebuffer from \"../Renderer/Framebuffer.js\";\nimport Pass from \"../Renderer/Pass.js\";\nimport PixelDatatype from \"../Renderer/PixelDatatype.js\";\nimport RenderState from \"../Renderer/RenderState.js\";\nimport Sampler from \"../Renderer/Sampler.js\";\nimport ShaderSource from \"../Renderer/ShaderSource.js\";\nimport Texture from \"../Renderer/Texture.js\";\nimport BlendingState from \"../Scene/BlendingState.js\";\nimport StencilConstants from \"../Scene/StencilConstants.js\";\nimport PointCloudEyeDomeLightingShader from \"../Shaders/PostProcessStages/PointCloudEyeDomeLighting.js\";\n/**\n * Eye dome lighting. Does not support points with per-point translucency, but does allow translucent styling against the globe.\n * Requires support for EXT_frag_depth and WEBGL_draw_buffers extensions in WebGL 1.0.\n *\n * @private\n */\n\nfunction PointCloudEyeDomeLighting() {\n  this._framebuffer = undefined;\n  this._colorGBuffer = undefined; // color gbuffer\n\n  this._depthGBuffer = undefined; // depth gbuffer\n\n  this._depthTexture = undefined; // needed to write depth so camera based on depth works\n\n  this._drawCommand = undefined;\n  this._clearCommand = undefined;\n  this._strength = 1.0;\n  this._radius = 1.0;\n}\n\nfunction destroyFramebuffer(processor) {\n  var framebuffer = processor._framebuffer;\n\n  if (!defined(framebuffer)) {\n    return;\n  }\n\n  processor._colorGBuffer.destroy();\n\n  processor._depthGBuffer.destroy();\n\n  processor._depthTexture.destroy();\n\n  framebuffer.destroy();\n  processor._framebuffer = undefined;\n  processor._colorGBuffer = undefined;\n  processor._depthGBuffer = undefined;\n  processor._depthTexture = undefined;\n  processor._drawCommand = undefined;\n  processor._clearCommand = undefined;\n}\n\nfunction createFramebuffer(processor, context) {\n  var screenWidth = context.drawingBufferWidth;\n  var screenHeight = context.drawingBufferHeight;\n  var colorGBuffer = new Texture({\n    context: context,\n    width: screenWidth,\n    height: screenHeight,\n    pixelFormat: PixelFormat.RGBA,\n    pixelDatatype: PixelDatatype.UNSIGNED_BYTE,\n    sampler: Sampler.NEAREST\n  });\n  var depthGBuffer = new Texture({\n    context: context,\n    width: screenWidth,\n    height: screenHeight,\n    pixelFormat: PixelFormat.RGBA,\n    pixelDatatype: PixelDatatype.UNSIGNED_BYTE,\n    sampler: Sampler.NEAREST\n  });\n  var depthTexture = new Texture({\n    context: context,\n    width: screenWidth,\n    height: screenHeight,\n    pixelFormat: PixelFormat.DEPTH_COMPONENT,\n    pixelDatatype: PixelDatatype.UNSIGNED_INT,\n    sampler: Sampler.NEAREST\n  });\n  processor._framebuffer = new Framebuffer({\n    context: context,\n    colorTextures: [colorGBuffer, depthGBuffer],\n    depthTexture: depthTexture,\n    destroyAttachments: false\n  });\n  processor._colorGBuffer = colorGBuffer;\n  processor._depthGBuffer = depthGBuffer;\n  processor._depthTexture = depthTexture;\n}\n\nvar distanceAndEdlStrengthScratch = new Cartesian2();\n\nfunction createCommands(processor, context) {\n  var blendFS = PointCloudEyeDomeLightingShader;\n  var blendUniformMap = {\n    u_pointCloud_colorGBuffer: function () {\n      return processor._colorGBuffer;\n    },\n    u_pointCloud_depthGBuffer: function () {\n      return processor._depthGBuffer;\n    },\n    u_distanceAndEdlStrength: function () {\n      distanceAndEdlStrengthScratch.x = processor._radius;\n      distanceAndEdlStrengthScratch.y = processor._strength;\n      return distanceAndEdlStrengthScratch;\n    }\n  };\n  var blendRenderState = RenderState.fromCache({\n    blending: BlendingState.ALPHA_BLEND,\n    depthMask: true,\n    depthTest: {\n      enabled: true\n    },\n    stencilTest: StencilConstants.setCesium3DTileBit(),\n    stencilMask: StencilConstants.CESIUM_3D_TILE_MASK\n  });\n  processor._drawCommand = context.createViewportQuadCommand(blendFS, {\n    uniformMap: blendUniformMap,\n    renderState: blendRenderState,\n    pass: Pass.CESIUM_3D_TILE,\n    owner: processor\n  });\n  processor._clearCommand = new ClearCommand({\n    framebuffer: processor._framebuffer,\n    color: new Color(0.0, 0.0, 0.0, 0.0),\n    depth: 1.0,\n    renderState: RenderState.fromCache(),\n    pass: Pass.CESIUM_3D_TILE,\n    owner: processor\n  });\n}\n\nfunction createResources(processor, context) {\n  var screenWidth = context.drawingBufferWidth;\n  var screenHeight = context.drawingBufferHeight;\n  var colorGBuffer = processor._colorGBuffer;\n  var nowDirty = false;\n  var resized = defined(colorGBuffer) && (colorGBuffer.width !== screenWidth || colorGBuffer.height !== screenHeight);\n\n  if (!defined(colorGBuffer) || resized) {\n    destroyFramebuffer(processor);\n    createFramebuffer(processor, context);\n    createCommands(processor, context);\n    nowDirty = true;\n  }\n\n  return nowDirty;\n}\n\nfunction isSupported(context) {\n  return context.drawBuffers && context.fragmentDepth;\n}\n\nPointCloudEyeDomeLighting.isSupported = isSupported;\n\nfunction getECShaderProgram(context, shaderProgram) {\n  var shader = context.shaderCache.getDerivedShaderProgram(shaderProgram, \"EC\");\n\n  if (!defined(shader)) {\n    var attributeLocations = shaderProgram._attributeLocations;\n    var fs = shaderProgram.fragmentShaderSource.clone();\n    fs.sources = fs.sources.map(function (source) {\n      source = ShaderSource.replaceMain(source, \"czm_point_cloud_post_process_main\");\n      source = source.replace(/gl_FragColor/g, \"gl_FragData[0]\");\n      return source;\n    });\n    fs.sources.unshift(\"#extension GL_EXT_draw_buffers : enable \\n\");\n    fs.sources.push(\"void main() \\n\" + \"{ \\n\" + \"    czm_point_cloud_post_process_main(); \\n\" + \"#ifdef LOG_DEPTH\\n\" + \"    czm_writeLogDepth();\\n\" + \"    gl_FragData[1] = czm_packDepth(gl_FragDepthEXT); \\n\" + \"#else\\n\" + \"    gl_FragData[1] = czm_packDepth(gl_FragCoord.z);\\n\" + \"#endif\\n\" + \"}\");\n    shader = context.shaderCache.createDerivedShaderProgram(shaderProgram, \"EC\", {\n      vertexShaderSource: shaderProgram.vertexShaderSource,\n      fragmentShaderSource: fs,\n      attributeLocations: attributeLocations\n    });\n  }\n\n  return shader;\n}\n\nPointCloudEyeDomeLighting.prototype.update = function (frameState, commandStart, pointCloudShading, boundingVolume) {\n  if (!isSupported(frameState.context)) {\n    return;\n  }\n\n  this._strength = pointCloudShading.eyeDomeLightingStrength;\n  this._radius = pointCloudShading.eyeDomeLightingRadius * frameState.pixelRatio;\n  var dirty = createResources(this, frameState.context); // Hijack existing point commands to render into an offscreen FBO.\n\n  var i;\n  var commandList = frameState.commandList;\n  var commandEnd = commandList.length;\n\n  for (i = commandStart; i < commandEnd; ++i) {\n    var command = commandList[i];\n\n    if (command.primitiveType !== PrimitiveType.POINTS || command.pass === Pass.TRANSLUCENT) {\n      continue;\n    }\n\n    var derivedCommand = command.derivedCommands.pointCloudProcessor;\n\n    if (!defined(derivedCommand) || command.dirty || dirty || derivedCommand.framebuffer !== this._framebuffer) {\n      // Prevent crash when tiles out-of-view come in-view during context size change\n      derivedCommand = DrawCommand.shallowClone(command);\n      command.derivedCommands.pointCloudProcessor = derivedCommand;\n      derivedCommand.framebuffer = this._framebuffer;\n      derivedCommand.shaderProgram = getECShaderProgram(frameState.context, command.shaderProgram);\n      derivedCommand.castShadows = false;\n      derivedCommand.receiveShadows = false;\n    }\n\n    commandList[i] = derivedCommand;\n  }\n\n  var clearCommand = this._clearCommand;\n  var blendCommand = this._drawCommand;\n  blendCommand.boundingVolume = boundingVolume; // Blend EDL into the main FBO\n\n  commandList.push(blendCommand);\n  commandList.push(clearCommand);\n};\n/**\n * Returns true if this object was destroyed; otherwise, false.\n * <br /><br />\n * If this object was destroyed, it should not be used; calling any function other than\n * <code>isDestroyed</code> will result in a {@link DeveloperError} exception.\n *\n * @returns {Boolean} <code>true</code> if this object was destroyed; otherwise, <code>false</code>.\n *\n * @see PointCloudEyeDomeLighting#destroy\n */\n\n\nPointCloudEyeDomeLighting.prototype.isDestroyed = function () {\n  return false;\n};\n/**\n * Destroys the WebGL resources held by this object.  Destroying an object allows for deterministic\n * release of WebGL resources, instead of relying on the garbage collector to destroy this object.\n * <br /><br />\n * Once an object is destroyed, it should not be used; calling any function other than\n * <code>isDestroyed</code> will result in a {@link DeveloperError} exception.  Therefore,\n * assign the return value (<code>undefined</code>) to the object as done in the example.\n *\n * @exception {DeveloperError} This object was destroyed, i.e., destroy() was called.\n *\n * @example\n * processor = processor && processor.destroy();\n *\n * @see PointCloudEyeDomeLighting#isDestroyed\n */\n\n\nPointCloudEyeDomeLighting.prototype.destroy = function () {\n  destroyFramebuffer(this);\n  return destroyObject(this);\n};\n\nexport default PointCloudEyeDomeLighting;","map":{"version":3,"sources":["C:/Users/passa/Desktop/WaterLevelReact/node_modules/cesium/Source/Scene/PointCloudEyeDomeLighting.js"],"names":["Cartesian2","Color","defined","destroyObject","PixelFormat","PrimitiveType","ClearCommand","DrawCommand","Framebuffer","Pass","PixelDatatype","RenderState","Sampler","ShaderSource","Texture","BlendingState","StencilConstants","PointCloudEyeDomeLightingShader","PointCloudEyeDomeLighting","_framebuffer","undefined","_colorGBuffer","_depthGBuffer","_depthTexture","_drawCommand","_clearCommand","_strength","_radius","destroyFramebuffer","processor","framebuffer","destroy","createFramebuffer","context","screenWidth","drawingBufferWidth","screenHeight","drawingBufferHeight","colorGBuffer","width","height","pixelFormat","RGBA","pixelDatatype","UNSIGNED_BYTE","sampler","NEAREST","depthGBuffer","depthTexture","DEPTH_COMPONENT","UNSIGNED_INT","colorTextures","destroyAttachments","distanceAndEdlStrengthScratch","createCommands","blendFS","blendUniformMap","u_pointCloud_colorGBuffer","u_pointCloud_depthGBuffer","u_distanceAndEdlStrength","x","y","blendRenderState","fromCache","blending","ALPHA_BLEND","depthMask","depthTest","enabled","stencilTest","setCesium3DTileBit","stencilMask","CESIUM_3D_TILE_MASK","createViewportQuadCommand","uniformMap","renderState","pass","CESIUM_3D_TILE","owner","color","depth","createResources","nowDirty","resized","isSupported","drawBuffers","fragmentDepth","getECShaderProgram","shaderProgram","shader","shaderCache","getDerivedShaderProgram","attributeLocations","_attributeLocations","fs","fragmentShaderSource","clone","sources","map","source","replaceMain","replace","unshift","push","createDerivedShaderProgram","vertexShaderSource","prototype","update","frameState","commandStart","pointCloudShading","boundingVolume","eyeDomeLightingStrength","eyeDomeLightingRadius","pixelRatio","dirty","i","commandList","commandEnd","length","command","primitiveType","POINTS","TRANSLUCENT","derivedCommand","derivedCommands","pointCloudProcessor","shallowClone","castShadows","receiveShadows","clearCommand","blendCommand","isDestroyed"],"mappings":"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","sourcesContent":["import Cartesian2 from \"../Core/Cartesian2.js\";\nimport Color from \"../Core/Color.js\";\nimport defined from \"../Core/defined.js\";\nimport destroyObject from \"../Core/destroyObject.js\";\nimport PixelFormat from \"../Core/PixelFormat.js\";\nimport PrimitiveType from \"../Core/PrimitiveType.js\";\nimport ClearCommand from \"../Renderer/ClearCommand.js\";\nimport DrawCommand from \"../Renderer/DrawCommand.js\";\nimport Framebuffer from \"../Renderer/Framebuffer.js\";\nimport Pass from \"../Renderer/Pass.js\";\nimport PixelDatatype from \"../Renderer/PixelDatatype.js\";\nimport RenderState from \"../Renderer/RenderState.js\";\nimport Sampler from \"../Renderer/Sampler.js\";\nimport ShaderSource from \"../Renderer/ShaderSource.js\";\nimport Texture from \"../Renderer/Texture.js\";\nimport BlendingState from \"../Scene/BlendingState.js\";\nimport StencilConstants from \"../Scene/StencilConstants.js\";\nimport PointCloudEyeDomeLightingShader from \"../Shaders/PostProcessStages/PointCloudEyeDomeLighting.js\";\n\n/**\n * Eye dome lighting. Does not support points with per-point translucency, but does allow translucent styling against the globe.\n * Requires support for EXT_frag_depth and WEBGL_draw_buffers extensions in WebGL 1.0.\n *\n * @private\n */\nfunction PointCloudEyeDomeLighting() {\n  this._framebuffer = undefined;\n  this._colorGBuffer = undefined; // color gbuffer\n  this._depthGBuffer = undefined; // depth gbuffer\n  this._depthTexture = undefined; // needed to write depth so camera based on depth works\n  this._drawCommand = undefined;\n  this._clearCommand = undefined;\n\n  this._strength = 1.0;\n  this._radius = 1.0;\n}\n\nfunction destroyFramebuffer(processor) {\n  var framebuffer = processor._framebuffer;\n  if (!defined(framebuffer)) {\n    return;\n  }\n\n  processor._colorGBuffer.destroy();\n  processor._depthGBuffer.destroy();\n  processor._depthTexture.destroy();\n  framebuffer.destroy();\n\n  processor._framebuffer = undefined;\n  processor._colorGBuffer = undefined;\n  processor._depthGBuffer = undefined;\n  processor._depthTexture = undefined;\n  processor._drawCommand = undefined;\n  processor._clearCommand = undefined;\n}\n\nfunction createFramebuffer(processor, context) {\n  var screenWidth = context.drawingBufferWidth;\n  var screenHeight = context.drawingBufferHeight;\n\n  var colorGBuffer = new Texture({\n    context: context,\n    width: screenWidth,\n    height: screenHeight,\n    pixelFormat: PixelFormat.RGBA,\n    pixelDatatype: PixelDatatype.UNSIGNED_BYTE,\n    sampler: Sampler.NEAREST,\n  });\n\n  var depthGBuffer = new Texture({\n    context: context,\n    width: screenWidth,\n    height: screenHeight,\n    pixelFormat: PixelFormat.RGBA,\n    pixelDatatype: PixelDatatype.UNSIGNED_BYTE,\n    sampler: Sampler.NEAREST,\n  });\n\n  var depthTexture = new Texture({\n    context: context,\n    width: screenWidth,\n    height: screenHeight,\n    pixelFormat: PixelFormat.DEPTH_COMPONENT,\n    pixelDatatype: PixelDatatype.UNSIGNED_INT,\n    sampler: Sampler.NEAREST,\n  });\n\n  processor._framebuffer = new Framebuffer({\n    context: context,\n    colorTextures: [colorGBuffer, depthGBuffer],\n    depthTexture: depthTexture,\n    destroyAttachments: false,\n  });\n  processor._colorGBuffer = colorGBuffer;\n  processor._depthGBuffer = depthGBuffer;\n  processor._depthTexture = depthTexture;\n}\n\nvar distanceAndEdlStrengthScratch = new Cartesian2();\n\nfunction createCommands(processor, context) {\n  var blendFS = PointCloudEyeDomeLightingShader;\n\n  var blendUniformMap = {\n    u_pointCloud_colorGBuffer: function () {\n      return processor._colorGBuffer;\n    },\n    u_pointCloud_depthGBuffer: function () {\n      return processor._depthGBuffer;\n    },\n    u_distanceAndEdlStrength: function () {\n      distanceAndEdlStrengthScratch.x = processor._radius;\n      distanceAndEdlStrengthScratch.y = processor._strength;\n      return distanceAndEdlStrengthScratch;\n    },\n  };\n\n  var blendRenderState = RenderState.fromCache({\n    blending: BlendingState.ALPHA_BLEND,\n    depthMask: true,\n    depthTest: {\n      enabled: true,\n    },\n    stencilTest: StencilConstants.setCesium3DTileBit(),\n    stencilMask: StencilConstants.CESIUM_3D_TILE_MASK,\n  });\n\n  processor._drawCommand = context.createViewportQuadCommand(blendFS, {\n    uniformMap: blendUniformMap,\n    renderState: blendRenderState,\n    pass: Pass.CESIUM_3D_TILE,\n    owner: processor,\n  });\n\n  processor._clearCommand = new ClearCommand({\n    framebuffer: processor._framebuffer,\n    color: new Color(0.0, 0.0, 0.0, 0.0),\n    depth: 1.0,\n    renderState: RenderState.fromCache(),\n    pass: Pass.CESIUM_3D_TILE,\n    owner: processor,\n  });\n}\n\nfunction createResources(processor, context) {\n  var screenWidth = context.drawingBufferWidth;\n  var screenHeight = context.drawingBufferHeight;\n  var colorGBuffer = processor._colorGBuffer;\n  var nowDirty = false;\n  var resized =\n    defined(colorGBuffer) &&\n    (colorGBuffer.width !== screenWidth ||\n      colorGBuffer.height !== screenHeight);\n\n  if (!defined(colorGBuffer) || resized) {\n    destroyFramebuffer(processor);\n    createFramebuffer(processor, context);\n    createCommands(processor, context);\n    nowDirty = true;\n  }\n  return nowDirty;\n}\n\nfunction isSupported(context) {\n  return context.drawBuffers && context.fragmentDepth;\n}\n\nPointCloudEyeDomeLighting.isSupported = isSupported;\n\nfunction getECShaderProgram(context, shaderProgram) {\n  var shader = context.shaderCache.getDerivedShaderProgram(shaderProgram, \"EC\");\n  if (!defined(shader)) {\n    var attributeLocations = shaderProgram._attributeLocations;\n\n    var fs = shaderProgram.fragmentShaderSource.clone();\n\n    fs.sources = fs.sources.map(function (source) {\n      source = ShaderSource.replaceMain(\n        source,\n        \"czm_point_cloud_post_process_main\"\n      );\n      source = source.replace(/gl_FragColor/g, \"gl_FragData[0]\");\n      return source;\n    });\n\n    fs.sources.unshift(\"#extension GL_EXT_draw_buffers : enable \\n\");\n    fs.sources.push(\n      \"void main() \\n\" +\n        \"{ \\n\" +\n        \"    czm_point_cloud_post_process_main(); \\n\" +\n        \"#ifdef LOG_DEPTH\\n\" +\n        \"    czm_writeLogDepth();\\n\" +\n        \"    gl_FragData[1] = czm_packDepth(gl_FragDepthEXT); \\n\" +\n        \"#else\\n\" +\n        \"    gl_FragData[1] = czm_packDepth(gl_FragCoord.z);\\n\" +\n        \"#endif\\n\" +\n        \"}\"\n    );\n\n    shader = context.shaderCache.createDerivedShaderProgram(\n      shaderProgram,\n      \"EC\",\n      {\n        vertexShaderSource: shaderProgram.vertexShaderSource,\n        fragmentShaderSource: fs,\n        attributeLocations: attributeLocations,\n      }\n    );\n  }\n\n  return shader;\n}\n\nPointCloudEyeDomeLighting.prototype.update = function (\n  frameState,\n  commandStart,\n  pointCloudShading,\n  boundingVolume\n) {\n  if (!isSupported(frameState.context)) {\n    return;\n  }\n\n  this._strength = pointCloudShading.eyeDomeLightingStrength;\n  this._radius =\n    pointCloudShading.eyeDomeLightingRadius * frameState.pixelRatio;\n\n  var dirty = createResources(this, frameState.context);\n\n  // Hijack existing point commands to render into an offscreen FBO.\n  var i;\n  var commandList = frameState.commandList;\n  var commandEnd = commandList.length;\n\n  for (i = commandStart; i < commandEnd; ++i) {\n    var command = commandList[i];\n    if (\n      command.primitiveType !== PrimitiveType.POINTS ||\n      command.pass === Pass.TRANSLUCENT\n    ) {\n      continue;\n    }\n    var derivedCommand = command.derivedCommands.pointCloudProcessor;\n    if (\n      !defined(derivedCommand) ||\n      command.dirty ||\n      dirty ||\n      derivedCommand.framebuffer !== this._framebuffer\n    ) {\n      // Prevent crash when tiles out-of-view come in-view during context size change\n      derivedCommand = DrawCommand.shallowClone(command);\n      command.derivedCommands.pointCloudProcessor = derivedCommand;\n\n      derivedCommand.framebuffer = this._framebuffer;\n      derivedCommand.shaderProgram = getECShaderProgram(\n        frameState.context,\n        command.shaderProgram\n      );\n      derivedCommand.castShadows = false;\n      derivedCommand.receiveShadows = false;\n    }\n\n    commandList[i] = derivedCommand;\n  }\n\n  var clearCommand = this._clearCommand;\n  var blendCommand = this._drawCommand;\n\n  blendCommand.boundingVolume = boundingVolume;\n\n  // Blend EDL into the main FBO\n  commandList.push(blendCommand);\n  commandList.push(clearCommand);\n};\n\n/**\n * Returns true if this object was destroyed; otherwise, false.\n * <br /><br />\n * If this object was destroyed, it should not be used; calling any function other than\n * <code>isDestroyed</code> will result in a {@link DeveloperError} exception.\n *\n * @returns {Boolean} <code>true</code> if this object was destroyed; otherwise, <code>false</code>.\n *\n * @see PointCloudEyeDomeLighting#destroy\n */\nPointCloudEyeDomeLighting.prototype.isDestroyed = function () {\n  return false;\n};\n\n/**\n * Destroys the WebGL resources held by this object.  Destroying an object allows for deterministic\n * release of WebGL resources, instead of relying on the garbage collector to destroy this object.\n * <br /><br />\n * Once an object is destroyed, it should not be used; calling any function other than\n * <code>isDestroyed</code> will result in a {@link DeveloperError} exception.  Therefore,\n * assign the return value (<code>undefined</code>) to the object as done in the example.\n *\n * @exception {DeveloperError} This object was destroyed, i.e., destroy() was called.\n *\n * @example\n * processor = processor && processor.destroy();\n *\n * @see PointCloudEyeDomeLighting#isDestroyed\n */\nPointCloudEyeDomeLighting.prototype.destroy = function () {\n  destroyFramebuffer(this);\n  return destroyObject(this);\n};\nexport default PointCloudEyeDomeLighting;\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import WebGLConstants from \"../Core/WebGLConstants.js\";\n/**\n * Determines the function used to compare stencil values for the stencil test.\n *\n * @exports StencilFunction\n */\n\nvar StencilFunction = {\n  /**\n   * The stencil test never passes.\n   *\n   * @type {Number}\n   * @constant\n   */\n  NEVER: WebGLConstants.NEVER,\n\n  /**\n   * The stencil test passes when the masked reference value is less than the masked stencil value.\n   *\n   * @type {Number}\n   * @constant\n   */\n  LESS: WebGLConstants.LESS,\n\n  /**\n   * The stencil test passes when the masked reference value is equal to the masked stencil value.\n   *\n   * @type {Number}\n   * @constant\n   */\n  EQUAL: WebGLConstants.EQUAL,\n\n  /**\n   * The stencil test passes when the masked reference value is less than or equal to the masked stencil value.\n   *\n   * @type {Number}\n   * @constant\n   */\n  LESS_OR_EQUAL: WebGLConstants.LEQUAL,\n\n  /**\n   * The stencil test passes when the masked reference value is greater than the masked stencil value.\n   *\n   * @type {Number}\n   * @constant\n   */\n  GREATER: WebGLConstants.GREATER,\n\n  /**\n   * The stencil test passes when the masked reference value is not equal to the masked stencil value.\n   *\n   * @type {Number}\n   * @constant\n   */\n  NOT_EQUAL: WebGLConstants.NOTEQUAL,\n\n  /**\n   * The stencil test passes when the masked reference value is greater than or equal to the masked stencil value.\n   *\n   * @type {Number}\n   * @constant\n   */\n  GREATER_OR_EQUAL: WebGLConstants.GEQUAL,\n\n  /**\n   * The stencil test always passes.\n   *\n   * @type {Number}\n   * @constant\n   */\n  ALWAYS: WebGLConstants.ALWAYS\n};\nexport default Object.freeze(StencilFunction);","map":{"version":3,"sources":["C:/Users/passa/Desktop/WaterDeployTrial/node_modules/cesium/Source/Scene/StencilFunction.js"],"names":["WebGLConstants","StencilFunction","NEVER","LESS","EQUAL","LESS_OR_EQUAL","LEQUAL","GREATER","NOT_EQUAL","NOTEQUAL","GREATER_OR_EQUAL","GEQUAL","ALWAYS","Object","freeze"],"mappings":"AAAA,OAAOA,cAAP,MAA2B,2BAA3B;AAEA;;;;;;AAKA,IAAIC,eAAe,GAAG;AACpB;;;;;;AAMAC,EAAAA,KAAK,EAAEF,cAAc,CAACE,KAPF;;AASpB;;;;;;AAMAC,EAAAA,IAAI,EAAEH,cAAc,CAACG,IAfD;;AAiBpB;;;;;;AAMAC,EAAAA,KAAK,EAAEJ,cAAc,CAACI,KAvBF;;AAyBpB;;;;;;AAMAC,EAAAA,aAAa,EAAEL,cAAc,CAACM,MA/BV;;AAiCpB;;;;;;AAMAC,EAAAA,OAAO,EAAEP,cAAc,CAACO,OAvCJ;;AAyCpB;;;;;;AAMAC,EAAAA,SAAS,EAAER,cAAc,CAACS,QA/CN;;AAiDpB;;;;;;AAMAC,EAAAA,gBAAgB,EAAEV,cAAc,CAACW,MAvDb;;AAyDpB;;;;;;AAMAC,EAAAA,MAAM,EAAEZ,cAAc,CAACY;AA/DH,CAAtB;AAiEA,eAAeC,MAAM,CAACC,MAAP,CAAcb,eAAd,CAAf","sourcesContent":["import WebGLConstants from \"../Core/WebGLConstants.js\";\n\n/**\n * Determines the function used to compare stencil values for the stencil test.\n *\n * @exports StencilFunction\n */\nvar StencilFunction = {\n  /**\n   * The stencil test never passes.\n   *\n   * @type {Number}\n   * @constant\n   */\n  NEVER: WebGLConstants.NEVER,\n\n  /**\n   * The stencil test passes when the masked reference value is less than the masked stencil value.\n   *\n   * @type {Number}\n   * @constant\n   */\n  LESS: WebGLConstants.LESS,\n\n  /**\n   * The stencil test passes when the masked reference value is equal to the masked stencil value.\n   *\n   * @type {Number}\n   * @constant\n   */\n  EQUAL: WebGLConstants.EQUAL,\n\n  /**\n   * The stencil test passes when the masked reference value is less than or equal to the masked stencil value.\n   *\n   * @type {Number}\n   * @constant\n   */\n  LESS_OR_EQUAL: WebGLConstants.LEQUAL,\n\n  /**\n   * The stencil test passes when the masked reference value is greater than the masked stencil value.\n   *\n   * @type {Number}\n   * @constant\n   */\n  GREATER: WebGLConstants.GREATER,\n\n  /**\n   * The stencil test passes when the masked reference value is not equal to the masked stencil value.\n   *\n   * @type {Number}\n   * @constant\n   */\n  NOT_EQUAL: WebGLConstants.NOTEQUAL,\n\n  /**\n   * The stencil test passes when the masked reference value is greater than or equal to the masked stencil value.\n   *\n   * @type {Number}\n   * @constant\n   */\n  GREATER_OR_EQUAL: WebGLConstants.GEQUAL,\n\n  /**\n   * The stencil test always passes.\n   *\n   * @type {Number}\n   * @constant\n   */\n  ALWAYS: WebGLConstants.ALWAYS,\n};\nexport default Object.freeze(StencilFunction);\n"]},"metadata":{},"sourceType":"module"}
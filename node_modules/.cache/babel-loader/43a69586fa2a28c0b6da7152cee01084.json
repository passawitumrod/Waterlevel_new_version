{"ast":null,"code":"import JulianDate from \"./JulianDate.js\";\nimport TimeInterval from \"./TimeInterval.js\";\nvar MINIMUM_VALUE = Object.freeze(JulianDate.fromIso8601(\"0000-01-01T00:00:00Z\"));\nvar MAXIMUM_VALUE = Object.freeze(JulianDate.fromIso8601(\"9999-12-31T24:00:00Z\"));\nvar MAXIMUM_INTERVAL = Object.freeze(new TimeInterval({\n  start: MINIMUM_VALUE,\n  stop: MAXIMUM_VALUE\n}));\n/**\n * Constants related to ISO8601 support.\n *\n * @exports Iso8601\n *\n * @see {@link http://en.wikipedia.org/wiki/ISO_8601|ISO 8601 on Wikipedia}\n * @see JulianDate\n * @see TimeInterval\n */\n\nvar Iso8601 = {\n  /**\n   * A {@link JulianDate} representing the earliest time representable by an ISO8601 date.\n   * This is equivalent to the date string '0000-01-01T00:00:00Z'\n   *\n   * @type {JulianDate}\n   * @constant\n   */\n  MINIMUM_VALUE: MINIMUM_VALUE,\n\n  /**\n   * A {@link JulianDate} representing the latest time representable by an ISO8601 date.\n   * This is equivalent to the date string '9999-12-31T24:00:00Z'\n   *\n   * @type {JulianDate}\n   * @constant\n   */\n  MAXIMUM_VALUE: MAXIMUM_VALUE,\n\n  /**\n   * A {@link TimeInterval} representing the largest interval representable by an ISO8601 interval.\n   * This is equivalent to the interval string '0000-01-01T00:00:00Z/9999-12-31T24:00:00Z'\n   *\n   * @type {JulianDate}\n   * @constant\n   */\n  MAXIMUM_INTERVAL: MAXIMUM_INTERVAL\n};\nexport default Iso8601;","map":{"version":3,"sources":["C:/Users/passa/Desktop/WaterDeployTrial/node_modules/cesium/Source/Core/Iso8601.js"],"names":["JulianDate","TimeInterval","MINIMUM_VALUE","Object","freeze","fromIso8601","MAXIMUM_VALUE","MAXIMUM_INTERVAL","start","stop","Iso8601"],"mappings":"AAAA,OAAOA,UAAP,MAAuB,iBAAvB;AACA,OAAOC,YAAP,MAAyB,mBAAzB;AAEA,IAAIC,aAAa,GAAGC,MAAM,CAACC,MAAP,CAClBJ,UAAU,CAACK,WAAX,CAAuB,sBAAvB,CADkB,CAApB;AAGA,IAAIC,aAAa,GAAGH,MAAM,CAACC,MAAP,CAClBJ,UAAU,CAACK,WAAX,CAAuB,sBAAvB,CADkB,CAApB;AAGA,IAAIE,gBAAgB,GAAGJ,MAAM,CAACC,MAAP,CACrB,IAAIH,YAAJ,CAAiB;AACfO,EAAAA,KAAK,EAAEN,aADQ;AAEfO,EAAAA,IAAI,EAAEH;AAFS,CAAjB,CADqB,CAAvB;AAOA;;;;;;;;;;AASA,IAAII,OAAO,GAAG;AACZ;;;;;;;AAOAR,EAAAA,aAAa,EAAEA,aARH;;AAUZ;;;;;;;AAOAI,EAAAA,aAAa,EAAEA,aAjBH;;AAmBZ;;;;;;;AAOAC,EAAAA,gBAAgB,EAAEA;AA1BN,CAAd;AA4BA,eAAeG,OAAf","sourcesContent":["import JulianDate from \"./JulianDate.js\";\nimport TimeInterval from \"./TimeInterval.js\";\n\nvar MINIMUM_VALUE = Object.freeze(\n  JulianDate.fromIso8601(\"0000-01-01T00:00:00Z\")\n);\nvar MAXIMUM_VALUE = Object.freeze(\n  JulianDate.fromIso8601(\"9999-12-31T24:00:00Z\")\n);\nvar MAXIMUM_INTERVAL = Object.freeze(\n  new TimeInterval({\n    start: MINIMUM_VALUE,\n    stop: MAXIMUM_VALUE,\n  })\n);\n\n/**\n * Constants related to ISO8601 support.\n *\n * @exports Iso8601\n *\n * @see {@link http://en.wikipedia.org/wiki/ISO_8601|ISO 8601 on Wikipedia}\n * @see JulianDate\n * @see TimeInterval\n */\nvar Iso8601 = {\n  /**\n   * A {@link JulianDate} representing the earliest time representable by an ISO8601 date.\n   * This is equivalent to the date string '0000-01-01T00:00:00Z'\n   *\n   * @type {JulianDate}\n   * @constant\n   */\n  MINIMUM_VALUE: MINIMUM_VALUE,\n\n  /**\n   * A {@link JulianDate} representing the latest time representable by an ISO8601 date.\n   * This is equivalent to the date string '9999-12-31T24:00:00Z'\n   *\n   * @type {JulianDate}\n   * @constant\n   */\n  MAXIMUM_VALUE: MAXIMUM_VALUE,\n\n  /**\n   * A {@link TimeInterval} representing the largest interval representable by an ISO8601 interval.\n   * This is equivalent to the interval string '0000-01-01T00:00:00Z/9999-12-31T24:00:00Z'\n   *\n   * @type {JulianDate}\n   * @constant\n   */\n  MAXIMUM_INTERVAL: MAXIMUM_INTERVAL,\n};\nexport default Iso8601;\n"]},"metadata":{},"sourceType":"module"}
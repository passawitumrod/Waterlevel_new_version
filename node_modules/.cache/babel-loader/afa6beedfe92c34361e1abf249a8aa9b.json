{"ast":null,"code":"import defined from \"../../Core/defined.js\";\nimport destroyObject from \"../../Core/destroyObject.js\";\nimport DeveloperError from \"../../Core/DeveloperError.js\";\nimport knockout from \"../../ThirdParty/knockout.js\";\nimport getElement from \"../getElement.js\";\nimport PerformanceWatchdogViewModel from \"./PerformanceWatchdogViewModel.js\";\n/**\n * Monitors performance of the application and displays a message if poor performance is detected.\n *\n * @alias PerformanceWatchdog\n * @constructor\n *\n * @param {Object} [options] Object with the following properties:\n * @param {Element|String} options.container The DOM element or ID that will contain the widget.\n * @param {Scene} options.scene The {@link Scene} for which to monitor performance.\n * @param {String} [options.lowFrameRateMessage='This application appears to be performing poorly on your system.  Please try using a different web browser or updating your video drivers.'] The\n *        message to display when a low frame rate is detected.  The message is interpeted as HTML, so make sure\n *        it comes from a trusted source so that your application is not vulnerable to cross-site scripting attacks.\n */\n\nfunction PerformanceWatchdog(options) {\n  //>>includeStart('debug', pragmas.debug);\n  if (!defined(options) || !defined(options.container)) {\n    throw new DeveloperError(\"options.container is required.\");\n  }\n\n  if (!defined(options.scene)) {\n    throw new DeveloperError(\"options.scene is required.\");\n  } //>>includeEnd('debug');\n\n\n  var container = getElement(options.container);\n  var viewModel = new PerformanceWatchdogViewModel(options);\n  var element = document.createElement(\"div\");\n  element.className = \"cesium-performance-watchdog-message-area\";\n  element.setAttribute(\"data-bind\", \"visible: showingLowFrameRateMessage\");\n  var dismissButton = document.createElement(\"button\");\n  dismissButton.setAttribute(\"type\", \"button\");\n  dismissButton.className = \"cesium-performance-watchdog-message-dismiss\";\n  dismissButton.innerHTML = \"&times;\";\n  dismissButton.setAttribute(\"data-bind\", \"click: dismissMessage\");\n  element.appendChild(dismissButton);\n  var message = document.createElement(\"div\");\n  message.className = \"cesium-performance-watchdog-message\";\n  message.setAttribute(\"data-bind\", \"html: lowFrameRateMessage\");\n  element.appendChild(message);\n  container.appendChild(element);\n  knockout.applyBindings(viewModel, element);\n  this._container = container;\n  this._viewModel = viewModel;\n  this._element = element;\n}\n\nObject.defineProperties(PerformanceWatchdog.prototype, {\n  /**\n   * Gets the parent container.\n   * @memberof PerformanceWatchdog.prototype\n   *\n   * @type {Element}\n   */\n  container: {\n    get: function get() {\n      return this._container;\n    }\n  },\n\n  /**\n   * Gets the view model.\n   * @memberof PerformanceWatchdog.prototype\n   *\n   * @type {PerformanceWatchdogViewModel}\n   */\n  viewModel: {\n    get: function get() {\n      return this._viewModel;\n    }\n  }\n});\n/**\n * @memberof PerformanceWatchdog\n * @returns {Boolean} true if the object has been destroyed, false otherwise.\n */\n\nPerformanceWatchdog.prototype.isDestroyed = function () {\n  return false;\n};\n/**\n * Destroys the widget.  Should be called if permanently\n * removing the widget from layout.\n * @memberof PerformanceWatchdog\n */\n\n\nPerformanceWatchdog.prototype.destroy = function () {\n  this._viewModel.destroy();\n\n  knockout.cleanNode(this._element);\n\n  this._container.removeChild(this._element);\n\n  return destroyObject(this);\n};\n\nexport default PerformanceWatchdog;","map":{"version":3,"sources":["C:/Users/passa/Desktop/WaterLevelReact/node_modules/cesium/Source/Widgets/PerformanceWatchdog/PerformanceWatchdog.js"],"names":["defined","destroyObject","DeveloperError","knockout","getElement","PerformanceWatchdogViewModel","PerformanceWatchdog","options","container","scene","viewModel","element","document","createElement","className","setAttribute","dismissButton","innerHTML","appendChild","message","applyBindings","_container","_viewModel","_element","Object","defineProperties","prototype","get","isDestroyed","destroy","cleanNode","removeChild"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,uBAApB;AACA,OAAOC,aAAP,MAA0B,6BAA1B;AACA,OAAOC,cAAP,MAA2B,8BAA3B;AACA,OAAOC,QAAP,MAAqB,8BAArB;AACA,OAAOC,UAAP,MAAuB,kBAAvB;AACA,OAAOC,4BAAP,MAAyC,mCAAzC;AAEA;;;;;;;;;;;;;;AAaA,SAASC,mBAAT,CAA6BC,OAA7B,EAAsC;AACpC;AACA,MAAI,CAACP,OAAO,CAACO,OAAD,CAAR,IAAqB,CAACP,OAAO,CAACO,OAAO,CAACC,SAAT,CAAjC,EAAsD;AACpD,UAAM,IAAIN,cAAJ,CAAmB,gCAAnB,CAAN;AACD;;AACD,MAAI,CAACF,OAAO,CAACO,OAAO,CAACE,KAAT,CAAZ,EAA6B;AAC3B,UAAM,IAAIP,cAAJ,CAAmB,4BAAnB,CAAN;AACD,GAPmC,CAQpC;;;AAEA,MAAIM,SAAS,GAAGJ,UAAU,CAACG,OAAO,CAACC,SAAT,CAA1B;AAEA,MAAIE,SAAS,GAAG,IAAIL,4BAAJ,CAAiCE,OAAjC,CAAhB;AAEA,MAAII,OAAO,GAAGC,QAAQ,CAACC,aAAT,CAAuB,KAAvB,CAAd;AACAF,EAAAA,OAAO,CAACG,SAAR,GAAoB,0CAApB;AACAH,EAAAA,OAAO,CAACI,YAAR,CAAqB,WAArB,EAAkC,qCAAlC;AAEA,MAAIC,aAAa,GAAGJ,QAAQ,CAACC,aAAT,CAAuB,QAAvB,CAApB;AACAG,EAAAA,aAAa,CAACD,YAAd,CAA2B,MAA3B,EAAmC,QAAnC;AACAC,EAAAA,aAAa,CAACF,SAAd,GAA0B,6CAA1B;AACAE,EAAAA,aAAa,CAACC,SAAd,GAA0B,SAA1B;AACAD,EAAAA,aAAa,CAACD,YAAd,CAA2B,WAA3B,EAAwC,uBAAxC;AACAJ,EAAAA,OAAO,CAACO,WAAR,CAAoBF,aAApB;AAEA,MAAIG,OAAO,GAAGP,QAAQ,CAACC,aAAT,CAAuB,KAAvB,CAAd;AACAM,EAAAA,OAAO,CAACL,SAAR,GAAoB,qCAApB;AACAK,EAAAA,OAAO,CAACJ,YAAR,CAAqB,WAArB,EAAkC,2BAAlC;AACAJ,EAAAA,OAAO,CAACO,WAAR,CAAoBC,OAApB;AAEAX,EAAAA,SAAS,CAACU,WAAV,CAAsBP,OAAtB;AAEAR,EAAAA,QAAQ,CAACiB,aAAT,CAAuBV,SAAvB,EAAkCC,OAAlC;AAEA,OAAKU,UAAL,GAAkBb,SAAlB;AACA,OAAKc,UAAL,GAAkBZ,SAAlB;AACA,OAAKa,QAAL,GAAgBZ,OAAhB;AACD;;AAEDa,MAAM,CAACC,gBAAP,CAAwBnB,mBAAmB,CAACoB,SAA5C,EAAuD;AACrD;;;;;;AAMAlB,EAAAA,SAAS,EAAE;AACTmB,IAAAA,GAAG,EAAE,eAAY;AACf,aAAO,KAAKN,UAAZ;AACD;AAHQ,GAP0C;;AAarD;;;;;;AAMAX,EAAAA,SAAS,EAAE;AACTiB,IAAAA,GAAG,EAAE,eAAY;AACf,aAAO,KAAKL,UAAZ;AACD;AAHQ;AAnB0C,CAAvD;AA0BA;;;;;AAIAhB,mBAAmB,CAACoB,SAApB,CAA8BE,WAA9B,GAA4C,YAAY;AACtD,SAAO,KAAP;AACD,CAFD;AAIA;;;;;;;AAKAtB,mBAAmB,CAACoB,SAApB,CAA8BG,OAA9B,GAAwC,YAAY;AAClD,OAAKP,UAAL,CAAgBO,OAAhB;;AACA1B,EAAAA,QAAQ,CAAC2B,SAAT,CAAmB,KAAKP,QAAxB;;AACA,OAAKF,UAAL,CAAgBU,WAAhB,CAA4B,KAAKR,QAAjC;;AAEA,SAAOtB,aAAa,CAAC,IAAD,CAApB;AACD,CAND;;AAOA,eAAeK,mBAAf","sourcesContent":["import defined from \"../../Core/defined.js\";\nimport destroyObject from \"../../Core/destroyObject.js\";\nimport DeveloperError from \"../../Core/DeveloperError.js\";\nimport knockout from \"../../ThirdParty/knockout.js\";\nimport getElement from \"../getElement.js\";\nimport PerformanceWatchdogViewModel from \"./PerformanceWatchdogViewModel.js\";\n\n/**\n * Monitors performance of the application and displays a message if poor performance is detected.\n *\n * @alias PerformanceWatchdog\n * @constructor\n *\n * @param {Object} [options] Object with the following properties:\n * @param {Element|String} options.container The DOM element or ID that will contain the widget.\n * @param {Scene} options.scene The {@link Scene} for which to monitor performance.\n * @param {String} [options.lowFrameRateMessage='This application appears to be performing poorly on your system.  Please try using a different web browser or updating your video drivers.'] The\n *        message to display when a low frame rate is detected.  The message is interpeted as HTML, so make sure\n *        it comes from a trusted source so that your application is not vulnerable to cross-site scripting attacks.\n */\nfunction PerformanceWatchdog(options) {\n  //>>includeStart('debug', pragmas.debug);\n  if (!defined(options) || !defined(options.container)) {\n    throw new DeveloperError(\"options.container is required.\");\n  }\n  if (!defined(options.scene)) {\n    throw new DeveloperError(\"options.scene is required.\");\n  }\n  //>>includeEnd('debug');\n\n  var container = getElement(options.container);\n\n  var viewModel = new PerformanceWatchdogViewModel(options);\n\n  var element = document.createElement(\"div\");\n  element.className = \"cesium-performance-watchdog-message-area\";\n  element.setAttribute(\"data-bind\", \"visible: showingLowFrameRateMessage\");\n\n  var dismissButton = document.createElement(\"button\");\n  dismissButton.setAttribute(\"type\", \"button\");\n  dismissButton.className = \"cesium-performance-watchdog-message-dismiss\";\n  dismissButton.innerHTML = \"&times;\";\n  dismissButton.setAttribute(\"data-bind\", \"click: dismissMessage\");\n  element.appendChild(dismissButton);\n\n  var message = document.createElement(\"div\");\n  message.className = \"cesium-performance-watchdog-message\";\n  message.setAttribute(\"data-bind\", \"html: lowFrameRateMessage\");\n  element.appendChild(message);\n\n  container.appendChild(element);\n\n  knockout.applyBindings(viewModel, element);\n\n  this._container = container;\n  this._viewModel = viewModel;\n  this._element = element;\n}\n\nObject.defineProperties(PerformanceWatchdog.prototype, {\n  /**\n   * Gets the parent container.\n   * @memberof PerformanceWatchdog.prototype\n   *\n   * @type {Element}\n   */\n  container: {\n    get: function () {\n      return this._container;\n    },\n  },\n\n  /**\n   * Gets the view model.\n   * @memberof PerformanceWatchdog.prototype\n   *\n   * @type {PerformanceWatchdogViewModel}\n   */\n  viewModel: {\n    get: function () {\n      return this._viewModel;\n    },\n  },\n});\n\n/**\n * @memberof PerformanceWatchdog\n * @returns {Boolean} true if the object has been destroyed, false otherwise.\n */\nPerformanceWatchdog.prototype.isDestroyed = function () {\n  return false;\n};\n\n/**\n * Destroys the widget.  Should be called if permanently\n * removing the widget from layout.\n * @memberof PerformanceWatchdog\n */\nPerformanceWatchdog.prototype.destroy = function () {\n  this._viewModel.destroy();\n  knockout.cleanNode(this._element);\n  this._container.removeChild(this._element);\n\n  return destroyObject(this);\n};\nexport default PerformanceWatchdog;\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import removeExtensionsRequired from './removeExtensionsRequired.js';\nimport defined from '../../Core/defined.js';\n/**\n * Removes an extension from gltf.extensionsUsed and gltf.extensionsRequired if it is present.\n *\n * @param {Object} gltf A javascript object containing a glTF asset.\n * @param {String} extension The extension to remove.\n *\n * @private\n */\n\nfunction removeExtensionsUsed(gltf, extension) {\n  var extensionsUsed = gltf.extensionsUsed;\n\n  if (defined(extensionsUsed)) {\n    var index = extensionsUsed.indexOf(extension);\n\n    if (index >= 0) {\n      extensionsUsed.splice(index, 1);\n    }\n\n    removeExtensionsRequired(gltf, extension);\n\n    if (extensionsUsed.length === 0) {\n      delete gltf.extensionsUsed;\n    }\n  }\n}\n\nexport default removeExtensionsUsed;","map":{"version":3,"sources":["C:/Users/passa/Desktop/WaterDeployTrial/node_modules/cesium/Source/ThirdParty/GltfPipeline/removeExtensionsUsed.js"],"names":["removeExtensionsRequired","defined","removeExtensionsUsed","gltf","extension","extensionsUsed","index","indexOf","splice","length"],"mappings":"AAAA,OAAOA,wBAAP,MAAqC,+BAArC;AACA,OAAOC,OAAP,MAAoB,uBAApB;AAEI;;;;;;;;;AAQA,SAASC,oBAAT,CAA8BC,IAA9B,EAAoCC,SAApC,EAA+C;AAC3C,MAAIC,cAAc,GAAGF,IAAI,CAACE,cAA1B;;AACA,MAAIJ,OAAO,CAACI,cAAD,CAAX,EAA6B;AACzB,QAAIC,KAAK,GAAGD,cAAc,CAACE,OAAf,CAAuBH,SAAvB,CAAZ;;AACA,QAAIE,KAAK,IAAI,CAAb,EAAgB;AACZD,MAAAA,cAAc,CAACG,MAAf,CAAsBF,KAAtB,EAA6B,CAA7B;AACH;;AACDN,IAAAA,wBAAwB,CAACG,IAAD,EAAOC,SAAP,CAAxB;;AACA,QAAIC,cAAc,CAACI,MAAf,KAA0B,CAA9B,EAAiC;AAC7B,aAAON,IAAI,CAACE,cAAZ;AACH;AACJ;AACJ;;AAED,eAAeH,oBAAf","sourcesContent":["import removeExtensionsRequired from './removeExtensionsRequired.js'\nimport defined from '../../Core/defined.js'\n\n    /**\n     * Removes an extension from gltf.extensionsUsed and gltf.extensionsRequired if it is present.\n     *\n     * @param {Object} gltf A javascript object containing a glTF asset.\n     * @param {String} extension The extension to remove.\n     *\n     * @private\n     */\n    function removeExtensionsUsed(gltf, extension) {\n        var extensionsUsed = gltf.extensionsUsed;\n        if (defined(extensionsUsed)) {\n            var index = extensionsUsed.indexOf(extension);\n            if (index >= 0) {\n                extensionsUsed.splice(index, 1);\n            }\n            removeExtensionsRequired(gltf, extension);\n            if (extensionsUsed.length === 0) {\n                delete gltf.extensionsUsed;\n            }\n        }\n    }\n\n    export default removeExtensionsUsed;\n"]},"metadata":{},"sourceType":"module"}
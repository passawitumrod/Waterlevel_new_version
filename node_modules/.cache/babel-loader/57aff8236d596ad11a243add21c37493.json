{"ast":null,"code":"import Check from \"../../Core/Check.js\";\nimport Color from \"../../Core/Color.js\";\nimport defined from \"../../Core/defined.js\";\nimport destroyObject from \"../../Core/destroyObject.js\";\nimport ScreenSpaceEventHandler from \"../../Core/ScreenSpaceEventHandler.js\";\nimport ScreenSpaceEventType from \"../../Core/ScreenSpaceEventType.js\";\nimport Cesium3DTileColorBlendMode from \"../../Scene/Cesium3DTileColorBlendMode.js\";\nimport Cesium3DTileFeature from \"../../Scene/Cesium3DTileFeature.js\";\nimport Cesium3DTilePass from \"../../Scene/Cesium3DTilePass.js\";\nimport Cesium3DTileset from \"../../Scene/Cesium3DTileset.js\";\nimport Cesium3DTileStyle from \"../../Scene/Cesium3DTileStyle.js\";\nimport PerformanceDisplay from \"../../Scene/PerformanceDisplay.js\";\nimport knockout from \"../../ThirdParty/knockout.js\";\n\nfunction getPickTileset(viewModel) {\n  return function (e) {\n    var pick = viewModel._scene.pick(e.position);\n\n    if (defined(pick) && pick.primitive instanceof Cesium3DTileset) {\n      viewModel.tileset = pick.primitive;\n    }\n\n    viewModel.pickActive = false;\n  };\n}\n\nfunction selectTilesetOnHover(viewModel, value) {\n  if (value) {\n    viewModel._eventHandler.setInputAction(function (e) {\n      var pick = viewModel._scene.pick(e.endPosition);\n\n      if (defined(pick) && pick.primitive instanceof Cesium3DTileset) {\n        viewModel.tileset = pick.primitive;\n      }\n    }, ScreenSpaceEventType.MOUSE_MOVE);\n  } else {\n    viewModel._eventHandler.removeInputAction(ScreenSpaceEventType.MOUSE_MOVE); // Restore hover-over selection to its current value\n    // eslint-disable-next-line no-self-assign\n\n\n    viewModel.picking = viewModel.picking;\n  }\n}\n\nvar stringOptions = {\n  maximumFractionDigits: 3\n};\n\nfunction formatMemoryString(memorySizeInBytes) {\n  var memoryInMegabytes = memorySizeInBytes / 1048576;\n\n  if (memoryInMegabytes < 1.0) {\n    return memoryInMegabytes.toLocaleString(undefined, stringOptions);\n  }\n\n  return Math.round(memoryInMegabytes).toLocaleString();\n}\n\nfunction getStatistics(tileset, isPick) {\n  if (!defined(tileset)) {\n    return \"\";\n  }\n\n  var statistics = isPick ? tileset._statisticsPerPass[Cesium3DTilePass.PICK] : tileset._statisticsPerPass[Cesium3DTilePass.RENDER]; // Since the pick pass uses a smaller frustum around the pixel of interest,\n  // the statistics will be different than the normal render pass.\n\n  var s = '<ul class=\"cesium-cesiumInspector-statistics\">';\n  s += // --- Rendering statistics\n  \"<li><strong>Visited: </strong>\" + statistics.visited.toLocaleString() + \"</li>\" + // Number of commands returned is likely to be higher than the number of tiles selected\n  // because of tiles that create multiple commands.\n  \"<li><strong>Selected: </strong>\" + statistics.selected.toLocaleString() + \"</li>\" + // Number of commands executed is likely to be higher because of commands overlapping\n  // multiple frustums.\n  \"<li><strong>Commands: </strong>\" + statistics.numberOfCommands.toLocaleString() + \"</li>\";\n  s += \"</ul>\";\n\n  if (!isPick) {\n    s += '<ul class=\"cesium-cesiumInspector-statistics\">';\n    s += // --- Cache/loading statistics\n    \"<li><strong>Requests: </strong>\" + statistics.numberOfPendingRequests.toLocaleString() + \"</li>\" + \"<li><strong>Attempted: </strong>\" + statistics.numberOfAttemptedRequests.toLocaleString() + \"</li>\" + \"<li><strong>Processing: </strong>\" + statistics.numberOfTilesProcessing.toLocaleString() + \"</li>\" + \"<li><strong>Content Ready: </strong>\" + statistics.numberOfTilesWithContentReady.toLocaleString() + \"</li>\" + // Total number of tiles includes tiles without content, so \"Ready\" may never reach\n    // \"Total.\"  Total also will increase when a tile with a tileset JSON content is loaded.\n    \"<li><strong>Total: </strong>\" + statistics.numberOfTilesTotal.toLocaleString() + \"</li>\";\n    s += \"</ul>\";\n    s += '<ul class=\"cesium-cesiumInspector-statistics\">';\n    s += // --- Features statistics\n    \"<li><strong>Features Selected: </strong>\" + statistics.numberOfFeaturesSelected.toLocaleString() + \"</li>\" + \"<li><strong>Features Loaded: </strong>\" + statistics.numberOfFeaturesLoaded.toLocaleString() + \"</li>\" + \"<li><strong>Points Selected: </strong>\" + statistics.numberOfPointsSelected.toLocaleString() + \"</li>\" + \"<li><strong>Points Loaded: </strong>\" + statistics.numberOfPointsLoaded.toLocaleString() + \"</li>\" + \"<li><strong>Triangles Selected: </strong>\" + statistics.numberOfTrianglesSelected.toLocaleString() + \"</li>\";\n    s += \"</ul>\";\n    s += '<ul class=\"cesium-cesiumInspector-statistics\">';\n    s += // --- Styling statistics\n    \"<li><strong>Tiles styled: </strong>\" + statistics.numberOfTilesStyled.toLocaleString() + \"</li>\" + \"<li><strong>Features styled: </strong>\" + statistics.numberOfFeaturesStyled.toLocaleString() + \"</li>\";\n    s += \"</ul>\";\n    s += '<ul class=\"cesium-cesiumInspector-statistics\">';\n    s += // --- Optimization statistics\n    \"<li><strong>Children Union Culled: </strong>\" + statistics.numberOfTilesCulledWithChildrenUnion.toLocaleString() + \"</li>\";\n    s += \"</ul>\";\n    s += '<ul class=\"cesium-cesiumInspector-statistics\">';\n    s += // --- Memory statistics\n    \"<li><strong>Geometry Memory (MB): </strong>\" + formatMemoryString(statistics.geometryByteLength) + \"</li>\" + \"<li><strong>Texture Memory (MB): </strong>\" + formatMemoryString(statistics.texturesByteLength) + \"</li>\" + \"<li><strong>Batch Table Memory (MB): </strong>\" + formatMemoryString(statistics.batchTableByteLength) + \"</li>\";\n    s += \"</ul>\";\n  }\n\n  return s;\n}\n\nvar colorBlendModes = [{\n  text: \"Highlight\",\n  value: Cesium3DTileColorBlendMode.HIGHLIGHT\n}, {\n  text: \"Replace\",\n  value: Cesium3DTileColorBlendMode.REPLACE\n}, {\n  text: \"Mix\",\n  value: Cesium3DTileColorBlendMode.MIX\n}];\nvar highlightColor = new Color(1.0, 1.0, 0.0, 0.4);\nvar scratchColor = new Color();\nvar oldColor = new Color();\n/**\n * The view model for {@link Cesium3DTilesInspector}.\n * @alias Cesium3DTilesInspectorViewModel\n * @constructor\n *\n * @param {Scene} scene The scene instance to use.\n * @param {HTMLElement} performanceContainer The container for the performance display\n */\n\nfunction Cesium3DTilesInspectorViewModel(scene, performanceContainer) {\n  //>>includeStart('debug', pragmas.debug);\n  Check.typeOf.object(\"scene\", scene);\n  Check.typeOf.object(\"performanceContainer\", performanceContainer); //>>includeEnd('debug');\n\n  var that = this;\n  var canvas = scene.canvas;\n  this._eventHandler = new ScreenSpaceEventHandler(canvas);\n  this._scene = scene;\n  this._performanceContainer = performanceContainer;\n  this._canvas = canvas;\n  this._performanceDisplay = new PerformanceDisplay({\n    container: performanceContainer\n  });\n  this._statisticsText = \"\";\n  this._pickStatisticsText = \"\";\n  this._editorError = \"\";\n  /**\n   * Gets or sets the flag to enable performance display.  This property is observable.\n   *\n   * @type {Boolean}\n   * @default false\n   */\n\n  this.performance = false;\n  /**\n   * Gets or sets the flag to show statistics.  This property is observable.\n   *\n   * @type {Boolean}\n   * @default true\n   */\n\n  this.showStatistics = true;\n  /**\n   * Gets or sets the flag to show pick statistics.  This property is observable.\n   *\n   * @type {Boolean}\n   * @default false\n   */\n\n  this.showPickStatistics = true;\n  /**\n   * Gets or sets the flag to show the inspector.  This property is observable.\n   *\n   * @type {Boolean}\n   * @default true\n   */\n\n  this.inspectorVisible = true;\n  /**\n   * Gets or sets the flag to show the tileset section.  This property is observable.\n   *\n   * @type {Boolean}\n   * @default false\n   */\n\n  this.tilesetVisible = false;\n  /**\n   * Gets or sets the flag to show the display section.  This property is observable.\n   *\n   * @type {Boolean}\n   * @default false\n   */\n\n  this.displayVisible = false;\n  /**\n   * Gets or sets the flag to show the update section.  This property is observable.\n   *\n   * @type {Boolean}\n   * @default false\n   */\n\n  this.updateVisible = false;\n  /**\n   * Gets or sets the flag to show the logging section.  This property is observable.\n   *\n   * @type {Boolean}\n   * @default false\n   */\n\n  this.loggingVisible = false;\n  /**\n   * Gets or sets the flag to show the style section.  This property is observable.\n   *\n   * @type {Boolean}\n   * @default false\n   */\n\n  this.styleVisible = false;\n  /**\n   * Gets or sets the flag to show the tile info section.  This property is observable.\n   *\n   * @type {Boolean}\n   * @default false\n   */\n\n  this.tileDebugLabelsVisible = false;\n  /**\n   * Gets or sets the flag to show the optimization info section. This property is observable.\n   *\n   * @type {Boolean}\n   * @default false;\n   */\n\n  this.optimizationVisible = false;\n  /**\n   * Gets or sets the JSON for the tileset style.  This property is observable.\n   *\n   * @type {String}\n   * @default '{}'\n   */\n\n  this.styleString = \"{}\";\n  this._tileset = undefined;\n  this._feature = undefined;\n  this._tile = undefined;\n  knockout.track(this, [\"performance\", \"inspectorVisible\", \"_statisticsText\", \"_pickStatisticsText\", \"_editorError\", \"showPickStatistics\", \"showStatistics\", \"tilesetVisible\", \"displayVisible\", \"updateVisible\", \"loggingVisible\", \"styleVisible\", \"optimizationVisible\", \"tileDebugLabelsVisible\", \"styleString\", \"_feature\", \"_tile\"]);\n  this._properties = knockout.observable({});\n  /**\n   * Gets the names of the properties in the tileset.  This property is observable.\n   * @type {String[]}\n   * @readonly\n   */\n\n  this.properties = [];\n  knockout.defineProperty(this, \"properties\", function () {\n    var names = [];\n\n    var properties = that._properties();\n\n    for (var prop in properties) {\n      if (properties.hasOwnProperty(prop)) {\n        names.push(prop);\n      }\n    }\n\n    return names;\n  });\n  var dynamicScreenSpaceError = knockout.observable();\n  knockout.defineProperty(this, \"dynamicScreenSpaceError\", {\n    get: function () {\n      return dynamicScreenSpaceError();\n    },\n    set: function (value) {\n      dynamicScreenSpaceError(value);\n\n      if (defined(that._tileset)) {\n        that._tileset.dynamicScreenSpaceError = value;\n      }\n    }\n  });\n  /**\n   * Gets or sets the flag to enable dynamic screen space error.  This property is observable.\n   *\n   * @type {Boolean}\n   * @default false\n   */\n\n  this.dynamicScreenSpaceError = false;\n  var colorBlendMode = knockout.observable();\n  knockout.defineProperty(this, \"colorBlendMode\", {\n    get: function () {\n      return colorBlendMode();\n    },\n    set: function (value) {\n      colorBlendMode(value);\n\n      if (defined(that._tileset)) {\n        that._tileset.colorBlendMode = value;\n\n        that._scene.requestRender();\n      }\n    }\n  });\n  /**\n   * Gets or sets the color blend mode.  This property is observable.\n   *\n   * @type {Cesium3DTileColorBlendMode}\n   * @default Cesium3DTileColorBlendMode.HIGHLIGHT\n   */\n\n  this.colorBlendMode = Cesium3DTileColorBlendMode.HIGHLIGHT;\n  var showOnlyPickedTileDebugLabel = knockout.observable();\n  var picking = knockout.observable();\n  knockout.defineProperty(this, \"picking\", {\n    get: function () {\n      return picking();\n    },\n    set: function (value) {\n      picking(value);\n\n      if (value) {\n        that._eventHandler.setInputAction(function (e) {\n          var picked = scene.pick(e.endPosition);\n\n          if (picked instanceof Cesium3DTileFeature) {\n            // Picked a feature\n            that.feature = picked;\n            that.tile = picked.content.tile;\n          } else if (defined(picked) && defined(picked.content)) {\n            // Picked a tile\n            that.feature = undefined;\n            that.tile = picked.content.tile;\n          } else {\n            // Picked nothing\n            that.feature = undefined;\n            that.tile = undefined;\n          }\n\n          if (!defined(that._tileset)) {\n            return;\n          }\n\n          if (showOnlyPickedTileDebugLabel && defined(picked) && defined(picked.content)) {\n            var position;\n\n            if (scene.pickPositionSupported) {\n              position = scene.pickPosition(e.endPosition);\n\n              if (defined(position)) {\n                that._tileset.debugPickPosition = position;\n              }\n            }\n\n            that._tileset.debugPickedTile = picked.content.tile;\n          } else {\n            that._tileset.debugPickedTile = undefined;\n          }\n\n          that._scene.requestRender();\n        }, ScreenSpaceEventType.MOUSE_MOVE);\n      } else {\n        that.feature = undefined;\n        that.tile = undefined;\n\n        that._eventHandler.removeInputAction(ScreenSpaceEventType.MOUSE_MOVE);\n      }\n    }\n  });\n  /**\n   * Gets or sets the flag to enable picking.  This property is observable.\n   *\n   * @type {Boolean}\n   * @default true\n   */\n\n  this.picking = true;\n  var colorize = knockout.observable();\n  knockout.defineProperty(this, \"colorize\", {\n    get: function () {\n      return colorize();\n    },\n    set: function (value) {\n      colorize(value);\n\n      if (defined(that._tileset)) {\n        that._tileset.debugColorizeTiles = value;\n\n        that._scene.requestRender();\n      }\n    }\n  });\n  /**\n   * Gets or sets the flag to colorize tiles.  This property is observable.\n   *\n   * @type {Boolean}\n   * @default false\n   */\n\n  this.colorize = false;\n  var wireframe = knockout.observable();\n  knockout.defineProperty(this, \"wireframe\", {\n    get: function () {\n      return wireframe();\n    },\n    set: function (value) {\n      wireframe(value);\n\n      if (defined(that._tileset)) {\n        that._tileset.debugWireframe = value;\n\n        that._scene.requestRender();\n      }\n    }\n  });\n  /**\n   * Gets or sets the flag to draw with wireframe.  This property is observable.\n   *\n   * @type {Boolean}\n   * @default false\n   */\n\n  this.wireframe = false;\n  var showBoundingVolumes = knockout.observable();\n  knockout.defineProperty(this, \"showBoundingVolumes\", {\n    get: function () {\n      return showBoundingVolumes();\n    },\n    set: function (value) {\n      showBoundingVolumes(value);\n\n      if (defined(that._tileset)) {\n        that._tileset.debugShowBoundingVolume = value;\n\n        that._scene.requestRender();\n      }\n    }\n  });\n  /**\n   * Gets or sets the flag to show bounding volumes.  This property is observable.\n   *\n   * @type {Boolean}\n   * @default false\n   */\n\n  this.showBoundingVolumes = false;\n  var showContentBoundingVolumes = knockout.observable();\n  knockout.defineProperty(this, \"showContentBoundingVolumes\", {\n    get: function () {\n      return showContentBoundingVolumes();\n    },\n    set: function (value) {\n      showContentBoundingVolumes(value);\n\n      if (defined(that._tileset)) {\n        that._tileset.debugShowContentBoundingVolume = value;\n\n        that._scene.requestRender();\n      }\n    }\n  });\n  /**\n   * Gets or sets the flag to show content volumes.  This property is observable.\n   *\n   * @type {Boolean}\n   * @default false\n   */\n\n  this.showContentBoundingVolumes = false;\n  var showRequestVolumes = knockout.observable();\n  knockout.defineProperty(this, \"showRequestVolumes\", {\n    get: function () {\n      return showRequestVolumes();\n    },\n    set: function (value) {\n      showRequestVolumes(value);\n\n      if (defined(that._tileset)) {\n        that._tileset.debugShowViewerRequestVolume = value;\n\n        that._scene.requestRender();\n      }\n    }\n  });\n  /**\n   * Gets or sets the flag to show request volumes.  This property is observable.\n   *\n   * @type {Boolean}\n   * @default false\n   */\n\n  this.showRequestVolumes = false;\n  var freezeFrame = knockout.observable();\n  knockout.defineProperty(this, \"freezeFrame\", {\n    get: function () {\n      return freezeFrame();\n    },\n    set: function (value) {\n      freezeFrame(value);\n\n      if (defined(that._tileset)) {\n        that._tileset.debugFreezeFrame = value;\n        that._scene.debugShowFrustumPlanes = value;\n\n        that._scene.requestRender();\n      }\n    }\n  });\n  /**\n   * Gets or sets the flag to suspend updates.  This property is observable.\n   *\n   * @type {Boolean}\n   * @default false\n   */\n\n  this.freezeFrame = false;\n  knockout.defineProperty(this, \"showOnlyPickedTileDebugLabel\", {\n    get: function () {\n      return showOnlyPickedTileDebugLabel();\n    },\n    set: function (value) {\n      showOnlyPickedTileDebugLabel(value);\n\n      if (defined(that._tileset)) {\n        that._tileset.debugPickedTileLabelOnly = value;\n\n        that._scene.requestRender();\n      }\n    }\n  });\n  /**\n   * Gets or sets the flag to show debug labels only for the currently picked tile.  This property is observable.\n   *\n   * @type {Boolean}\n   * @default false\n   */\n\n  this.showOnlyPickedTileDebugLabel = false;\n  var showGeometricError = knockout.observable();\n  knockout.defineProperty(this, \"showGeometricError\", {\n    get: function () {\n      return showGeometricError();\n    },\n    set: function (value) {\n      showGeometricError(value);\n\n      if (defined(that._tileset)) {\n        that._tileset.debugShowGeometricError = value;\n\n        that._scene.requestRender();\n      }\n    }\n  });\n  /**\n   * Gets or sets the flag to show tile geometric error.  This property is observable.\n   *\n   * @type {Boolean}\n   * @default false\n   */\n\n  this.showGeometricError = false;\n  var showRenderingStatistics = knockout.observable();\n  knockout.defineProperty(this, \"showRenderingStatistics\", {\n    get: function () {\n      return showRenderingStatistics();\n    },\n    set: function (value) {\n      showRenderingStatistics(value);\n\n      if (defined(that._tileset)) {\n        that._tileset.debugShowRenderingStatistics = value;\n\n        that._scene.requestRender();\n      }\n    }\n  });\n  /**\n   * Displays the number of commands, points, triangles and features used per tile.  This property is observable.\n   *\n   * @type {Boolean}\n   * @default false\n   */\n\n  this.showRenderingStatistics = false;\n  var showMemoryUsage = knockout.observable();\n  knockout.defineProperty(this, \"showMemoryUsage\", {\n    get: function () {\n      return showMemoryUsage();\n    },\n    set: function (value) {\n      showMemoryUsage(value);\n\n      if (defined(that._tileset)) {\n        that._tileset.debugShowMemoryUsage = value;\n\n        that._scene.requestRender();\n      }\n    }\n  });\n  /**\n   * Displays the memory used per tile.  This property is observable.\n   *\n   * @type {Boolean}\n   * @default false\n   */\n\n  this.showMemoryUsage = false;\n  var showUrl = knockout.observable();\n  knockout.defineProperty(this, \"showUrl\", {\n    get: function () {\n      return showUrl();\n    },\n    set: function (value) {\n      showUrl(value);\n\n      if (defined(that._tileset)) {\n        that._tileset.debugShowUrl = value;\n\n        that._scene.requestRender();\n      }\n    }\n  });\n  /**\n   * Gets or sets the flag to show the tile url.  This property is observable.\n   *\n   * @type {Boolean}\n   * @default false\n   */\n\n  this.showUrl = false;\n  var maximumScreenSpaceError = knockout.observable();\n  knockout.defineProperty(this, \"maximumScreenSpaceError\", {\n    get: function () {\n      return maximumScreenSpaceError();\n    },\n    set: function (value) {\n      value = Number(value);\n\n      if (!isNaN(value)) {\n        maximumScreenSpaceError(value);\n\n        if (defined(that._tileset)) {\n          that._tileset.maximumScreenSpaceError = value;\n        }\n      }\n    }\n  });\n  /**\n   * Gets or sets the maximum screen space error.  This property is observable.\n   *\n   * @type {Number}\n   * @default 16\n   */\n\n  this.maximumScreenSpaceError = 16;\n  var dynamicScreenSpaceErrorDensity = knockout.observable();\n  knockout.defineProperty(this, \"dynamicScreenSpaceErrorDensity\", {\n    get: function () {\n      return dynamicScreenSpaceErrorDensity();\n    },\n    set: function (value) {\n      value = Number(value);\n\n      if (!isNaN(value)) {\n        dynamicScreenSpaceErrorDensity(value);\n\n        if (defined(that._tileset)) {\n          that._tileset.dynamicScreenSpaceErrorDensity = value;\n        }\n      }\n    }\n  });\n  /**\n   * Gets or sets the dynamic screen space error density.  This property is observable.\n   *\n   * @type {Number}\n   * @default 0.00278\n   */\n\n  this.dynamicScreenSpaceErrorDensity = 0.00278;\n  /**\n   * Gets or sets the dynamic screen space error density slider value.\n   * This allows the slider to be exponential because values tend to be closer to 0 than 1.\n   * This property is observable.\n   *\n   * @type {Number}\n   * @default 0.00278\n   */\n\n  this.dynamicScreenSpaceErrorDensitySliderValue = undefined;\n  knockout.defineProperty(this, \"dynamicScreenSpaceErrorDensitySliderValue\", {\n    get: function () {\n      return Math.pow(dynamicScreenSpaceErrorDensity(), 1 / 6);\n    },\n    set: function (value) {\n      dynamicScreenSpaceErrorDensity(Math.pow(value, 6));\n    }\n  });\n  var dynamicScreenSpaceErrorFactor = knockout.observable();\n  knockout.defineProperty(this, \"dynamicScreenSpaceErrorFactor\", {\n    get: function () {\n      return dynamicScreenSpaceErrorFactor();\n    },\n    set: function (value) {\n      value = Number(value);\n\n      if (!isNaN(value)) {\n        dynamicScreenSpaceErrorFactor(value);\n\n        if (defined(that._tileset)) {\n          that._tileset.dynamicScreenSpaceErrorFactor = value;\n        }\n      }\n    }\n  });\n  /**\n   * Gets or sets the dynamic screen space error factor.  This property is observable.\n   *\n   * @type {Number}\n   * @default 4.0\n   */\n\n  this.dynamicScreenSpaceErrorFactor = 4.0;\n  var pickTileset = getPickTileset(this);\n  var pickActive = knockout.observable();\n  knockout.defineProperty(this, \"pickActive\", {\n    get: function () {\n      return pickActive();\n    },\n    set: function (value) {\n      pickActive(value);\n\n      if (value) {\n        that._eventHandler.setInputAction(pickTileset, ScreenSpaceEventType.LEFT_CLICK);\n      } else {\n        that._eventHandler.removeInputAction(ScreenSpaceEventType.LEFT_CLICK);\n      }\n    }\n  });\n  var pointCloudShading = knockout.observable();\n  knockout.defineProperty(this, \"pointCloudShading\", {\n    get: function () {\n      return pointCloudShading();\n    },\n    set: function (value) {\n      pointCloudShading(value);\n\n      if (defined(that._tileset)) {\n        that._tileset.pointCloudShading.attenuation = value;\n      }\n    }\n  });\n  /**\n   * Gets or sets the flag to enable point cloud shading. This property is observable.\n   *\n   * @type {Boolean}\n   * @default false\n   */\n\n  this.pointCloudShading = false;\n  var geometricErrorScale = knockout.observable();\n  knockout.defineProperty(this, \"geometricErrorScale\", {\n    get: function () {\n      return geometricErrorScale();\n    },\n    set: function (value) {\n      value = Number(value);\n\n      if (!isNaN(value)) {\n        geometricErrorScale(value);\n\n        if (defined(that._tileset)) {\n          that._tileset.pointCloudShading.geometricErrorScale = value;\n        }\n      }\n    }\n  });\n  /**\n   * Gets or sets the geometric error scale.  This property is observable.\n   *\n   * @type {Number}\n   * @default 1.0\n   */\n\n  this.geometricErrorScale = 1.0;\n  var maximumAttenuation = knockout.observable();\n  knockout.defineProperty(this, \"maximumAttenuation\", {\n    get: function () {\n      return maximumAttenuation();\n    },\n    set: function (value) {\n      value = Number(value);\n\n      if (!isNaN(value)) {\n        maximumAttenuation(value);\n\n        if (defined(that._tileset)) {\n          that._tileset.pointCloudShading.maximumAttenuation = value === 0 ? undefined : value;\n        }\n      }\n    }\n  });\n  /**\n   * Gets or sets the maximum attenuation.  This property is observable.\n   *\n   * @type {Number}\n   * @default 0\n   */\n\n  this.maximumAttenuation = 0;\n  var baseResolution = knockout.observable();\n  knockout.defineProperty(this, \"baseResolution\", {\n    get: function () {\n      return baseResolution();\n    },\n    set: function (value) {\n      value = Number(value);\n\n      if (!isNaN(value)) {\n        baseResolution(value);\n\n        if (defined(that._tileset)) {\n          that._tileset.pointCloudShading.baseResolution = value === 0 ? undefined : value;\n        }\n      }\n    }\n  });\n  /**\n   * Gets or sets the base resolution.  This property is observable.\n   *\n   * @type {Number}\n   * @default 0\n   */\n\n  this.baseResolution = 0;\n  var eyeDomeLighting = knockout.observable();\n  knockout.defineProperty(this, \"eyeDomeLighting\", {\n    get: function () {\n      return eyeDomeLighting();\n    },\n    set: function (value) {\n      eyeDomeLighting(value);\n\n      if (defined(that._tileset)) {\n        that._tileset.pointCloudShading.eyeDomeLighting = value;\n      }\n    }\n  });\n  /**\n   * Gets or sets the flag to enable eye dome lighting. This property is observable.\n   *\n   * @type {Boolean}\n   * @default false\n   */\n\n  this.eyeDomeLighting = false;\n  var eyeDomeLightingStrength = knockout.observable();\n  knockout.defineProperty(this, \"eyeDomeLightingStrength\", {\n    get: function () {\n      return eyeDomeLightingStrength();\n    },\n    set: function (value) {\n      value = Number(value);\n\n      if (!isNaN(value)) {\n        eyeDomeLightingStrength(value);\n\n        if (defined(that._tileset)) {\n          that._tileset.pointCloudShading.eyeDomeLightingStrength = value;\n        }\n      }\n    }\n  });\n  /**\n   * Gets or sets the eye dome lighting strength.  This property is observable.\n   *\n   * @type {Number}\n   * @default 1.0\n   */\n\n  this.eyeDomeLightingStrength = 1.0;\n  var eyeDomeLightingRadius = knockout.observable();\n  knockout.defineProperty(this, \"eyeDomeLightingRadius\", {\n    get: function () {\n      return eyeDomeLightingRadius();\n    },\n    set: function (value) {\n      value = Number(value);\n\n      if (!isNaN(value)) {\n        eyeDomeLightingRadius(value);\n\n        if (defined(that._tileset)) {\n          that._tileset.pointCloudShading.eyeDomeLightingRadius = value;\n        }\n      }\n    }\n  });\n  /**\n   * Gets or sets the eye dome lighting radius.  This property is observable.\n   *\n   * @type {Number}\n   * @default 1.0\n   */\n\n  this.eyeDomeLightingRadius = 1.0;\n  /**\n   * Gets or sets the pick state\n   *\n   * @type {Boolean}\n   * @default false\n   */\n\n  this.pickActive = false;\n  var skipLevelOfDetail = knockout.observable();\n  knockout.defineProperty(this, \"skipLevelOfDetail\", {\n    get: function () {\n      return skipLevelOfDetail();\n    },\n    set: function (value) {\n      skipLevelOfDetail(value);\n\n      if (defined(that._tileset)) {\n        that._tileset.skipLevelOfDetail = value;\n      }\n    }\n  });\n  /**\n   * Gets or sets the flag to determine if level of detail skipping should be applied during the traversal.\n   * This property is observable.\n   * @type {Boolean}\n   * @default true\n   */\n\n  this.skipLevelOfDetail = true;\n  var skipScreenSpaceErrorFactor = knockout.observable();\n  knockout.defineProperty(this, \"skipScreenSpaceErrorFactor\", {\n    get: function () {\n      return skipScreenSpaceErrorFactor();\n    },\n    set: function (value) {\n      value = Number(value);\n\n      if (!isNaN(value)) {\n        skipScreenSpaceErrorFactor(value);\n\n        if (defined(that._tileset)) {\n          that._tileset.skipScreenSpaceErrorFactor = value;\n        }\n      }\n    }\n  });\n  /**\n   * Gets or sets the multiplier defining the minimum screen space error to skip. This property is observable.\n   * @type {Number}\n   * @default 16\n   */\n\n  this.skipScreenSpaceErrorFactor = 16;\n  var baseScreenSpaceError = knockout.observable();\n  knockout.defineProperty(this, \"baseScreenSpaceError\", {\n    get: function () {\n      return baseScreenSpaceError();\n    },\n    set: function (value) {\n      value = Number(value);\n\n      if (!isNaN(value)) {\n        baseScreenSpaceError(value);\n\n        if (defined(that._tileset)) {\n          that._tileset.baseScreenSpaceError = value;\n        }\n      }\n    }\n  });\n  /**\n   * Gets or sets the screen space error that must be reached before skipping levels of detail. This property is observable.\n   * @type {Number}\n   * @default 1024\n   */\n\n  this.baseScreenSpaceError = 1024;\n  var skipLevels = knockout.observable();\n  knockout.defineProperty(this, \"skipLevels\", {\n    get: function () {\n      return skipLevels();\n    },\n    set: function (value) {\n      value = Number(value);\n\n      if (!isNaN(value)) {\n        skipLevels(value);\n\n        if (defined(that._tileset)) {\n          that._tileset.skipLevels = value;\n        }\n      }\n    }\n  });\n  /**\n   * Gets or sets the constant defining the minimum number of levels to skip when loading tiles. This property is observable.\n   * @type {Number}\n   * @default 1\n   */\n\n  this.skipLevels = 1;\n  var immediatelyLoadDesiredLevelOfDetail = knockout.observable();\n  knockout.defineProperty(this, \"immediatelyLoadDesiredLevelOfDetail\", {\n    get: function () {\n      return immediatelyLoadDesiredLevelOfDetail();\n    },\n    set: function (value) {\n      immediatelyLoadDesiredLevelOfDetail(value);\n\n      if (defined(that._tileset)) {\n        that._tileset.immediatelyLoadDesiredLevelOfDetail = value;\n      }\n    }\n  });\n  /**\n   * Gets or sets the flag which, when true, only tiles that meet the maximum screen space error will ever be downloaded.\n   * This property is observable.\n   * @type {Boolean}\n   * @default false\n   */\n\n  this.immediatelyLoadDesiredLevelOfDetail = false;\n  var loadSiblings = knockout.observable();\n  knockout.defineProperty(this, \"loadSiblings\", {\n    get: function () {\n      return loadSiblings();\n    },\n    set: function (value) {\n      loadSiblings(value);\n\n      if (defined(that._tileset)) {\n        that._tileset.loadSiblings = value;\n      }\n    }\n  });\n  /**\n   * Gets or sets the flag which determines whether siblings of visible tiles are always downloaded during traversal.\n   * This property is observable\n   * @type {Boolean}\n   * @default false\n   */\n\n  this.loadSiblings = false;\n  this._style = undefined;\n  this._shouldStyle = false;\n  this._definedProperties = [\"properties\", \"dynamicScreenSpaceError\", \"colorBlendMode\", \"picking\", \"colorize\", \"wireframe\", \"showBoundingVolumes\", \"showContentBoundingVolumes\", \"showRequestVolumes\", \"freezeFrame\", \"maximumScreenSpaceError\", \"dynamicScreenSpaceErrorDensity\", \"baseScreenSpaceError\", \"skipScreenSpaceErrorFactor\", \"skipLevelOfDetail\", \"skipLevels\", \"immediatelyLoadDesiredLevelOfDetail\", \"loadSiblings\", \"dynamicScreenSpaceErrorDensitySliderValue\", \"dynamicScreenSpaceErrorFactor\", \"pickActive\", \"showOnlyPickedTileDebugLabel\", \"showGeometricError\", \"showRenderingStatistics\", \"showMemoryUsage\", \"showUrl\", \"pointCloudShading\", \"geometricErrorScale\", \"maximumAttenuation\", \"baseResolution\", \"eyeDomeLighting\", \"eyeDomeLightingStrength\", \"eyeDomeLightingRadius\"];\n  this._removePostRenderEvent = scene.postRender.addEventListener(function () {\n    that._update();\n  });\n\n  if (!defined(this._tileset)) {\n    selectTilesetOnHover(this, true);\n  }\n}\n\nObject.defineProperties(Cesium3DTilesInspectorViewModel.prototype, {\n  /**\n   * Gets the scene\n   * @memberof Cesium3DTilesInspectorViewModel.prototype\n   * @type {Scene}\n   * @readonly\n   */\n  scene: {\n    get: function () {\n      return this._scene;\n    }\n  },\n\n  /**\n   * Gets the performance container\n   * @memberof Cesium3DTilesInspectorViewModel.prototype\n   * @type {HTMLElement}\n   * @readonly\n   */\n  performanceContainer: {\n    get: function () {\n      return this._performanceContainer;\n    }\n  },\n\n  /**\n   * Gets the statistics text.  This property is observable.\n   * @memberof Cesium3DTilesInspectorViewModel.prototype\n   * @type {String}\n   * @readonly\n   */\n  statisticsText: {\n    get: function () {\n      return this._statisticsText;\n    }\n  },\n\n  /**\n   * Gets the pick statistics text.  This property is observable.\n   * @memberof Cesium3DTilesInspectorViewModel.prototype\n   * @type {String}\n   * @readonly\n   */\n  pickStatisticsText: {\n    get: function () {\n      return this._pickStatisticsText;\n    }\n  },\n\n  /**\n   * Gets the available blend modes\n   * @memberof Cesium3DTilesInspectorViewModel.prototype\n   * @type {Object[]}\n   * @readonly\n   */\n  colorBlendModes: {\n    get: function () {\n      return colorBlendModes;\n    }\n  },\n\n  /**\n   * Gets the editor error message\n   * @memberof Cesium3DTilesInspectorViewModel.prototype\n   * @type {String}\n   * @readonly\n   */\n  editorError: {\n    get: function () {\n      return this._editorError;\n    }\n  },\n\n  /**\n   * Gets or sets the tileset of the view model.\n   * @memberof Cesium3DTilesInspectorViewModel.prototype\n   * @type {Cesium3DTileset}\n   */\n  tileset: {\n    get: function () {\n      return this._tileset;\n    },\n    set: function (tileset) {\n      this._tileset = tileset;\n      this._style = undefined;\n      this.styleString = \"{}\";\n      this.feature = undefined;\n      this.tile = undefined;\n\n      if (defined(tileset)) {\n        var that = this;\n        tileset.readyPromise.then(function (t) {\n          if (!that.isDestroyed()) {\n            that._properties(t.properties);\n          }\n        }); // update tileset with existing settings\n\n        var settings = [\"colorize\", \"wireframe\", \"showBoundingVolumes\", \"showContentBoundingVolumes\", \"showRequestVolumes\", \"freezeFrame\", \"showOnlyPickedTileDebugLabel\", \"showGeometricError\", \"showRenderingStatistics\", \"showMemoryUsage\", \"showUrl\"];\n        var length = settings.length;\n\n        for (var i = 0; i < length; ++i) {\n          var setting = settings[i]; //eslint-disable-next-line no-self-assign\n\n          this[setting] = this[setting];\n        } // update view model with existing tileset settings\n\n\n        this.maximumScreenSpaceError = tileset.maximumScreenSpaceError;\n        this.dynamicScreenSpaceError = tileset.dynamicScreenSpaceError;\n        this.dynamicScreenSpaceErrorDensity = tileset.dynamicScreenSpaceErrorDensity;\n        this.dynamicScreenSpaceErrorFactor = tileset.dynamicScreenSpaceErrorFactor;\n        this.colorBlendMode = tileset.colorBlendMode;\n        this.skipLevelOfDetail = tileset.skipLevelOfDetail;\n        this.skipScreenSpaceErrorFactor = tileset.skipScreenSpaceErrorFactor;\n        this.baseScreenSpaceError = tileset.baseScreenSpaceError;\n        this.skipLevels = tileset.skipLevels;\n        this.immediatelyLoadDesiredLevelOfDetail = tileset.immediatelyLoadDesiredLevelOfDetail;\n        this.loadSiblings = tileset.loadSiblings;\n        var pointCloudShading = tileset.pointCloudShading;\n        this.pointCloudShading = pointCloudShading.attenuation;\n        this.geometricErrorScale = pointCloudShading.geometricErrorScale;\n        this.maximumAttenuation = pointCloudShading.maximumAttenuation ? pointCloudShading.maximumAttenuation : 0.0;\n        this.baseResolution = pointCloudShading.baseResolution ? pointCloudShading.baseResolution : 0.0;\n        this.eyeDomeLighting = pointCloudShading.eyeDomeLighting;\n        this.eyeDomeLightingStrength = pointCloudShading.eyeDomeLightingStrength;\n        this.eyeDomeLightingRadius = pointCloudShading.eyeDomeLightingRadius;\n\n        this._scene.requestRender();\n      } else {\n        this._properties({});\n      }\n\n      this._statisticsText = getStatistics(tileset, false);\n      this._pickStatisticsText = getStatistics(tileset, true);\n      selectTilesetOnHover(this, false);\n    }\n  },\n\n  /**\n   * Gets the current feature of the view model.\n   * @memberof Cesium3DTilesInspectorViewModel.prototype\n   * @type {Cesium3DTileFeature}\n   */\n  feature: {\n    get: function () {\n      return this._feature;\n    },\n    set: function (feature) {\n      if (this._feature === feature) {\n        return;\n      }\n\n      var currentFeature = this._feature;\n\n      if (defined(currentFeature) && !currentFeature.content.isDestroyed()) {\n        // Restore original color to feature that is no longer selected\n        if (!this.colorize && defined(this._style)) {\n          currentFeature.color = defined(this._style.color) ? this._style.color.evaluateColor(currentFeature, scratchColor) : Color.WHITE;\n        } else {\n          currentFeature.color = oldColor;\n        }\n\n        this._scene.requestRender();\n      }\n\n      if (defined(feature)) {\n        // Highlight new feature\n        Color.clone(feature.color, oldColor);\n        feature.color = highlightColor;\n\n        this._scene.requestRender();\n      }\n\n      this._feature = feature;\n    }\n  },\n\n  /**\n   * Gets the current tile of the view model\n   * @memberof Cesium3DTilesInspectorViewModel.prototype\n   * @type {Cesium3DTile}\n   */\n  tile: {\n    get: function () {\n      return this._tile;\n    },\n    set: function (tile) {\n      if (this._tile === tile) {\n        return;\n      }\n\n      var currentTile = this._tile;\n\n      if (defined(currentTile) && !currentTile.isDestroyed() && !hasFeatures(currentTile.content)) {\n        // Restore original color to tile that is no longer selected\n        currentTile.color = oldColor;\n\n        this._scene.requestRender();\n      }\n\n      if (defined(tile) && !hasFeatures(tile.content)) {\n        // Highlight new tile\n        Color.clone(tile.color, oldColor);\n        tile.color = highlightColor;\n\n        this._scene.requestRender();\n      }\n\n      this._tile = tile;\n    }\n  }\n});\n\nfunction hasFeatures(content) {\n  if (content.featuresLength > 0) {\n    return true;\n  }\n\n  var innerContents = content.innerContents;\n\n  if (defined(innerContents)) {\n    var length = innerContents.length;\n\n    for (var i = 0; i < length; ++i) {\n      if (!hasFeatures(innerContents[i])) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  return false;\n}\n/**\n * Toggles the pick tileset mode\n */\n\n\nCesium3DTilesInspectorViewModel.prototype.togglePickTileset = function () {\n  this.pickActive = !this.pickActive;\n};\n/**\n * Toggles the inspector visibility\n */\n\n\nCesium3DTilesInspectorViewModel.prototype.toggleInspector = function () {\n  this.inspectorVisible = !this.inspectorVisible;\n};\n/**\n * Toggles the visibility of the tileset section\n */\n\n\nCesium3DTilesInspectorViewModel.prototype.toggleTileset = function () {\n  this.tilesetVisible = !this.tilesetVisible;\n};\n/**\n * Toggles the visibility of the display section\n */\n\n\nCesium3DTilesInspectorViewModel.prototype.toggleDisplay = function () {\n  this.displayVisible = !this.displayVisible;\n};\n/**\n * Toggles the visibility of the update section\n */\n\n\nCesium3DTilesInspectorViewModel.prototype.toggleUpdate = function () {\n  this.updateVisible = !this.updateVisible;\n};\n/**\n * Toggles the visibility of the logging section\n */\n\n\nCesium3DTilesInspectorViewModel.prototype.toggleLogging = function () {\n  this.loggingVisible = !this.loggingVisible;\n};\n/**\n * Toggles the visibility of the style section\n */\n\n\nCesium3DTilesInspectorViewModel.prototype.toggleStyle = function () {\n  this.styleVisible = !this.styleVisible;\n};\n/**\n * Toggles the visibility of the tile Debug Info section\n */\n\n\nCesium3DTilesInspectorViewModel.prototype.toggleTileDebugLabels = function () {\n  this.tileDebugLabelsVisible = !this.tileDebugLabelsVisible;\n};\n/**\n * Toggles the visibility of the optimization section\n */\n\n\nCesium3DTilesInspectorViewModel.prototype.toggleOptimization = function () {\n  this.optimizationVisible = !this.optimizationVisible;\n};\n/**\n * Trims tile cache\n */\n\n\nCesium3DTilesInspectorViewModel.prototype.trimTilesCache = function () {\n  if (defined(this._tileset)) {\n    this._tileset.trimLoadedTiles();\n  }\n};\n/**\n * Compiles the style in the style editor.\n */\n\n\nCesium3DTilesInspectorViewModel.prototype.compileStyle = function () {\n  var tileset = this._tileset;\n\n  if (!defined(tileset) || this.styleString === JSON.stringify(tileset.style)) {\n    return;\n  }\n\n  this._editorError = \"\";\n\n  try {\n    if (this.styleString.length === 0) {\n      this.styleString = \"{}\";\n    }\n\n    this._style = new Cesium3DTileStyle(JSON.parse(this.styleString));\n    this._shouldStyle = true;\n\n    this._scene.requestRender();\n  } catch (err) {\n    this._editorError = err.toString();\n  } // set feature again so pick coloring is set\n\n\n  this.feature = this._feature;\n  this.tile = this._tile;\n};\n/**\n * Handles key press events on the style editor.\n */\n\n\nCesium3DTilesInspectorViewModel.prototype.styleEditorKeyPress = function (sender, event) {\n  if (event.keyCode === 9) {\n    //tab\n    event.preventDefault();\n    var textArea = event.target;\n    var start = textArea.selectionStart;\n    var end = textArea.selectionEnd;\n    var newEnd = end;\n    var selected = textArea.value.slice(start, end);\n    var lines = selected.split(\"\\n\");\n    var length = lines.length;\n    var i;\n\n    if (!event.shiftKey) {\n      for (i = 0; i < length; ++i) {\n        lines[i] = \"  \" + lines[i];\n        newEnd += 2;\n      }\n    } else {\n      for (i = 0; i < length; ++i) {\n        if (lines[i][0] === \" \") {\n          if (lines[i][1] === \" \") {\n            lines[i] = lines[i].substr(2);\n            newEnd -= 2;\n          } else {\n            lines[i] = lines[i].substr(1);\n            newEnd -= 1;\n          }\n        }\n      }\n    }\n\n    var newText = lines.join(\"\\n\");\n    textArea.value = textArea.value.slice(0, start) + newText + textArea.value.slice(end);\n    textArea.selectionStart = start !== end ? start : newEnd;\n    textArea.selectionEnd = newEnd;\n  } else if (event.ctrlKey && (event.keyCode === 10 || event.keyCode === 13)) {\n    //ctrl + enter\n    this.compileStyle();\n  }\n\n  return true;\n};\n/**\n * Updates the values of view model\n * @private\n */\n\n\nCesium3DTilesInspectorViewModel.prototype._update = function () {\n  var tileset = this._tileset;\n\n  if (this.performance) {\n    this._performanceDisplay.update();\n  }\n\n  if (defined(tileset)) {\n    if (tileset.isDestroyed()) {\n      this.tile = undefined;\n      this.feature = undefined;\n      this.tileset = undefined;\n      return;\n    }\n\n    var style = tileset.style;\n\n    if (this._style !== tileset.style) {\n      if (this._shouldStyle) {\n        tileset.style = this._style;\n        this._shouldStyle = false;\n      } else {\n        this._style = style;\n        this.styleString = JSON.stringify(style.style, null, \"  \");\n      }\n    }\n  }\n\n  if (this.showStatistics) {\n    this._statisticsText = getStatistics(tileset, false);\n    this._pickStatisticsText = getStatistics(tileset, true);\n  }\n};\n/**\n * @returns {Boolean} true if the object has been destroyed, false otherwise.\n */\n\n\nCesium3DTilesInspectorViewModel.prototype.isDestroyed = function () {\n  return false;\n};\n/**\n * Destroys the widget.  Should be called if permanently\n * removing the widget from layout.\n */\n\n\nCesium3DTilesInspectorViewModel.prototype.destroy = function () {\n  this._eventHandler.destroy();\n\n  this._removePostRenderEvent();\n\n  var that = this;\n\n  this._definedProperties.forEach(function (property) {\n    knockout.getObservable(that, property).dispose();\n  });\n\n  return destroyObject(this);\n};\n/**\n * Generates an HTML string of the statistics\n *\n * @function\n * @param {Cesium3DTileset} tileset The tileset\n * @param {Boolean} isPick Whether this is getting the statistics for the pick pass\n * @returns {String} The formatted statistics\n */\n\n\nCesium3DTilesInspectorViewModel.getStatistics = getStatistics;\nexport default Cesium3DTilesInspectorViewModel;","map":{"version":3,"sources":["C:/Users/passa/Desktop/WaterLevelReact/node_modules/cesium/Source/Widgets/Cesium3DTilesInspector/Cesium3DTilesInspectorViewModel.js"],"names":["Check","Color","defined","destroyObject","ScreenSpaceEventHandler","ScreenSpaceEventType","Cesium3DTileColorBlendMode","Cesium3DTileFeature","Cesium3DTilePass","Cesium3DTileset","Cesium3DTileStyle","PerformanceDisplay","knockout","getPickTileset","viewModel","e","pick","_scene","position","primitive","tileset","pickActive","selectTilesetOnHover","value","_eventHandler","setInputAction","endPosition","MOUSE_MOVE","removeInputAction","picking","stringOptions","maximumFractionDigits","formatMemoryString","memorySizeInBytes","memoryInMegabytes","toLocaleString","undefined","Math","round","getStatistics","isPick","statistics","_statisticsPerPass","PICK","RENDER","s","visited","selected","numberOfCommands","numberOfPendingRequests","numberOfAttemptedRequests","numberOfTilesProcessing","numberOfTilesWithContentReady","numberOfTilesTotal","numberOfFeaturesSelected","numberOfFeaturesLoaded","numberOfPointsSelected","numberOfPointsLoaded","numberOfTrianglesSelected","numberOfTilesStyled","numberOfFeaturesStyled","numberOfTilesCulledWithChildrenUnion","geometryByteLength","texturesByteLength","batchTableByteLength","colorBlendModes","text","HIGHLIGHT","REPLACE","MIX","highlightColor","scratchColor","oldColor","Cesium3DTilesInspectorViewModel","scene","performanceContainer","typeOf","object","that","canvas","_performanceContainer","_canvas","_performanceDisplay","container","_statisticsText","_pickStatisticsText","_editorError","performance","showStatistics","showPickStatistics","inspectorVisible","tilesetVisible","displayVisible","updateVisible","loggingVisible","styleVisible","tileDebugLabelsVisible","optimizationVisible","styleString","_tileset","_feature","_tile","track","_properties","observable","properties","defineProperty","names","prop","hasOwnProperty","push","dynamicScreenSpaceError","get","set","colorBlendMode","requestRender","showOnlyPickedTileDebugLabel","picked","feature","tile","content","pickPositionSupported","pickPosition","debugPickPosition","debugPickedTile","colorize","debugColorizeTiles","wireframe","debugWireframe","showBoundingVolumes","debugShowBoundingVolume","showContentBoundingVolumes","debugShowContentBoundingVolume","showRequestVolumes","debugShowViewerRequestVolume","freezeFrame","debugFreezeFrame","debugShowFrustumPlanes","debugPickedTileLabelOnly","showGeometricError","debugShowGeometricError","showRenderingStatistics","debugShowRenderingStatistics","showMemoryUsage","debugShowMemoryUsage","showUrl","debugShowUrl","maximumScreenSpaceError","Number","isNaN","dynamicScreenSpaceErrorDensity","dynamicScreenSpaceErrorDensitySliderValue","pow","dynamicScreenSpaceErrorFactor","pickTileset","LEFT_CLICK","pointCloudShading","attenuation","geometricErrorScale","maximumAttenuation","baseResolution","eyeDomeLighting","eyeDomeLightingStrength","eyeDomeLightingRadius","skipLevelOfDetail","skipScreenSpaceErrorFactor","baseScreenSpaceError","skipLevels","immediatelyLoadDesiredLevelOfDetail","loadSiblings","_style","_shouldStyle","_definedProperties","_removePostRenderEvent","postRender","addEventListener","_update","Object","defineProperties","prototype","statisticsText","pickStatisticsText","editorError","readyPromise","then","t","isDestroyed","settings","length","i","setting","currentFeature","color","evaluateColor","WHITE","clone","currentTile","hasFeatures","featuresLength","innerContents","togglePickTileset","toggleInspector","toggleTileset","toggleDisplay","toggleUpdate","toggleLogging","toggleStyle","toggleTileDebugLabels","toggleOptimization","trimTilesCache","trimLoadedTiles","compileStyle","JSON","stringify","style","parse","err","toString","styleEditorKeyPress","sender","event","keyCode","preventDefault","textArea","target","start","selectionStart","end","selectionEnd","newEnd","slice","lines","split","shiftKey","substr","newText","join","ctrlKey","update","destroy","forEach","property","getObservable","dispose"],"mappings":"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","sourcesContent":["import Check from \"../../Core/Check.js\";\nimport Color from \"../../Core/Color.js\";\nimport defined from \"../../Core/defined.js\";\nimport destroyObject from \"../../Core/destroyObject.js\";\nimport ScreenSpaceEventHandler from \"../../Core/ScreenSpaceEventHandler.js\";\nimport ScreenSpaceEventType from \"../../Core/ScreenSpaceEventType.js\";\nimport Cesium3DTileColorBlendMode from \"../../Scene/Cesium3DTileColorBlendMode.js\";\nimport Cesium3DTileFeature from \"../../Scene/Cesium3DTileFeature.js\";\nimport Cesium3DTilePass from \"../../Scene/Cesium3DTilePass.js\";\nimport Cesium3DTileset from \"../../Scene/Cesium3DTileset.js\";\nimport Cesium3DTileStyle from \"../../Scene/Cesium3DTileStyle.js\";\nimport PerformanceDisplay from \"../../Scene/PerformanceDisplay.js\";\nimport knockout from \"../../ThirdParty/knockout.js\";\n\nfunction getPickTileset(viewModel) {\n  return function (e) {\n    var pick = viewModel._scene.pick(e.position);\n    if (defined(pick) && pick.primitive instanceof Cesium3DTileset) {\n      viewModel.tileset = pick.primitive;\n    }\n    viewModel.pickActive = false;\n  };\n}\n\nfunction selectTilesetOnHover(viewModel, value) {\n  if (value) {\n    viewModel._eventHandler.setInputAction(function (e) {\n      var pick = viewModel._scene.pick(e.endPosition);\n      if (defined(pick) && pick.primitive instanceof Cesium3DTileset) {\n        viewModel.tileset = pick.primitive;\n      }\n    }, ScreenSpaceEventType.MOUSE_MOVE);\n  } else {\n    viewModel._eventHandler.removeInputAction(ScreenSpaceEventType.MOUSE_MOVE);\n\n    // Restore hover-over selection to its current value\n    // eslint-disable-next-line no-self-assign\n    viewModel.picking = viewModel.picking;\n  }\n}\n\nvar stringOptions = {\n  maximumFractionDigits: 3,\n};\n\nfunction formatMemoryString(memorySizeInBytes) {\n  var memoryInMegabytes = memorySizeInBytes / 1048576;\n  if (memoryInMegabytes < 1.0) {\n    return memoryInMegabytes.toLocaleString(undefined, stringOptions);\n  }\n  return Math.round(memoryInMegabytes).toLocaleString();\n}\n\nfunction getStatistics(tileset, isPick) {\n  if (!defined(tileset)) {\n    return \"\";\n  }\n\n  var statistics = isPick\n    ? tileset._statisticsPerPass[Cesium3DTilePass.PICK]\n    : tileset._statisticsPerPass[Cesium3DTilePass.RENDER];\n\n  // Since the pick pass uses a smaller frustum around the pixel of interest,\n  // the statistics will be different than the normal render pass.\n  var s = '<ul class=\"cesium-cesiumInspector-statistics\">';\n  s +=\n    // --- Rendering statistics\n    \"<li><strong>Visited: </strong>\" +\n    statistics.visited.toLocaleString() +\n    \"</li>\" +\n    // Number of commands returned is likely to be higher than the number of tiles selected\n    // because of tiles that create multiple commands.\n    \"<li><strong>Selected: </strong>\" +\n    statistics.selected.toLocaleString() +\n    \"</li>\" +\n    // Number of commands executed is likely to be higher because of commands overlapping\n    // multiple frustums.\n    \"<li><strong>Commands: </strong>\" +\n    statistics.numberOfCommands.toLocaleString() +\n    \"</li>\";\n  s += \"</ul>\";\n  if (!isPick) {\n    s += '<ul class=\"cesium-cesiumInspector-statistics\">';\n    s +=\n      // --- Cache/loading statistics\n      \"<li><strong>Requests: </strong>\" +\n      statistics.numberOfPendingRequests.toLocaleString() +\n      \"</li>\" +\n      \"<li><strong>Attempted: </strong>\" +\n      statistics.numberOfAttemptedRequests.toLocaleString() +\n      \"</li>\" +\n      \"<li><strong>Processing: </strong>\" +\n      statistics.numberOfTilesProcessing.toLocaleString() +\n      \"</li>\" +\n      \"<li><strong>Content Ready: </strong>\" +\n      statistics.numberOfTilesWithContentReady.toLocaleString() +\n      \"</li>\" +\n      // Total number of tiles includes tiles without content, so \"Ready\" may never reach\n      // \"Total.\"  Total also will increase when a tile with a tileset JSON content is loaded.\n      \"<li><strong>Total: </strong>\" +\n      statistics.numberOfTilesTotal.toLocaleString() +\n      \"</li>\";\n    s += \"</ul>\";\n    s += '<ul class=\"cesium-cesiumInspector-statistics\">';\n    s +=\n      // --- Features statistics\n      \"<li><strong>Features Selected: </strong>\" +\n      statistics.numberOfFeaturesSelected.toLocaleString() +\n      \"</li>\" +\n      \"<li><strong>Features Loaded: </strong>\" +\n      statistics.numberOfFeaturesLoaded.toLocaleString() +\n      \"</li>\" +\n      \"<li><strong>Points Selected: </strong>\" +\n      statistics.numberOfPointsSelected.toLocaleString() +\n      \"</li>\" +\n      \"<li><strong>Points Loaded: </strong>\" +\n      statistics.numberOfPointsLoaded.toLocaleString() +\n      \"</li>\" +\n      \"<li><strong>Triangles Selected: </strong>\" +\n      statistics.numberOfTrianglesSelected.toLocaleString() +\n      \"</li>\";\n    s += \"</ul>\";\n    s += '<ul class=\"cesium-cesiumInspector-statistics\">';\n    s +=\n      // --- Styling statistics\n      \"<li><strong>Tiles styled: </strong>\" +\n      statistics.numberOfTilesStyled.toLocaleString() +\n      \"</li>\" +\n      \"<li><strong>Features styled: </strong>\" +\n      statistics.numberOfFeaturesStyled.toLocaleString() +\n      \"</li>\";\n    s += \"</ul>\";\n    s += '<ul class=\"cesium-cesiumInspector-statistics\">';\n    s +=\n      // --- Optimization statistics\n      \"<li><strong>Children Union Culled: </strong>\" +\n      statistics.numberOfTilesCulledWithChildrenUnion.toLocaleString() +\n      \"</li>\";\n    s += \"</ul>\";\n    s += '<ul class=\"cesium-cesiumInspector-statistics\">';\n    s +=\n      // --- Memory statistics\n      \"<li><strong>Geometry Memory (MB): </strong>\" +\n      formatMemoryString(statistics.geometryByteLength) +\n      \"</li>\" +\n      \"<li><strong>Texture Memory (MB): </strong>\" +\n      formatMemoryString(statistics.texturesByteLength) +\n      \"</li>\" +\n      \"<li><strong>Batch Table Memory (MB): </strong>\" +\n      formatMemoryString(statistics.batchTableByteLength) +\n      \"</li>\";\n    s += \"</ul>\";\n  }\n  return s;\n}\n\nvar colorBlendModes = [\n  {\n    text: \"Highlight\",\n    value: Cesium3DTileColorBlendMode.HIGHLIGHT,\n  },\n  {\n    text: \"Replace\",\n    value: Cesium3DTileColorBlendMode.REPLACE,\n  },\n  {\n    text: \"Mix\",\n    value: Cesium3DTileColorBlendMode.MIX,\n  },\n];\n\nvar highlightColor = new Color(1.0, 1.0, 0.0, 0.4);\nvar scratchColor = new Color();\nvar oldColor = new Color();\n\n/**\n * The view model for {@link Cesium3DTilesInspector}.\n * @alias Cesium3DTilesInspectorViewModel\n * @constructor\n *\n * @param {Scene} scene The scene instance to use.\n * @param {HTMLElement} performanceContainer The container for the performance display\n */\nfunction Cesium3DTilesInspectorViewModel(scene, performanceContainer) {\n  //>>includeStart('debug', pragmas.debug);\n  Check.typeOf.object(\"scene\", scene);\n  Check.typeOf.object(\"performanceContainer\", performanceContainer);\n  //>>includeEnd('debug');\n\n  var that = this;\n  var canvas = scene.canvas;\n  this._eventHandler = new ScreenSpaceEventHandler(canvas);\n  this._scene = scene;\n  this._performanceContainer = performanceContainer;\n  this._canvas = canvas;\n\n  this._performanceDisplay = new PerformanceDisplay({\n    container: performanceContainer,\n  });\n\n  this._statisticsText = \"\";\n  this._pickStatisticsText = \"\";\n  this._editorError = \"\";\n\n  /**\n   * Gets or sets the flag to enable performance display.  This property is observable.\n   *\n   * @type {Boolean}\n   * @default false\n   */\n  this.performance = false;\n\n  /**\n   * Gets or sets the flag to show statistics.  This property is observable.\n   *\n   * @type {Boolean}\n   * @default true\n   */\n  this.showStatistics = true;\n\n  /**\n   * Gets or sets the flag to show pick statistics.  This property is observable.\n   *\n   * @type {Boolean}\n   * @default false\n   */\n  this.showPickStatistics = true;\n\n  /**\n   * Gets or sets the flag to show the inspector.  This property is observable.\n   *\n   * @type {Boolean}\n   * @default true\n   */\n  this.inspectorVisible = true;\n\n  /**\n   * Gets or sets the flag to show the tileset section.  This property is observable.\n   *\n   * @type {Boolean}\n   * @default false\n   */\n  this.tilesetVisible = false;\n\n  /**\n   * Gets or sets the flag to show the display section.  This property is observable.\n   *\n   * @type {Boolean}\n   * @default false\n   */\n  this.displayVisible = false;\n\n  /**\n   * Gets or sets the flag to show the update section.  This property is observable.\n   *\n   * @type {Boolean}\n   * @default false\n   */\n  this.updateVisible = false;\n\n  /**\n   * Gets or sets the flag to show the logging section.  This property is observable.\n   *\n   * @type {Boolean}\n   * @default false\n   */\n  this.loggingVisible = false;\n\n  /**\n   * Gets or sets the flag to show the style section.  This property is observable.\n   *\n   * @type {Boolean}\n   * @default false\n   */\n  this.styleVisible = false;\n\n  /**\n   * Gets or sets the flag to show the tile info section.  This property is observable.\n   *\n   * @type {Boolean}\n   * @default false\n   */\n  this.tileDebugLabelsVisible = false;\n\n  /**\n   * Gets or sets the flag to show the optimization info section. This property is observable.\n   *\n   * @type {Boolean}\n   * @default false;\n   */\n  this.optimizationVisible = false;\n\n  /**\n   * Gets or sets the JSON for the tileset style.  This property is observable.\n   *\n   * @type {String}\n   * @default '{}'\n   */\n  this.styleString = \"{}\";\n\n  this._tileset = undefined;\n  this._feature = undefined;\n  this._tile = undefined;\n\n  knockout.track(this, [\n    \"performance\",\n    \"inspectorVisible\",\n    \"_statisticsText\",\n    \"_pickStatisticsText\",\n    \"_editorError\",\n    \"showPickStatistics\",\n    \"showStatistics\",\n    \"tilesetVisible\",\n    \"displayVisible\",\n    \"updateVisible\",\n    \"loggingVisible\",\n    \"styleVisible\",\n    \"optimizationVisible\",\n    \"tileDebugLabelsVisible\",\n    \"styleString\",\n    \"_feature\",\n    \"_tile\",\n  ]);\n\n  this._properties = knockout.observable({});\n  /**\n   * Gets the names of the properties in the tileset.  This property is observable.\n   * @type {String[]}\n   * @readonly\n   */\n  this.properties = [];\n  knockout.defineProperty(this, \"properties\", function () {\n    var names = [];\n    var properties = that._properties();\n    for (var prop in properties) {\n      if (properties.hasOwnProperty(prop)) {\n        names.push(prop);\n      }\n    }\n    return names;\n  });\n\n  var dynamicScreenSpaceError = knockout.observable();\n  knockout.defineProperty(this, \"dynamicScreenSpaceError\", {\n    get: function () {\n      return dynamicScreenSpaceError();\n    },\n    set: function (value) {\n      dynamicScreenSpaceError(value);\n      if (defined(that._tileset)) {\n        that._tileset.dynamicScreenSpaceError = value;\n      }\n    },\n  });\n  /**\n   * Gets or sets the flag to enable dynamic screen space error.  This property is observable.\n   *\n   * @type {Boolean}\n   * @default false\n   */\n  this.dynamicScreenSpaceError = false;\n\n  var colorBlendMode = knockout.observable();\n  knockout.defineProperty(this, \"colorBlendMode\", {\n    get: function () {\n      return colorBlendMode();\n    },\n    set: function (value) {\n      colorBlendMode(value);\n      if (defined(that._tileset)) {\n        that._tileset.colorBlendMode = value;\n        that._scene.requestRender();\n      }\n    },\n  });\n  /**\n   * Gets or sets the color blend mode.  This property is observable.\n   *\n   * @type {Cesium3DTileColorBlendMode}\n   * @default Cesium3DTileColorBlendMode.HIGHLIGHT\n   */\n  this.colorBlendMode = Cesium3DTileColorBlendMode.HIGHLIGHT;\n\n  var showOnlyPickedTileDebugLabel = knockout.observable();\n  var picking = knockout.observable();\n  knockout.defineProperty(this, \"picking\", {\n    get: function () {\n      return picking();\n    },\n    set: function (value) {\n      picking(value);\n      if (value) {\n        that._eventHandler.setInputAction(function (e) {\n          var picked = scene.pick(e.endPosition);\n          if (picked instanceof Cesium3DTileFeature) {\n            // Picked a feature\n            that.feature = picked;\n            that.tile = picked.content.tile;\n          } else if (defined(picked) && defined(picked.content)) {\n            // Picked a tile\n            that.feature = undefined;\n            that.tile = picked.content.tile;\n          } else {\n            // Picked nothing\n            that.feature = undefined;\n            that.tile = undefined;\n          }\n          if (!defined(that._tileset)) {\n            return;\n          }\n          if (\n            showOnlyPickedTileDebugLabel &&\n            defined(picked) &&\n            defined(picked.content)\n          ) {\n            var position;\n            if (scene.pickPositionSupported) {\n              position = scene.pickPosition(e.endPosition);\n              if (defined(position)) {\n                that._tileset.debugPickPosition = position;\n              }\n            }\n            that._tileset.debugPickedTile = picked.content.tile;\n          } else {\n            that._tileset.debugPickedTile = undefined;\n          }\n          that._scene.requestRender();\n        }, ScreenSpaceEventType.MOUSE_MOVE);\n      } else {\n        that.feature = undefined;\n        that.tile = undefined;\n        that._eventHandler.removeInputAction(ScreenSpaceEventType.MOUSE_MOVE);\n      }\n    },\n  });\n  /**\n   * Gets or sets the flag to enable picking.  This property is observable.\n   *\n   * @type {Boolean}\n   * @default true\n   */\n  this.picking = true;\n\n  var colorize = knockout.observable();\n  knockout.defineProperty(this, \"colorize\", {\n    get: function () {\n      return colorize();\n    },\n    set: function (value) {\n      colorize(value);\n      if (defined(that._tileset)) {\n        that._tileset.debugColorizeTiles = value;\n        that._scene.requestRender();\n      }\n    },\n  });\n  /**\n   * Gets or sets the flag to colorize tiles.  This property is observable.\n   *\n   * @type {Boolean}\n   * @default false\n   */\n  this.colorize = false;\n\n  var wireframe = knockout.observable();\n  knockout.defineProperty(this, \"wireframe\", {\n    get: function () {\n      return wireframe();\n    },\n    set: function (value) {\n      wireframe(value);\n      if (defined(that._tileset)) {\n        that._tileset.debugWireframe = value;\n        that._scene.requestRender();\n      }\n    },\n  });\n  /**\n   * Gets or sets the flag to draw with wireframe.  This property is observable.\n   *\n   * @type {Boolean}\n   * @default false\n   */\n  this.wireframe = false;\n\n  var showBoundingVolumes = knockout.observable();\n  knockout.defineProperty(this, \"showBoundingVolumes\", {\n    get: function () {\n      return showBoundingVolumes();\n    },\n    set: function (value) {\n      showBoundingVolumes(value);\n      if (defined(that._tileset)) {\n        that._tileset.debugShowBoundingVolume = value;\n        that._scene.requestRender();\n      }\n    },\n  });\n  /**\n   * Gets or sets the flag to show bounding volumes.  This property is observable.\n   *\n   * @type {Boolean}\n   * @default false\n   */\n  this.showBoundingVolumes = false;\n\n  var showContentBoundingVolumes = knockout.observable();\n  knockout.defineProperty(this, \"showContentBoundingVolumes\", {\n    get: function () {\n      return showContentBoundingVolumes();\n    },\n    set: function (value) {\n      showContentBoundingVolumes(value);\n      if (defined(that._tileset)) {\n        that._tileset.debugShowContentBoundingVolume = value;\n        that._scene.requestRender();\n      }\n    },\n  });\n  /**\n   * Gets or sets the flag to show content volumes.  This property is observable.\n   *\n   * @type {Boolean}\n   * @default false\n   */\n  this.showContentBoundingVolumes = false;\n\n  var showRequestVolumes = knockout.observable();\n  knockout.defineProperty(this, \"showRequestVolumes\", {\n    get: function () {\n      return showRequestVolumes();\n    },\n    set: function (value) {\n      showRequestVolumes(value);\n      if (defined(that._tileset)) {\n        that._tileset.debugShowViewerRequestVolume = value;\n        that._scene.requestRender();\n      }\n    },\n  });\n  /**\n   * Gets or sets the flag to show request volumes.  This property is observable.\n   *\n   * @type {Boolean}\n   * @default false\n   */\n  this.showRequestVolumes = false;\n\n  var freezeFrame = knockout.observable();\n  knockout.defineProperty(this, \"freezeFrame\", {\n    get: function () {\n      return freezeFrame();\n    },\n    set: function (value) {\n      freezeFrame(value);\n      if (defined(that._tileset)) {\n        that._tileset.debugFreezeFrame = value;\n        that._scene.debugShowFrustumPlanes = value;\n        that._scene.requestRender();\n      }\n    },\n  });\n  /**\n   * Gets or sets the flag to suspend updates.  This property is observable.\n   *\n   * @type {Boolean}\n   * @default false\n   */\n  this.freezeFrame = false;\n\n  knockout.defineProperty(this, \"showOnlyPickedTileDebugLabel\", {\n    get: function () {\n      return showOnlyPickedTileDebugLabel();\n    },\n    set: function (value) {\n      showOnlyPickedTileDebugLabel(value);\n      if (defined(that._tileset)) {\n        that._tileset.debugPickedTileLabelOnly = value;\n        that._scene.requestRender();\n      }\n    },\n  });\n  /**\n   * Gets or sets the flag to show debug labels only for the currently picked tile.  This property is observable.\n   *\n   * @type {Boolean}\n   * @default false\n   */\n  this.showOnlyPickedTileDebugLabel = false;\n\n  var showGeometricError = knockout.observable();\n  knockout.defineProperty(this, \"showGeometricError\", {\n    get: function () {\n      return showGeometricError();\n    },\n    set: function (value) {\n      showGeometricError(value);\n      if (defined(that._tileset)) {\n        that._tileset.debugShowGeometricError = value;\n        that._scene.requestRender();\n      }\n    },\n  });\n  /**\n   * Gets or sets the flag to show tile geometric error.  This property is observable.\n   *\n   * @type {Boolean}\n   * @default false\n   */\n  this.showGeometricError = false;\n\n  var showRenderingStatistics = knockout.observable();\n  knockout.defineProperty(this, \"showRenderingStatistics\", {\n    get: function () {\n      return showRenderingStatistics();\n    },\n    set: function (value) {\n      showRenderingStatistics(value);\n      if (defined(that._tileset)) {\n        that._tileset.debugShowRenderingStatistics = value;\n        that._scene.requestRender();\n      }\n    },\n  });\n  /**\n   * Displays the number of commands, points, triangles and features used per tile.  This property is observable.\n   *\n   * @type {Boolean}\n   * @default false\n   */\n  this.showRenderingStatistics = false;\n\n  var showMemoryUsage = knockout.observable();\n  knockout.defineProperty(this, \"showMemoryUsage\", {\n    get: function () {\n      return showMemoryUsage();\n    },\n    set: function (value) {\n      showMemoryUsage(value);\n      if (defined(that._tileset)) {\n        that._tileset.debugShowMemoryUsage = value;\n        that._scene.requestRender();\n      }\n    },\n  });\n  /**\n   * Displays the memory used per tile.  This property is observable.\n   *\n   * @type {Boolean}\n   * @default false\n   */\n  this.showMemoryUsage = false;\n\n  var showUrl = knockout.observable();\n  knockout.defineProperty(this, \"showUrl\", {\n    get: function () {\n      return showUrl();\n    },\n    set: function (value) {\n      showUrl(value);\n      if (defined(that._tileset)) {\n        that._tileset.debugShowUrl = value;\n        that._scene.requestRender();\n      }\n    },\n  });\n  /**\n   * Gets or sets the flag to show the tile url.  This property is observable.\n   *\n   * @type {Boolean}\n   * @default false\n   */\n  this.showUrl = false;\n\n  var maximumScreenSpaceError = knockout.observable();\n  knockout.defineProperty(this, \"maximumScreenSpaceError\", {\n    get: function () {\n      return maximumScreenSpaceError();\n    },\n    set: function (value) {\n      value = Number(value);\n      if (!isNaN(value)) {\n        maximumScreenSpaceError(value);\n        if (defined(that._tileset)) {\n          that._tileset.maximumScreenSpaceError = value;\n        }\n      }\n    },\n  });\n  /**\n   * Gets or sets the maximum screen space error.  This property is observable.\n   *\n   * @type {Number}\n   * @default 16\n   */\n  this.maximumScreenSpaceError = 16;\n\n  var dynamicScreenSpaceErrorDensity = knockout.observable();\n  knockout.defineProperty(this, \"dynamicScreenSpaceErrorDensity\", {\n    get: function () {\n      return dynamicScreenSpaceErrorDensity();\n    },\n    set: function (value) {\n      value = Number(value);\n      if (!isNaN(value)) {\n        dynamicScreenSpaceErrorDensity(value);\n        if (defined(that._tileset)) {\n          that._tileset.dynamicScreenSpaceErrorDensity = value;\n        }\n      }\n    },\n  });\n  /**\n   * Gets or sets the dynamic screen space error density.  This property is observable.\n   *\n   * @type {Number}\n   * @default 0.00278\n   */\n  this.dynamicScreenSpaceErrorDensity = 0.00278;\n\n  /**\n   * Gets or sets the dynamic screen space error density slider value.\n   * This allows the slider to be exponential because values tend to be closer to 0 than 1.\n   * This property is observable.\n   *\n   * @type {Number}\n   * @default 0.00278\n   */\n  this.dynamicScreenSpaceErrorDensitySliderValue = undefined;\n  knockout.defineProperty(this, \"dynamicScreenSpaceErrorDensitySliderValue\", {\n    get: function () {\n      return Math.pow(dynamicScreenSpaceErrorDensity(), 1 / 6);\n    },\n    set: function (value) {\n      dynamicScreenSpaceErrorDensity(Math.pow(value, 6));\n    },\n  });\n\n  var dynamicScreenSpaceErrorFactor = knockout.observable();\n  knockout.defineProperty(this, \"dynamicScreenSpaceErrorFactor\", {\n    get: function () {\n      return dynamicScreenSpaceErrorFactor();\n    },\n    set: function (value) {\n      value = Number(value);\n      if (!isNaN(value)) {\n        dynamicScreenSpaceErrorFactor(value);\n        if (defined(that._tileset)) {\n          that._tileset.dynamicScreenSpaceErrorFactor = value;\n        }\n      }\n    },\n  });\n  /**\n   * Gets or sets the dynamic screen space error factor.  This property is observable.\n   *\n   * @type {Number}\n   * @default 4.0\n   */\n  this.dynamicScreenSpaceErrorFactor = 4.0;\n\n  var pickTileset = getPickTileset(this);\n  var pickActive = knockout.observable();\n  knockout.defineProperty(this, \"pickActive\", {\n    get: function () {\n      return pickActive();\n    },\n    set: function (value) {\n      pickActive(value);\n      if (value) {\n        that._eventHandler.setInputAction(\n          pickTileset,\n          ScreenSpaceEventType.LEFT_CLICK\n        );\n      } else {\n        that._eventHandler.removeInputAction(ScreenSpaceEventType.LEFT_CLICK);\n      }\n    },\n  });\n\n  var pointCloudShading = knockout.observable();\n  knockout.defineProperty(this, \"pointCloudShading\", {\n    get: function () {\n      return pointCloudShading();\n    },\n    set: function (value) {\n      pointCloudShading(value);\n      if (defined(that._tileset)) {\n        that._tileset.pointCloudShading.attenuation = value;\n      }\n    },\n  });\n  /**\n   * Gets or sets the flag to enable point cloud shading. This property is observable.\n   *\n   * @type {Boolean}\n   * @default false\n   */\n  this.pointCloudShading = false;\n\n  var geometricErrorScale = knockout.observable();\n  knockout.defineProperty(this, \"geometricErrorScale\", {\n    get: function () {\n      return geometricErrorScale();\n    },\n    set: function (value) {\n      value = Number(value);\n      if (!isNaN(value)) {\n        geometricErrorScale(value);\n        if (defined(that._tileset)) {\n          that._tileset.pointCloudShading.geometricErrorScale = value;\n        }\n      }\n    },\n  });\n  /**\n   * Gets or sets the geometric error scale.  This property is observable.\n   *\n   * @type {Number}\n   * @default 1.0\n   */\n  this.geometricErrorScale = 1.0;\n\n  var maximumAttenuation = knockout.observable();\n  knockout.defineProperty(this, \"maximumAttenuation\", {\n    get: function () {\n      return maximumAttenuation();\n    },\n    set: function (value) {\n      value = Number(value);\n      if (!isNaN(value)) {\n        maximumAttenuation(value);\n        if (defined(that._tileset)) {\n          that._tileset.pointCloudShading.maximumAttenuation =\n            value === 0 ? undefined : value;\n        }\n      }\n    },\n  });\n  /**\n   * Gets or sets the maximum attenuation.  This property is observable.\n   *\n   * @type {Number}\n   * @default 0\n   */\n  this.maximumAttenuation = 0;\n\n  var baseResolution = knockout.observable();\n  knockout.defineProperty(this, \"baseResolution\", {\n    get: function () {\n      return baseResolution();\n    },\n    set: function (value) {\n      value = Number(value);\n      if (!isNaN(value)) {\n        baseResolution(value);\n        if (defined(that._tileset)) {\n          that._tileset.pointCloudShading.baseResolution =\n            value === 0 ? undefined : value;\n        }\n      }\n    },\n  });\n  /**\n   * Gets or sets the base resolution.  This property is observable.\n   *\n   * @type {Number}\n   * @default 0\n   */\n  this.baseResolution = 0;\n\n  var eyeDomeLighting = knockout.observable();\n  knockout.defineProperty(this, \"eyeDomeLighting\", {\n    get: function () {\n      return eyeDomeLighting();\n    },\n    set: function (value) {\n      eyeDomeLighting(value);\n      if (defined(that._tileset)) {\n        that._tileset.pointCloudShading.eyeDomeLighting = value;\n      }\n    },\n  });\n  /**\n   * Gets or sets the flag to enable eye dome lighting. This property is observable.\n   *\n   * @type {Boolean}\n   * @default false\n   */\n  this.eyeDomeLighting = false;\n\n  var eyeDomeLightingStrength = knockout.observable();\n  knockout.defineProperty(this, \"eyeDomeLightingStrength\", {\n    get: function () {\n      return eyeDomeLightingStrength();\n    },\n    set: function (value) {\n      value = Number(value);\n      if (!isNaN(value)) {\n        eyeDomeLightingStrength(value);\n        if (defined(that._tileset)) {\n          that._tileset.pointCloudShading.eyeDomeLightingStrength = value;\n        }\n      }\n    },\n  });\n  /**\n   * Gets or sets the eye dome lighting strength.  This property is observable.\n   *\n   * @type {Number}\n   * @default 1.0\n   */\n  this.eyeDomeLightingStrength = 1.0;\n\n  var eyeDomeLightingRadius = knockout.observable();\n  knockout.defineProperty(this, \"eyeDomeLightingRadius\", {\n    get: function () {\n      return eyeDomeLightingRadius();\n    },\n    set: function (value) {\n      value = Number(value);\n      if (!isNaN(value)) {\n        eyeDomeLightingRadius(value);\n        if (defined(that._tileset)) {\n          that._tileset.pointCloudShading.eyeDomeLightingRadius = value;\n        }\n      }\n    },\n  });\n  /**\n   * Gets or sets the eye dome lighting radius.  This property is observable.\n   *\n   * @type {Number}\n   * @default 1.0\n   */\n  this.eyeDomeLightingRadius = 1.0;\n\n  /**\n   * Gets or sets the pick state\n   *\n   * @type {Boolean}\n   * @default false\n   */\n  this.pickActive = false;\n\n  var skipLevelOfDetail = knockout.observable();\n  knockout.defineProperty(this, \"skipLevelOfDetail\", {\n    get: function () {\n      return skipLevelOfDetail();\n    },\n    set: function (value) {\n      skipLevelOfDetail(value);\n      if (defined(that._tileset)) {\n        that._tileset.skipLevelOfDetail = value;\n      }\n    },\n  });\n  /**\n   * Gets or sets the flag to determine if level of detail skipping should be applied during the traversal.\n   * This property is observable.\n   * @type {Boolean}\n   * @default true\n   */\n  this.skipLevelOfDetail = true;\n\n  var skipScreenSpaceErrorFactor = knockout.observable();\n  knockout.defineProperty(this, \"skipScreenSpaceErrorFactor\", {\n    get: function () {\n      return skipScreenSpaceErrorFactor();\n    },\n    set: function (value) {\n      value = Number(value);\n      if (!isNaN(value)) {\n        skipScreenSpaceErrorFactor(value);\n        if (defined(that._tileset)) {\n          that._tileset.skipScreenSpaceErrorFactor = value;\n        }\n      }\n    },\n  });\n  /**\n   * Gets or sets the multiplier defining the minimum screen space error to skip. This property is observable.\n   * @type {Number}\n   * @default 16\n   */\n  this.skipScreenSpaceErrorFactor = 16;\n\n  var baseScreenSpaceError = knockout.observable();\n  knockout.defineProperty(this, \"baseScreenSpaceError\", {\n    get: function () {\n      return baseScreenSpaceError();\n    },\n    set: function (value) {\n      value = Number(value);\n      if (!isNaN(value)) {\n        baseScreenSpaceError(value);\n        if (defined(that._tileset)) {\n          that._tileset.baseScreenSpaceError = value;\n        }\n      }\n    },\n  });\n  /**\n   * Gets or sets the screen space error that must be reached before skipping levels of detail. This property is observable.\n   * @type {Number}\n   * @default 1024\n   */\n  this.baseScreenSpaceError = 1024;\n\n  var skipLevels = knockout.observable();\n  knockout.defineProperty(this, \"skipLevels\", {\n    get: function () {\n      return skipLevels();\n    },\n    set: function (value) {\n      value = Number(value);\n      if (!isNaN(value)) {\n        skipLevels(value);\n        if (defined(that._tileset)) {\n          that._tileset.skipLevels = value;\n        }\n      }\n    },\n  });\n  /**\n   * Gets or sets the constant defining the minimum number of levels to skip when loading tiles. This property is observable.\n   * @type {Number}\n   * @default 1\n   */\n  this.skipLevels = 1;\n\n  var immediatelyLoadDesiredLevelOfDetail = knockout.observable();\n  knockout.defineProperty(this, \"immediatelyLoadDesiredLevelOfDetail\", {\n    get: function () {\n      return immediatelyLoadDesiredLevelOfDetail();\n    },\n    set: function (value) {\n      immediatelyLoadDesiredLevelOfDetail(value);\n      if (defined(that._tileset)) {\n        that._tileset.immediatelyLoadDesiredLevelOfDetail = value;\n      }\n    },\n  });\n  /**\n   * Gets or sets the flag which, when true, only tiles that meet the maximum screen space error will ever be downloaded.\n   * This property is observable.\n   * @type {Boolean}\n   * @default false\n   */\n  this.immediatelyLoadDesiredLevelOfDetail = false;\n\n  var loadSiblings = knockout.observable();\n  knockout.defineProperty(this, \"loadSiblings\", {\n    get: function () {\n      return loadSiblings();\n    },\n    set: function (value) {\n      loadSiblings(value);\n      if (defined(that._tileset)) {\n        that._tileset.loadSiblings = value;\n      }\n    },\n  });\n  /**\n   * Gets or sets the flag which determines whether siblings of visible tiles are always downloaded during traversal.\n   * This property is observable\n   * @type {Boolean}\n   * @default false\n   */\n  this.loadSiblings = false;\n\n  this._style = undefined;\n  this._shouldStyle = false;\n  this._definedProperties = [\n    \"properties\",\n    \"dynamicScreenSpaceError\",\n    \"colorBlendMode\",\n    \"picking\",\n    \"colorize\",\n    \"wireframe\",\n    \"showBoundingVolumes\",\n    \"showContentBoundingVolumes\",\n    \"showRequestVolumes\",\n    \"freezeFrame\",\n    \"maximumScreenSpaceError\",\n    \"dynamicScreenSpaceErrorDensity\",\n    \"baseScreenSpaceError\",\n    \"skipScreenSpaceErrorFactor\",\n    \"skipLevelOfDetail\",\n    \"skipLevels\",\n    \"immediatelyLoadDesiredLevelOfDetail\",\n    \"loadSiblings\",\n    \"dynamicScreenSpaceErrorDensitySliderValue\",\n    \"dynamicScreenSpaceErrorFactor\",\n    \"pickActive\",\n    \"showOnlyPickedTileDebugLabel\",\n    \"showGeometricError\",\n    \"showRenderingStatistics\",\n    \"showMemoryUsage\",\n    \"showUrl\",\n    \"pointCloudShading\",\n    \"geometricErrorScale\",\n    \"maximumAttenuation\",\n    \"baseResolution\",\n    \"eyeDomeLighting\",\n    \"eyeDomeLightingStrength\",\n    \"eyeDomeLightingRadius\",\n  ];\n  this._removePostRenderEvent = scene.postRender.addEventListener(function () {\n    that._update();\n  });\n\n  if (!defined(this._tileset)) {\n    selectTilesetOnHover(this, true);\n  }\n}\n\nObject.defineProperties(Cesium3DTilesInspectorViewModel.prototype, {\n  /**\n   * Gets the scene\n   * @memberof Cesium3DTilesInspectorViewModel.prototype\n   * @type {Scene}\n   * @readonly\n   */\n  scene: {\n    get: function () {\n      return this._scene;\n    },\n  },\n  /**\n   * Gets the performance container\n   * @memberof Cesium3DTilesInspectorViewModel.prototype\n   * @type {HTMLElement}\n   * @readonly\n   */\n  performanceContainer: {\n    get: function () {\n      return this._performanceContainer;\n    },\n  },\n\n  /**\n   * Gets the statistics text.  This property is observable.\n   * @memberof Cesium3DTilesInspectorViewModel.prototype\n   * @type {String}\n   * @readonly\n   */\n  statisticsText: {\n    get: function () {\n      return this._statisticsText;\n    },\n  },\n  /**\n   * Gets the pick statistics text.  This property is observable.\n   * @memberof Cesium3DTilesInspectorViewModel.prototype\n   * @type {String}\n   * @readonly\n   */\n  pickStatisticsText: {\n    get: function () {\n      return this._pickStatisticsText;\n    },\n  },\n\n  /**\n   * Gets the available blend modes\n   * @memberof Cesium3DTilesInspectorViewModel.prototype\n   * @type {Object[]}\n   * @readonly\n   */\n  colorBlendModes: {\n    get: function () {\n      return colorBlendModes;\n    },\n  },\n\n  /**\n   * Gets the editor error message\n   * @memberof Cesium3DTilesInspectorViewModel.prototype\n   * @type {String}\n   * @readonly\n   */\n  editorError: {\n    get: function () {\n      return this._editorError;\n    },\n  },\n\n  /**\n   * Gets or sets the tileset of the view model.\n   * @memberof Cesium3DTilesInspectorViewModel.prototype\n   * @type {Cesium3DTileset}\n   */\n  tileset: {\n    get: function () {\n      return this._tileset;\n    },\n    set: function (tileset) {\n      this._tileset = tileset;\n      this._style = undefined;\n      this.styleString = \"{}\";\n      this.feature = undefined;\n      this.tile = undefined;\n\n      if (defined(tileset)) {\n        var that = this;\n        tileset.readyPromise.then(function (t) {\n          if (!that.isDestroyed()) {\n            that._properties(t.properties);\n          }\n        });\n\n        // update tileset with existing settings\n        var settings = [\n          \"colorize\",\n          \"wireframe\",\n          \"showBoundingVolumes\",\n          \"showContentBoundingVolumes\",\n          \"showRequestVolumes\",\n          \"freezeFrame\",\n          \"showOnlyPickedTileDebugLabel\",\n          \"showGeometricError\",\n          \"showRenderingStatistics\",\n          \"showMemoryUsage\",\n          \"showUrl\",\n        ];\n        var length = settings.length;\n        for (var i = 0; i < length; ++i) {\n          var setting = settings[i];\n          //eslint-disable-next-line no-self-assign\n          this[setting] = this[setting];\n        }\n\n        // update view model with existing tileset settings\n        this.maximumScreenSpaceError = tileset.maximumScreenSpaceError;\n        this.dynamicScreenSpaceError = tileset.dynamicScreenSpaceError;\n        this.dynamicScreenSpaceErrorDensity =\n          tileset.dynamicScreenSpaceErrorDensity;\n        this.dynamicScreenSpaceErrorFactor =\n          tileset.dynamicScreenSpaceErrorFactor;\n        this.colorBlendMode = tileset.colorBlendMode;\n        this.skipLevelOfDetail = tileset.skipLevelOfDetail;\n        this.skipScreenSpaceErrorFactor = tileset.skipScreenSpaceErrorFactor;\n        this.baseScreenSpaceError = tileset.baseScreenSpaceError;\n        this.skipLevels = tileset.skipLevels;\n        this.immediatelyLoadDesiredLevelOfDetail =\n          tileset.immediatelyLoadDesiredLevelOfDetail;\n        this.loadSiblings = tileset.loadSiblings;\n\n        var pointCloudShading = tileset.pointCloudShading;\n        this.pointCloudShading = pointCloudShading.attenuation;\n        this.geometricErrorScale = pointCloudShading.geometricErrorScale;\n        this.maximumAttenuation = pointCloudShading.maximumAttenuation\n          ? pointCloudShading.maximumAttenuation\n          : 0.0;\n        this.baseResolution = pointCloudShading.baseResolution\n          ? pointCloudShading.baseResolution\n          : 0.0;\n        this.eyeDomeLighting = pointCloudShading.eyeDomeLighting;\n        this.eyeDomeLightingStrength =\n          pointCloudShading.eyeDomeLightingStrength;\n        this.eyeDomeLightingRadius = pointCloudShading.eyeDomeLightingRadius;\n\n        this._scene.requestRender();\n      } else {\n        this._properties({});\n      }\n\n      this._statisticsText = getStatistics(tileset, false);\n      this._pickStatisticsText = getStatistics(tileset, true);\n      selectTilesetOnHover(this, false);\n    },\n  },\n\n  /**\n   * Gets the current feature of the view model.\n   * @memberof Cesium3DTilesInspectorViewModel.prototype\n   * @type {Cesium3DTileFeature}\n   */\n  feature: {\n    get: function () {\n      return this._feature;\n    },\n    set: function (feature) {\n      if (this._feature === feature) {\n        return;\n      }\n      var currentFeature = this._feature;\n      if (defined(currentFeature) && !currentFeature.content.isDestroyed()) {\n        // Restore original color to feature that is no longer selected\n        if (!this.colorize && defined(this._style)) {\n          currentFeature.color = defined(this._style.color)\n            ? this._style.color.evaluateColor(currentFeature, scratchColor)\n            : Color.WHITE;\n        } else {\n          currentFeature.color = oldColor;\n        }\n        this._scene.requestRender();\n      }\n      if (defined(feature)) {\n        // Highlight new feature\n        Color.clone(feature.color, oldColor);\n        feature.color = highlightColor;\n        this._scene.requestRender();\n      }\n      this._feature = feature;\n    },\n  },\n\n  /**\n   * Gets the current tile of the view model\n   * @memberof Cesium3DTilesInspectorViewModel.prototype\n   * @type {Cesium3DTile}\n   */\n  tile: {\n    get: function () {\n      return this._tile;\n    },\n    set: function (tile) {\n      if (this._tile === tile) {\n        return;\n      }\n      var currentTile = this._tile;\n\n      if (\n        defined(currentTile) &&\n        !currentTile.isDestroyed() &&\n        !hasFeatures(currentTile.content)\n      ) {\n        // Restore original color to tile that is no longer selected\n        currentTile.color = oldColor;\n        this._scene.requestRender();\n      }\n\n      if (defined(tile) && !hasFeatures(tile.content)) {\n        // Highlight new tile\n        Color.clone(tile.color, oldColor);\n        tile.color = highlightColor;\n        this._scene.requestRender();\n      }\n      this._tile = tile;\n    },\n  },\n});\n\nfunction hasFeatures(content) {\n  if (content.featuresLength > 0) {\n    return true;\n  }\n  var innerContents = content.innerContents;\n  if (defined(innerContents)) {\n    var length = innerContents.length;\n    for (var i = 0; i < length; ++i) {\n      if (!hasFeatures(innerContents[i])) {\n        return false;\n      }\n    }\n    return true;\n  }\n  return false;\n}\n\n/**\n * Toggles the pick tileset mode\n */\nCesium3DTilesInspectorViewModel.prototype.togglePickTileset = function () {\n  this.pickActive = !this.pickActive;\n};\n\n/**\n * Toggles the inspector visibility\n */\nCesium3DTilesInspectorViewModel.prototype.toggleInspector = function () {\n  this.inspectorVisible = !this.inspectorVisible;\n};\n\n/**\n * Toggles the visibility of the tileset section\n */\nCesium3DTilesInspectorViewModel.prototype.toggleTileset = function () {\n  this.tilesetVisible = !this.tilesetVisible;\n};\n\n/**\n * Toggles the visibility of the display section\n */\nCesium3DTilesInspectorViewModel.prototype.toggleDisplay = function () {\n  this.displayVisible = !this.displayVisible;\n};\n\n/**\n * Toggles the visibility of the update section\n */\nCesium3DTilesInspectorViewModel.prototype.toggleUpdate = function () {\n  this.updateVisible = !this.updateVisible;\n};\n\n/**\n * Toggles the visibility of the logging section\n */\nCesium3DTilesInspectorViewModel.prototype.toggleLogging = function () {\n  this.loggingVisible = !this.loggingVisible;\n};\n\n/**\n * Toggles the visibility of the style section\n */\nCesium3DTilesInspectorViewModel.prototype.toggleStyle = function () {\n  this.styleVisible = !this.styleVisible;\n};\n\n/**\n * Toggles the visibility of the tile Debug Info section\n */\nCesium3DTilesInspectorViewModel.prototype.toggleTileDebugLabels = function () {\n  this.tileDebugLabelsVisible = !this.tileDebugLabelsVisible;\n};\n\n/**\n * Toggles the visibility of the optimization section\n */\nCesium3DTilesInspectorViewModel.prototype.toggleOptimization = function () {\n  this.optimizationVisible = !this.optimizationVisible;\n};\n\n/**\n * Trims tile cache\n */\nCesium3DTilesInspectorViewModel.prototype.trimTilesCache = function () {\n  if (defined(this._tileset)) {\n    this._tileset.trimLoadedTiles();\n  }\n};\n\n/**\n * Compiles the style in the style editor.\n */\nCesium3DTilesInspectorViewModel.prototype.compileStyle = function () {\n  var tileset = this._tileset;\n  if (!defined(tileset) || this.styleString === JSON.stringify(tileset.style)) {\n    return;\n  }\n  this._editorError = \"\";\n  try {\n    if (this.styleString.length === 0) {\n      this.styleString = \"{}\";\n    }\n    this._style = new Cesium3DTileStyle(JSON.parse(this.styleString));\n    this._shouldStyle = true;\n    this._scene.requestRender();\n  } catch (err) {\n    this._editorError = err.toString();\n  }\n\n  // set feature again so pick coloring is set\n  this.feature = this._feature;\n  this.tile = this._tile;\n};\n\n/**\n * Handles key press events on the style editor.\n */\nCesium3DTilesInspectorViewModel.prototype.styleEditorKeyPress = function (\n  sender,\n  event\n) {\n  if (event.keyCode === 9) {\n    //tab\n    event.preventDefault();\n    var textArea = event.target;\n    var start = textArea.selectionStart;\n    var end = textArea.selectionEnd;\n    var newEnd = end;\n    var selected = textArea.value.slice(start, end);\n    var lines = selected.split(\"\\n\");\n    var length = lines.length;\n    var i;\n    if (!event.shiftKey) {\n      for (i = 0; i < length; ++i) {\n        lines[i] = \"  \" + lines[i];\n        newEnd += 2;\n      }\n    } else {\n      for (i = 0; i < length; ++i) {\n        if (lines[i][0] === \" \") {\n          if (lines[i][1] === \" \") {\n            lines[i] = lines[i].substr(2);\n            newEnd -= 2;\n          } else {\n            lines[i] = lines[i].substr(1);\n            newEnd -= 1;\n          }\n        }\n      }\n    }\n    var newText = lines.join(\"\\n\");\n    textArea.value =\n      textArea.value.slice(0, start) + newText + textArea.value.slice(end);\n    textArea.selectionStart = start !== end ? start : newEnd;\n    textArea.selectionEnd = newEnd;\n  } else if (event.ctrlKey && (event.keyCode === 10 || event.keyCode === 13)) {\n    //ctrl + enter\n    this.compileStyle();\n  }\n  return true;\n};\n\n/**\n * Updates the values of view model\n * @private\n */\nCesium3DTilesInspectorViewModel.prototype._update = function () {\n  var tileset = this._tileset;\n\n  if (this.performance) {\n    this._performanceDisplay.update();\n  }\n\n  if (defined(tileset)) {\n    if (tileset.isDestroyed()) {\n      this.tile = undefined;\n      this.feature = undefined;\n      this.tileset = undefined;\n      return;\n    }\n\n    var style = tileset.style;\n    if (this._style !== tileset.style) {\n      if (this._shouldStyle) {\n        tileset.style = this._style;\n        this._shouldStyle = false;\n      } else {\n        this._style = style;\n        this.styleString = JSON.stringify(style.style, null, \"  \");\n      }\n    }\n  }\n  if (this.showStatistics) {\n    this._statisticsText = getStatistics(tileset, false);\n    this._pickStatisticsText = getStatistics(tileset, true);\n  }\n};\n\n/**\n * @returns {Boolean} true if the object has been destroyed, false otherwise.\n */\nCesium3DTilesInspectorViewModel.prototype.isDestroyed = function () {\n  return false;\n};\n\n/**\n * Destroys the widget.  Should be called if permanently\n * removing the widget from layout.\n */\nCesium3DTilesInspectorViewModel.prototype.destroy = function () {\n  this._eventHandler.destroy();\n  this._removePostRenderEvent();\n\n  var that = this;\n  this._definedProperties.forEach(function (property) {\n    knockout.getObservable(that, property).dispose();\n  });\n\n  return destroyObject(this);\n};\n\n/**\n * Generates an HTML string of the statistics\n *\n * @function\n * @param {Cesium3DTileset} tileset The tileset\n * @param {Boolean} isPick Whether this is getting the statistics for the pick pass\n * @returns {String} The formatted statistics\n */\nCesium3DTilesInspectorViewModel.getStatistics = getStatistics;\nexport default Cesium3DTilesInspectorViewModel;\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import defined from \"./defined.js\";\nvar implementation;\n\nif (typeof cancelAnimationFrame !== \"undefined\") {\n  implementation = cancelAnimationFrame;\n}\n\n(function () {\n  // look for vendor prefixed function\n  if (!defined(implementation) && typeof window !== \"undefined\") {\n    var vendors = [\"webkit\", \"moz\", \"ms\", \"o\"];\n    var i = 0;\n    var len = vendors.length;\n\n    while (i < len && !defined(implementation)) {\n      implementation = window[vendors[i] + \"CancelAnimationFrame\"];\n\n      if (!defined(implementation)) {\n        implementation = window[vendors[i] + \"CancelRequestAnimationFrame\"];\n      }\n\n      ++i;\n    }\n  } // otherwise, assume requestAnimationFrame is based on setTimeout, so use clearTimeout\n\n\n  if (!defined(implementation)) {\n    implementation = clearTimeout;\n  }\n})();\n/**\n * A browser-independent function to cancel an animation frame requested using {@link requestAnimationFrame}.\n *\n * @exports cancelAnimationFrame\n *\n * @param {Number} requestID The value returned by {@link requestAnimationFrame}.\n *\n * @see {@link http://www.w3.org/TR/animation-timing/#the-WindowAnimationTiming-interface|The WindowAnimationTiming interface}\n */\n\n\nfunction cancelAnimationFramePolyfill(requestID) {\n  // we need this extra wrapper function because the native cancelAnimationFrame\n  // functions must be invoked on the global scope (window), which is not the case\n  // if invoked as Cesium.cancelAnimationFrame(requestID)\n  implementation(requestID);\n}\n\nexport default cancelAnimationFramePolyfill;","map":{"version":3,"sources":["C:/Users/passa/Desktop/WaterLevelReact/node_modules/cesium/Source/Core/cancelAnimationFrame.js"],"names":["defined","implementation","cancelAnimationFrame","window","vendors","i","len","length","clearTimeout","cancelAnimationFramePolyfill","requestID"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,cAApB;AAEA,IAAIC,cAAJ;;AACA,IAAI,OAAOC,oBAAP,KAAgC,WAApC,EAAiD;AAC/CD,EAAAA,cAAc,GAAGC,oBAAjB;AACD;;AAED,CAAC,YAAY;AACX;AACA,MAAI,CAACF,OAAO,CAACC,cAAD,CAAR,IAA4B,OAAOE,MAAP,KAAkB,WAAlD,EAA+D;AAC7D,QAAIC,OAAO,GAAG,CAAC,QAAD,EAAW,KAAX,EAAkB,IAAlB,EAAwB,GAAxB,CAAd;AACA,QAAIC,CAAC,GAAG,CAAR;AACA,QAAIC,GAAG,GAAGF,OAAO,CAACG,MAAlB;;AACA,WAAOF,CAAC,GAAGC,GAAJ,IAAW,CAACN,OAAO,CAACC,cAAD,CAA1B,EAA4C;AAC1CA,MAAAA,cAAc,GAAGE,MAAM,CAACC,OAAO,CAACC,CAAD,CAAP,GAAa,sBAAd,CAAvB;;AACA,UAAI,CAACL,OAAO,CAACC,cAAD,CAAZ,EAA8B;AAC5BA,QAAAA,cAAc,GAAGE,MAAM,CAACC,OAAO,CAACC,CAAD,CAAP,GAAa,6BAAd,CAAvB;AACD;;AACD,QAAEA,CAAF;AACD;AACF,GAbU,CAeX;;;AACA,MAAI,CAACL,OAAO,CAACC,cAAD,CAAZ,EAA8B;AAC5BA,IAAAA,cAAc,GAAGO,YAAjB;AACD;AACF,CAnBD;AAqBA;;;;;;;;;;;AASA,SAASC,4BAAT,CAAsCC,SAAtC,EAAiD;AAC/C;AACA;AACA;AACAT,EAAAA,cAAc,CAACS,SAAD,CAAd;AACD;;AACD,eAAeD,4BAAf","sourcesContent":["import defined from \"./defined.js\";\n\nvar implementation;\nif (typeof cancelAnimationFrame !== \"undefined\") {\n  implementation = cancelAnimationFrame;\n}\n\n(function () {\n  // look for vendor prefixed function\n  if (!defined(implementation) && typeof window !== \"undefined\") {\n    var vendors = [\"webkit\", \"moz\", \"ms\", \"o\"];\n    var i = 0;\n    var len = vendors.length;\n    while (i < len && !defined(implementation)) {\n      implementation = window[vendors[i] + \"CancelAnimationFrame\"];\n      if (!defined(implementation)) {\n        implementation = window[vendors[i] + \"CancelRequestAnimationFrame\"];\n      }\n      ++i;\n    }\n  }\n\n  // otherwise, assume requestAnimationFrame is based on setTimeout, so use clearTimeout\n  if (!defined(implementation)) {\n    implementation = clearTimeout;\n  }\n})();\n\n/**\n * A browser-independent function to cancel an animation frame requested using {@link requestAnimationFrame}.\n *\n * @exports cancelAnimationFrame\n *\n * @param {Number} requestID The value returned by {@link requestAnimationFrame}.\n *\n * @see {@link http://www.w3.org/TR/animation-timing/#the-WindowAnimationTiming-interface|The WindowAnimationTiming interface}\n */\nfunction cancelAnimationFramePolyfill(requestID) {\n  // we need this extra wrapper function because the native cancelAnimationFrame\n  // functions must be invoked on the global scope (window), which is not the case\n  // if invoked as Cesium.cancelAnimationFrame(requestID)\n  implementation(requestID);\n}\nexport default cancelAnimationFramePolyfill;\n"]},"metadata":{},"sourceType":"module"}
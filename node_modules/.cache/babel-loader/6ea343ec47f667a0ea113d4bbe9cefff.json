{"ast":null,"code":"//This file is automatically rebuilt by the Cesium build process.\nexport default \"varying vec4 positionEC;\\n\\\n\\n\\\nvoid main()\\n\\\n{\\n\\\n    vec3 direction = normalize(positionEC.xyz);\\n\\\n    czm_ray ray = czm_ray(vec3(0.0), direction);\\n\\\n\\n\\\n    vec3 ellipsoid_center = czm_view[3].xyz;\\n\\\n\\n\\\n    czm_raySegment intersection = czm_rayEllipsoidIntersectionInterval(ray, ellipsoid_center, czm_ellipsoidInverseRadii);\\n\\\n    if (!czm_isEmpty(intersection))\\n\\\n    {\\n\\\n        gl_FragColor = vec4(1.0, 1.0, 0.0, 1.0);\\n\\\n    }\\n\\\n    else\\n\\\n    {\\n\\\n        discard;\\n\\\n    }\\n\\\n\\n\\\n    czm_writeLogDepth();\\n\\\n}\\n\\\n\";","map":{"version":3,"sources":["C:/Users/passa/Desktop/WaterDeployTrial/node_modules/cesium/Source/Shaders/DepthPlaneFS.js"],"names":[],"mappings":"AAAA;AACA,eAAe;;;;;;;;;;;;;;;;;;;;;CAAf","sourcesContent":["//This file is automatically rebuilt by the Cesium build process.\nexport default \"varying vec4 positionEC;\\n\\\n\\n\\\nvoid main()\\n\\\n{\\n\\\n    vec3 direction = normalize(positionEC.xyz);\\n\\\n    czm_ray ray = czm_ray(vec3(0.0), direction);\\n\\\n\\n\\\n    vec3 ellipsoid_center = czm_view[3].xyz;\\n\\\n\\n\\\n    czm_raySegment intersection = czm_rayEllipsoidIntersectionInterval(ray, ellipsoid_center, czm_ellipsoidInverseRadii);\\n\\\n    if (!czm_isEmpty(intersection))\\n\\\n    {\\n\\\n        gl_FragColor = vec4(1.0, 1.0, 0.0, 1.0);\\n\\\n    }\\n\\\n    else\\n\\\n    {\\n\\\n        discard;\\n\\\n    }\\n\\\n\\n\\\n    czm_writeLogDepth();\\n\\\n}\\n\\\n\";\n"]},"metadata":{},"sourceType":"module"}